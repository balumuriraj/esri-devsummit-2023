import{e as r,y as o,n as c}from"./cast-fcb46737.js";import{a as n}from"./Error-ec6249b9.js";import"./typedArrayUtil-4d7bb04c.js";import"./ArrayPool-a8ee9378.js";import{g as f}from"./OperationalLayer-97084f13.js";import{l as x}from"./ExportWMSImageParameters-e7eb0d55.js";const F=h=>{let e=class extends h{initialize(){this.exportImageParameters=new x({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var t;return(t=this.exportImageParameters)==null||t.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(t){const{layer:i}=this;if(!t)return Promise.reject(new n("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i}));const{popupEnabled:m}=i;if(!m)return Promise.reject(new n("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:m}));const u=this.createFetchPopupFeaturesQuery(t);if(!u)return Promise.resolve([]);const{extent:a,width:s,height:p,x:l,y}=u;if(!(a&&s&&p))throw new n("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:a,width:s,height:p});return i.fetchFeatureInfo(a,s,p,l,y)}};return r([o()],e.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],e.prototype,"exportImageVersion",null),r([o()],e.prototype,"layer",void 0),r([o(f)],e.prototype,"timeExtent",void 0),e=r([c("esri.layers.mixins.WMSLayerView")],e),e};export{F as a};
