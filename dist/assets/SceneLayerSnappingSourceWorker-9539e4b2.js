import{e as w,n as v}from"./cast-fcb46737.js";import{t as _,i as L}from"./typedArrayUtil-4d7bb04c.js";import{f as V}from"./promiseUtils-1e54421e.js";import"./Error-ec6249b9.js";import"./ArrayPool-a8ee9378.js";import"./string-a318751c.js";import{q as l,x as u,u as h}from"./vec3-e93e648f.js";import{n as d,t as c}from"./vec3f64-2f9cef06.js";import{v as j,b as $,j as P}from"./lineSegment-10422ca0.js";import{R as S,g,N as b}from"./sphere-2af0d852.js";import{q as C}from"./QueryEngineResult-8f90b8dc.js";import{G as E}from"./Octree-0a267ea2.js";import{m as I}from"./edgeProcessing-f733ce76.js";import"./nextTick-3ee5a785.js";import"./common-c186b691.js";import"./mathUtils-b4bb77e2.js";import"./vec4-790471c0.js";import"./mat4-44a0988f.js";import"./vec4f64-e407da96.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3f64-c6305894.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./vec2f64-30dc1443.js";import"./preload-helper-3bce6601.js";import"./Polyline-ff2d7c6b.js";import"./Extent-da876e26.js";import"./Ellipsoid-89682c5e.js";import"./quantizationUtils-4dd81f85.js";import"./jsonUtils-229211af.js";import"./ItemCache-fd3aceaf.js";import"./MemCache-18a255ed.js";import"./WhereClause-d4b8b019.js";import"./utils-b34fcd9d.js";import"./generateRendererUtils-7252b5e6.js";import"./jsonMap-7b8332c9.js";import"./colorRamps-9dac42c1.js";import"./Color-fb64d77d.js";import"./colorUtils-639f4d25.js";import"./enumeration-3a03bd31.js";import"./Symbol-f93ed9fd.js";import"./projectionSupport-aa5eaa0d.js";import"./projection-290b739f.js";import"./unitUtils-45d1147c.js";import"./SimpleObservable-23231131.js";import"./assets-8d3e737a.js";import"./request-6fc81c4c.js";import"./aaBoundingRect-193543b5.js";import"./zscale-89472cba.js";import"./json-48e3ea08.js";import"./SnappingCandidate-970faec6.js";import"./utils-511aa5f5.js";import"./normalizeUtils-27e29a72.js";import"./geometry-b7901087.js";import"./typeUtils-35750739.js";import"./featureConversionUtils-03a03f40.js";import"./OptimizedFeature-4ab8d380.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./fieldUtils-7f54c4b1.js";import"./arcadeOnDemand-281a01eb.js";import"./plane-b575face.js";import"./Util-a48361c6.js";import"./deduplicate-03981d62.js";import"./InterleavedLayout-984d67b2.js";import"./BufferView-903d1848.js";import"./vec2-528adfe4.js";import"./types-e1c0a5bf.js";import"./VertexAttribute-9c5c630d.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";const T=1e3;function N(t,o,i){const r=S(),n=g(r);return l(n,n,t,.5),l(n,n,o,.5),r[3]=u(n,t),h(n,n,i),r}let f=class{constructor(){this._idToComponent=new Map,this._components=new E(t=>t.bounds),this._edges=new E(t=>t.bounds),this._tmpLineSegment=j(),this._tmpP1=d(),this._tmpP2=d(),this._tmpP3=d(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),V(o),await this._ensureEdgeLocations(t,o);const i=[];return this._edges.forEachNeighbor(r=>(this._addCandidates(t,r,i),i.length<T),t.bounds),{result:{candidates:i}}}async _ensureEdgeLocations(t,o){const i=[];if(this._components.forEachNeighbor(e=>{if(_(e.info)){const{id:m,uid:s}=e;i.push({id:m,uid:s})}return!0},t.bounds),!i.length)return;const r={components:i},n=await this.remoteClient.invoke("fetchAllEdgeLocations",r,L(o,{}));for(const e of n.components)this._setFetchEdgeLocations(e)}async add(t){const o=new a(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const i=[];this._edges.forEachNeighbor(r=>(r.component===o&&i.push(r),!0),o.bounds),this._edges.remove(i),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(_(o)||t.uid!==o.uid)return;const i=I.createView(t.locations),r=new Array(i.count),n=d(),e=d();for(let p=0;p<i.count;p++){i.position0.getVec(p,n),i.position1.getVec(p,e);const x=N(n,e,t.origin),y=new k(o,p,x);r[p]=y}this._edges.add(r);const{objectIds:m,origin:s}=t;o.info={locations:i,objectIds:m,origin:s}}_addCandidates(t,o,i){const{locations:r,origin:n,objectIds:e}=o.component.info,m=r.position0.getVec(o.index,this._tmpP1),s=r.position1.getVec(o.index,this._tmpP2);h(m,m,n),h(s,s,n);const p=e[r.componentIndex.get(o.index)];this._addEdgeCandidate(t,p,m,s,i),this._addVertexCandidate(t,p,m,i),this._addVertexCandidate(t,p,s,i)}_addEdgeCandidate(t,o,i,r,n){if(!(t.types&C.EDGE))return;const e=g(t.bounds),m=$(i,r,this._tmpLineSegment),s=P(m,e,this._tmpP3);if(!b(t.bounds,s))return null;n.push({type:"edge",objectId:o,target:c(s),distance:u(e,s),start:c(i),end:c(r)})}_addVertexCandidate(t,o,i,r){if(!(t.types&C.VERTEX))return;const n=g(t.bounds);if(!b(t.bounds,i))return null;r.push({type:"vertex",objectId:o,target:c(i),distance:u(n,i)})}};f=w([v("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],f);const Ut=f;class a{constructor(o,i){this.id=o,this.bounds=i,this.info=null,this.uid=++a.uid}}a.uid=0;class k{constructor(o,i,r){this.component=o,this.index=i,this.bounds=r}}export{Ut as default};
