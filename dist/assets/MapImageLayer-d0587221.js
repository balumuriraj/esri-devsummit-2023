import{O as b,K as f,e as o,y as p,n as S}from"./cast-fcb46737.js";import{U as g}from"./request-6fc81c4c.js";import{T as w}from"./TimeExtent-23e282b9.js";import{a as v}from"./Error-ec6249b9.js";import{a as I}from"./HandleOwner-9b396af1.js";import{n as O}from"./loadAll-b5bfa7ab.js";import{r as $}from"./typedArrayUtil-4d7bb04c.js";import{O as E}from"./MultiOriginJSONSupport-aae3bc0c.js";import{w as T,j as M}from"./promiseUtils-1e54421e.js";import{T as L}from"./ArrayPool-a8ee9378.js";import{a as P,o as j,r as N}from"./Extent-da876e26.js";import{i as R}from"./scaleUtils-93ad8d0c.js";import{b as U}from"./Layer-5ffe0eda.js";import{i as F}from"./APIKeyMixin-a0a8917a.js";import{E as J,y as q,z as A}from"./SublayersOwner-105857bb.js";import{p as k}from"./ArcGISService-21dc1d06.js";import{n as _}from"./BlendLayer-20d0571b.js";import{o as z}from"./CustomParametersMixin-47aab0a6.js";import{c as V,f as B}from"./OperationalLayer-97084f13.js";import{v as K}from"./PortalLayer-b2643f87.js";import{p as C}from"./RefreshableLayer-7f154951.js";import{t as D}from"./ScaleRangeLayer-4be07229.js";import{a as G}from"./TemporalLayer-61549309.js";import{c as H}from"./ExportImageParameters-4b588db2.js";import{n as x}from"./sublayerUtils-96c8a85b.js";import{e as W}from"./versionUtils-fd91f55f.js";import"./string-a318751c.js";import"./nextTick-3ee5a785.js";import"./preload-helper-3bce6601.js";import"./reactiveUtils-4dabbb80.js";import"./asyncUtils-437defc4.js";import"./Collection-910b6f71.js";import"./Evented-a45c8b0f.js";import"./SimpleObservable-23231131.js";import"./Loadable-268c900a.js";import"./Promise-376ab9f6.js";import"./Ellipsoid-89682c5e.js";import"./unitUtils-45d1147c.js";import"./jsonMap-7b8332c9.js";import"./geometry-b7901087.js";import"./Polyline-ff2d7c6b.js";import"./typeUtils-35750739.js";import"./Identifiable-bfe1ff30.js";import"./Version-2946cc03.js";import"./CollectionFlattener-8f4d518b.js";import"./PopupTemplate-40f3c9aa.js";import"./Clonable-545593ce.js";import"./fieldUtils-7f54c4b1.js";import"./arcadeOnDemand-281a01eb.js";import"./enumeration-3a03bd31.js";import"./number-27cf8195.js";import"./locale-30120714.js";import"./UniqueValueRenderer-08f8851c.js";import"./symbols-f8232671.js";import"./CIMSymbol-539bd447.js";import"./Symbol-f93ed9fd.js";import"./Color-fb64d77d.js";import"./colorUtils-639f4d25.js";import"./mathUtils-b4bb77e2.js";import"./vec3-e93e648f.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-1f7f5126.js";import"./symbolLayerUtils3D-76acc268.js";import"./aaBoundingBox-657a9b82.js";import"./aaBoundingRect-193543b5.js";import"./persistableUrlUtils-5f719c3b.js";import"./Symbol3DAnchorPosition2D-5726d999.js";import"./collectionUtils-803d9ba8.js";import"./Portal-2bb189b3.js";import"./PortalGroup-8e41557a.js";import"./PortalUser-659cc1d2.js";import"./LegendOptions-010d0873.js";import"./diffUtils-68b89c71.js";import"./colorRamps-9dac42c1.js";import"./sizeVariableUtils-d4870b0d.js";import"./Graphic-f0e54e86.js";import"./jsonUtils-229211af.js";import"./compilerUtils-18d58939.js";import"./lengthUtils-fa751420.js";import"./jsonUtils-0ff4ff96.js";import"./styleUtils-22b14a8b.js";import"./jsonUtils-f5674613.js";import"./DictionaryLoader-1cbfea53.js";import"./LRUCache-64ec42ee.js";import"./MemCache-18a255ed.js";import"./deprecate-035b199e.js";import"./heatmapUtils-aaea3f32.js";import"./vec4f64-e407da96.js";import"./LayerFloorInfo-54b916a2.js";import"./arcgisLayerUrl-c09f09b4.js";import"./FeatureType-34d71ade.js";import"./Field-61ec9870.js";import"./fieldType-f31285f7.js";import"./FeatureTemplate-c1d0bb70.js";import"./FieldsIndex-f104cc5f.js";import"./labelingInfo-607e66b8.js";import"./labelUtils-3108e8d7.js";import"./defaultsJSON-59981e75.js";import"./Query-b96bcde0.js";import"./popupUtils-86dc6b94.js";import"./parser-498c8be0.js";import"./mat4f32-77b3d8ac.js";import"./mat4-44a0988f.js";import"./ElevationInfo-215614d8.js";import"./PortalItem-bb7e98a6.js";import"./assets-8d3e737a.js";import"./TimeInfo-1d30dc7c.js";import"./floorFilterUtils-080a7cd2.js";let e=class extends _(G(D(J(q(k(V(K(E(C(F(z(I(U))))))))))))){constructor(...t){super(...t),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(t,i){return typeof t=="string"?{url:t,...i}:t}load(t){const i=$(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},t).catch(T).then(()=>this._fetchService(i))),Promise.resolve(this)}readImageFormat(t,i){const m=i.supportedImageFormatTypes;return m&&m.includes("PNG32")?"png32":"png24"}writeSublayers(t,i,m,r){if(!this.loaded||!t)return;const a=t.slice().reverse().flatten(({sublayers:s})=>s&&s.toArray().reverse()).toArray();let n=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const s=b(r.origin);if(s===f.PORTAL_ITEM){const c=this.createSublayersForOrigin("service").sublayers;n=x(a,c,f.SERVICE)}else if(s>f.PORTAL_ITEM){const c=this.createSublayersForOrigin("portal-item");n=x(a,c.sublayers,b(c.origin))}}const l=[],y={writeSublayerStructure:n,...r};let h=n;a.forEach(s=>{const c=s.write({},y);l.push(c),h=h||s.originOf("visible")==="user"}),l.some(s=>Object.keys(s).length>1)&&(i.layers=l),h&&(i.visibleLayers=a.filter(s=>s.visible).map(s=>s.id))}createExportImageParameters(t,i,m,r){const a=r&&r.pixelRatio||1;t&&this.version>=10&&(t=t.clone().shiftCentralMeridian());const n=new H({layer:this,floors:r==null?void 0:r.floors,scale:R({extent:t,width:i})*a}),l=n.toJSON();n.destroy();const y=!r||!r.rotation||this.version<10.3?{}:{rotation:-r.rotation},h=t&&t.spatialReference,s=h.wkid||JSON.stringify(h.toJSON());l.dpi*=a;const c={};if(r!=null&&r.timeExtent){const{start:u,end:d}=r.timeExtent.toJSON();c.time=u&&d&&u===d?""+u:`${u??"null"},${d??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(c.time="null,null");return{bbox:t&&t.xmin+","+t.ymin+","+t.xmax+","+t.ymax,bboxSR:s,imageSR:s,size:i+","+m,...l,...y,...c}}async fetchImage(t,i,m,r){return this._fetchImage("image",t,i,m,r)}async fetchImageBitmap(t,i,m,r){const a=await this._fetchImage("blob",t,i,m,r);return createImageBitmap(a)}async fetchRecomputedExtents(t={}){const i={...t,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:m}=await g(this.url,i),{extent:r,fullExtent:a,timeExtent:n}=m,l=r||a;return{fullExtent:l&&P.fromJSON(l),timeExtent:n&&w.fromJSON({start:n[0],end:n[1]})}}loadAll(){return O(this,t=>{t(this.allSublayers)})}serviceSupportsSpatialReference(t){return W(this,t)}async _fetchImage(t,i,m,r,a){const n={responseType:t,signal:(a==null?void 0:a.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(i,m,r,a),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(n.query.dynamicLayers!=null&&!this.capabilities.exportMap.supportsDynamicLayers)throw new v("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query});try{const{data:y}=await g(l,n);return y}catch(y){throw M(y)?y:new v("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:y})}}async _fetchService(t){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:i,ssl:m}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:t});m&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=i,this.read(i,{origin:"service",url:this.parsedUrl})}};o([p({type:Boolean})],e.prototype,"datesInUnknownTimezone",void 0),o([p()],e.prototype,"dpi",void 0),o([p()],e.prototype,"gdbVersion",void 0),o([p()],e.prototype,"imageFormat",void 0),o([j("imageFormat",["supportedImageFormatTypes"])],e.prototype,"readImageFormat",null),o([p({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],e.prototype,"imageMaxHeight",void 0),o([p({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],e.prototype,"imageMaxWidth",void 0),o([p()],e.prototype,"imageTransparency",void 0),o([p({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],e.prototype,"isReference",void 0),o([p({json:{read:!1,write:!1}})],e.prototype,"labelsVisible",void 0),o([p({type:["ArcGISMapServiceLayer"]})],e.prototype,"operationalLayerType",void 0),o([p({json:{read:!1,write:!1}})],e.prototype,"popupEnabled",void 0),o([p()],e.prototype,"sourceJSON",void 0),o([p({json:{write:{ignoreOrigin:!0}}})],e.prototype,"sublayers",void 0),o([N("sublayers",{layers:{type:[A]},visibleLayers:{type:[L]}})],e.prototype,"writeSublayers",null),o([p({type:["show","hide","hide-children"]})],e.prototype,"listMode",void 0),o([p({json:{read:!1},readOnly:!0,value:"map-image"})],e.prototype,"type",void 0),o([p(B)],e.prototype,"url",void 0),e=o([S("esri.layers.MapImageLayer")],e);const Zr=e;export{Zr as default};
