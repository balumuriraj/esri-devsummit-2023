import{e as x,y as A,n as k}from"./cast-fcb46737.js";import"./geometry-b7901087.js";import{j as Y}from"./Collection-910b6f71.js";import{s as Q,a as J}from"./Error-ec6249b9.js";import{r as K}from"./ArrayPool-a8ee9378.js";import{r as D,t as w}from"./typedArrayUtil-4d7bb04c.js";import{r as X,j as Z}from"./promiseUtils-1e54421e.js";import{l as U,h as S,f as tt,a as et}from"./reactiveUtils-4dabbb80.js";import{u as rt}from"./aaBoundingRect-193543b5.js";import{b as it,z as ot,a as st}from"./Extent-da876e26.js";import{a0 as mt,_ as pt,a1 as at}from"./index-a864af46.js";import{y as nt,r as lt}from"./TileStrategy-a90cd1af.js";import"./TileStore-00ac650f.js";import"./TileKey-5aef17b6.js";import{c as T}from"./mathUtils-b4bb77e2.js";import{e as ht}from"./mat3f64-c6305894.js";import{r as dt}from"./vec2-528adfe4.js";import{n as ct}from"./vec2f64-30dc1443.js";import{d as ut}from"./DefaultVertexAttributeLayouts-2bcf3941.js";import{E as W,b as ft}from"./FramebufferObject-a3b9c52c.js";import{P as yt,G as _t,L as vt,D as wt,F as G}from"./enums-64ab819c.js";import{n as z,E as gt}from"./Texture-243be4d7.js";import{c as Rt}from"./screenUtils-410d12c0.js";import{r as Mt,i as $t,M as xt,f as Tt,h as Et}from"./mat3-3fc68e72.js";import{e as Ct}from"./mat3f32-d3d088e8.js";import{t as bt}from"./vec2f32-461e65a9.js";import{r as Vt}from"./vec3f32-c9aa289f.js";import{U as qt}from"./normalizeUtils-27e29a72.js";import{o as At,b as St}from"./WGLContainer-8a3733a0.js";import{I as Dt}from"./enums-4ca4641f.js";import{y as Pt}from"./LayerView2D-2775dd38.js";import{u as It}from"./LayerView-bd9a2316.js";import"./string-a318751c.js";import"./nextTick-3ee5a785.js";import"./Polyline-ff2d7c6b.js";import"./typeUtils-35750739.js";import"./jsonMap-7b8332c9.js";import"./Evented-a45c8b0f.js";import"./SimpleObservable-23231131.js";import"./Ellipsoid-89682c5e.js";import"./preload-helper-3bce6601.js";import"./Graphic-f0e54e86.js";import"./PopupTemplate-40f3c9aa.js";import"./Clonable-545593ce.js";import"./fieldUtils-7f54c4b1.js";import"./arcadeOnDemand-281a01eb.js";import"./enumeration-3a03bd31.js";import"./number-27cf8195.js";import"./locale-30120714.js";import"./Identifiable-bfe1ff30.js";import"./symbols-f8232671.js";import"./CIMSymbol-539bd447.js";import"./Symbol-f93ed9fd.js";import"./Color-fb64d77d.js";import"./colorUtils-639f4d25.js";import"./opacityUtils-1f7f5126.js";import"./symbolLayerUtils3D-76acc268.js";import"./vec3f64-2f9cef06.js";import"./aaBoundingBox-657a9b82.js";import"./request-6fc81c4c.js";import"./persistableUrlUtils-5f719c3b.js";import"./Symbol3DAnchorPosition2D-5726d999.js";import"./collectionUtils-803d9ba8.js";import"./Portal-2bb189b3.js";import"./Loadable-268c900a.js";import"./Promise-376ab9f6.js";import"./PortalGroup-8e41557a.js";import"./PortalUser-659cc1d2.js";import"./jsonUtils-229211af.js";import"./Cyclical-151bcc41.js";import"./CollectionFlattener-8f4d518b.js";import"./workers-6e30d081.js";import"./Connection-9a1cf8da.js";import"./Queue-b7d3cd48.js";import"./assets-8d3e737a.js";import"./intl-65a3e389.js";import"./messages-2289086c.js";import"./projection-290b739f.js";import"./unitUtils-45d1147c.js";import"./mat4-44a0988f.js";import"./common-c186b691.js";import"./vec3-e93e648f.js";import"./zscale-89472cba.js";import"./TileInfo-b0eb8c90.js";import"./widget-fb292a2f.js";import"./uuid-73213768.js";import"./HandleOwner-9b396af1.js";import"./byteSizeEstimations-f0cab514.js";import"./executeQueryJSON-2fe748db.js";import"./query-694f7287.js";import"./pbfQueryUtils-4adda2cc.js";import"./pbf-0e99a620.js";import"./OptimizedFeature-4ab8d380.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-1481fa99.js";import"./FeatureSet-d32b0eb8.js";import"./Field-61ec9870.js";import"./fieldType-f31285f7.js";import"./vec4-790471c0.js";import"./Query-b96bcde0.js";import"./TimeExtent-23e282b9.js";import"./RelationshipQuery-0dda77ad.js";import"./LegendOptions-010d0873.js";import"./utils-6786b611.js";import"./asyncUtils-437defc4.js";import"./parser-498c8be0.js";import"./mat4f32-77b3d8ac.js";import"./ItemCache-fd3aceaf.js";import"./MemCache-18a255ed.js";import"./jsonUtils-f5674613.js";import"./UniqueValueRenderer-08f8851c.js";import"./diffUtils-68b89c71.js";import"./colorRamps-9dac42c1.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-18d58939.js";import"./lengthUtils-fa751420.js";import"./jsonUtils-0ff4ff96.js";import"./styleUtils-22b14a8b.js";import"./DictionaryLoader-1cbfea53.js";import"./LRUCache-64ec42ee.js";import"./deprecate-035b199e.js";import"./heatmapUtils-aaea3f32.js";import"./vec4f64-e407da96.js";import"./featureConversionUtils-03a03f40.js";import"./TopFeaturesQuery-cad97c37.js";import"./FeatureLayer-041050b6.js";import"./MultiOriginJSONSupport-aae3bc0c.js";import"./LayerFloorInfo-54b916a2.js";import"./FeatureLayerBase-ad5cfa1a.js";import"./HeightModelInfo-5d01231e.js";import"./arcgisLayerUrl-c09f09b4.js";import"./OperationalLayer-97084f13.js";import"./ElevationInfo-215614d8.js";import"./Layer-5ffe0eda.js";import"./editsZScale-6a661299.js";import"./APIKeyMixin-a0a8917a.js";import"./ArcGISService-21dc1d06.js";import"./BlendLayer-20d0571b.js";import"./CustomParametersMixin-47aab0a6.js";import"./EditBusLayer-e750b15b.js";import"./FeatureReductionLayer-d69dae71.js";import"./labelingInfo-607e66b8.js";import"./labelUtils-3108e8d7.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-af7a6030.js";import"./PortalLayer-b2643f87.js";import"./PortalItem-bb7e98a6.js";import"./RefreshableLayer-7f154951.js";import"./ScaleRangeLayer-4be07229.js";import"./TemporalLayer-61549309.js";import"./TimeInfo-1d30dc7c.js";import"./FeatureTemplate-c1d0bb70.js";import"./FeatureType-34d71ade.js";import"./fieldProperties-e2eeb1d5.js";import"./FieldsIndex-f104cc5f.js";import"./versionUtils-fd91f55f.js";import"./styleUtils-a989c0af.js";import"./popupUtils-86dc6b94.js";import"./mat2d-2bbb5feb.js";import"./Scheduler-540208b6.js";import"./Basemap-af7f62f8.js";import"./loadAll-b5bfa7ab.js";import"./writeUtils-e686bd33.js";import"./layerUtils-f4d08f94.js";import"./TablesMixin-bc97d131.js";import"./GraphicsCollection-c37a9ffd.js";import"./ViewingMode-5d7d590b.js";import"./enums-0fc02184.js";import"./capabilities-302cf20d.js";import"./context-util-a4ce3a7b.js";import"./BoundsStore-b9fa27cc.js";import"./PooledRBush-3e149119.js";import"./quickselect-322ec8e1.js";import"./sphere-2af0d852.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./lineSegment-10422ca0.js";import"./plane-b575face.js";import"./scaleUtils-93ad8d0c.js";import"./ElevationSamplerData-b87e0e50.js";import"./PhysicallyBasedRendering.glsl-d457fff5.js";import"./View.glsl-3ce196d4.js";import"./ShaderBuilder-a7d0da4e.js";import"./FloatPassUniform-68d54f51.js";import"./Float4PassUniform-d7bdbc81.js";import"./RgbaFloatEncoding.glsl-52af7fcf.js";import"./Texture2DPassUniform-753de459.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-053796dc.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-db6418ee.js";import"./ReadLinearDepth.glsl-9c87a54a.js";import"./WaterSurface.glsl-c64cb8f1.js";import"./ForwardLinearDepth.glsl-56affafd.js";import"./Matrix3PassUniform-ad9f953b.js";import"./Slice.glsl-3b39b1f7.js";import"./Transform.glsl-6d2e2fd9.js";import"./OutputHighlight.glsl-fbac199a.js";import"./MultipassTerrainTest.glsl-bb236672.js";import"./NormalUtils.glsl-c12729bf.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-a11868d2.js";import"./EvaluateSceneLighting.glsl-189abc15.js";import"./VisualVariablePassParameters-d460182b.js";import"./VertexElementDescriptor-2925c6af.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-8bf33b65.js";import"./ScreenSpacePass-d5e48a9b.js";import"./SSAO.glsl-980b3771.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-d3a072ad.js";import"./VerticalOffset.glsl-87cbb2e3.js";import"./objectResourceUtils-d556a033.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-903d1848.js";import"./vec33-e98769e8.js";import"./DefaultMaterial_COLOR_GAMMA-fe26fda8.js";import"./types-e1c0a5bf.js";import"./Version-2946cc03.js";import"./quat-3d5eec2d.js";import"./Texture-46c8c2cb.js";import"./TextureOnly.glsl-1ec9a9ef.js";import"./InterleavedLayout-984d67b2.js";import"./MixExternalColor.glsl-ab0706f7.js";import"./symbolColorUtils-b2b55883.js";import"./ObjectAndLayerIdColor.glsl-ad468647.js";import"./OutputDepth.glsl-470c8e2a.js";import"./VisualVariables.glsl-2b937327.js";import"./DiscardOrAdjustAlphaBlend.glsl-73258f38.js";import"./Normals.glsl-76f97814.js";import"./DefaultMaterial.glsl-885671b3.js";import"./VertexColor.glsl-8c022fa8.js";import"./DefaultTechniqueConfiguration-588e5ab2.js";import"./RealisticTree.glsl-b6cc03f2.js";import"./edgeProcessing-f733ce76.js";import"./deduplicate-03981d62.js";import"./projection-a69d43d0.js";import"./Octree-0a267ea2.js";import"./HUDMaterial.glsl-32cf019c.js";import"./sdfPrimitives-9858c36d.js";import"./floatRGBA-9ad35d39.js";import"./dehydratedFeatures-0557137d.js";import"./quantizationUtils-4dd81f85.js";import"./labelFormatUtils-d25d1d9e.js";import"./I3SUtil-f31a4571.js";import"./I3SBinaryReader-f4829435.js";import"./LineCallout.glsl-358ef89b.js";import"./earcut-58237617.js";import"./SnappingCandidate-970faec6.js";import"./MeshComponent-a43522cc.js";import"./MarkerSizing.glsl-566261cc.js";import"./RibbonLine.glsl-0f7c2bbc.js";import"./LineStipple.glsl-ed22a88b.js";import"./callExpressionWithFeature-55effb7b.js";import"./LineMarker.glsl-8166d610.js";import"./NativeLine.glsl-742e9e29.js";import"./Path.glsl-9f6bab44.js";import"./ColorMaterial.glsl-3a70e4a7.js";import"./Pattern.glsl-67f4595b.js";import"./LercDecoder-4c9b29b3.js";import"./config-1337d16e.js";import"./workerHelper-e756ac3a.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./portalItemUtils-2ccd793f.js";import"./rbush-8e36784a.js";import"./WGLBrushVTLSymbol-d778c554.js";import"./enums-2658a65c.js";import"./number-954e4ab6.js";import"./StyleDefinition-ff072275.js";import"./GeometryUtils-c093d234.js";import"./pixelUtils-d9cd2e49.js";import"./Utils-69cc114d.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-cc7f8b69.js";import"./MaterialKey-0093a242.js";import"./alignmentUtils-ae955d28.js";import"./utils-317368cb.js";import"./heatmapTextureUtils-2627384f.js";const _=ht();class Ot extends ut{constructor(r){super(),this.elementView=r,this.isWrapAround=!1,this.perspectiveTransform=ct(),this._vertices=new Float32Array(20),this._handles=[],this._handles.push(U(()=>this.elementView.element.opacity,e=>this.opacity=e,S),U(()=>[this.elementView.coords],()=>{this.requestRender()},S),tt(()=>this.elementView.element.loaded,()=>{const e=this.elementView.element;this.ready(),e.type==="video"&&D(e.content)&&this._handles.push(X(e.content,"play",()=>this.requestRender()))},S)),r.element.load().catch(e=>{Q.getLogger("esri.views.2d.layers.MediaLayerView2D").error(new J("element-load-error","Element cannot be displayed",{element:r,error:e}))})}destroy(){var r;this._handles.forEach(e=>e.remove()),(r=this.texture)==null||r.dispose(),this.texture=null}get dvsMat3(){return this.parent.dvsMat3}beforeRender(r){const{context:e}=r,t=this.elementView.element.content;if(D(t)){const s=t instanceof HTMLImageElement,o=t instanceof HTMLVideoElement,m=s?t.naturalWidth:o?t.videoWidth:t.width,n=s?t.naturalHeight:o?t.videoHeight:t.height;this._updatePerspectiveTransform(m,n),this.texture?o&&!t.paused&&(this.texture.setData(t),this.requestRender(),(z(e.gl)||T(m)&&T(n))&&this.texture.generateMipmap()):(this.texture=new gt(e,{pixelFormat:yt.RGBA,dataType:_t.UNSIGNED_BYTE,samplingMode:vt.LINEAR,wrapMode:wt.CLAMP_TO_EDGE,width:m,height:n,preMultiplyAlpha:!0},t),(z(e.gl)||T(m)&&T(n))&&this.texture.generateMipmap(),o&&!t.paused&&this.requestRender())}super.beforeRender(r)}_createTransforms(){return null}updateDrawCoords(r,e){const t=this.elementView.coords;if(w(t))return;const[s,o,m,n]=t.rings[0],c=this._vertices,{x:p,y:a}=r,h=e!==0;h?c.set([o[0]-p,o[1]-a,s[0]-p,s[1]-a,m[0]-p,m[1]-a,n[0]-p,n[1]-a,n[0]-p,n[1]-a,o[0]+e-p,o[1]-a,o[0]+e-p,o[1]-a,s[0]+e-p,s[1]-a,m[0]+e-p,m[1]-a,n[0]+e-p,n[1]-a]):c.set([o[0]-p,o[1]-a,s[0]-p,s[1]-a,m[0]-p,m[1]-a,n[0]-p,n[1]-a]),this.isWrapAround=h}getVAO(r,e,t){if(w(this.elementView.coords))return null;const s=this._vertices;if(this._vao)this._geometryVbo.setData(s);else{this._geometryVbo=W.createVertex(r,G.DYNAMIC_DRAW,s);const o=W.createVertex(r,G.STATIC_DRAW,new Uint16Array([0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1]));this._vao=new ft(r,t,e,{geometry:this._geometryVbo,tex:o})}return this._vao}_updatePerspectiveTransform(r,e){const t=this._vertices;mt(_,[0,0,r,0,0,e,r,e],[t[0],t[1],t[4],t[5],t[2],t[3],t[6],t[7]]),dt(this.perspectiveTransform,_[6]/_[8]*r,_[7]/_[8]*e)}}class jt extends At{constructor(){super(...arguments),this._localOrigin=Rt(0,0),this._viewStateId=-1,this._dvsMat3=Ct(),this.requiresDedicatedFBO=!1}get dvsMat3(){return this._dvsMat3}beforeRender(r){this._updateMatrices(r),this._updateOverlays(r,this.children);for(const e of this.children)e.beforeRender(r)}prepareRenderPasses(r){const e=r.registerRenderPass({name:"overlay",brushes:[St.overlay],target:()=>this.children,drawPhase:Dt.MAP});return[...super.prepareRenderPasses(r),e]}_updateMatrices(r){const{state:e}=r,{id:t,size:s,pixelRatio:o,resolution:m,rotation:n,viewpoint:c,displayMat3:p}=e;if(this._viewStateId===t)return;const a=Math.PI/180*n,h=o*s[0],f=o*s[1],{x:g,y:E}=c.targetGeometry,C=qt(g,e.spatialReference);this._localOrigin.x=C,this._localOrigin.y=E;const R=m*h,y=m*f,l=Mt(this._dvsMat3);$t(l,l,p),xt(l,l,bt(h/2,f/2)),Tt(l,l,Vt(h/R,-f/y,1)),Et(l,l,-a),this._viewStateId=t}_updateOverlays(r,e){const{state:t}=r,{rotation:s,spatialReference:o,worldScreenWidth:m,size:n,viewpoint:c}=t,p=this._localOrigin;let a=0;if(o.isWrappable){const h=n[0],f=n[1],g=180/Math.PI*s,E=Math.abs(Math.cos(g)),C=Math.abs(Math.sin(g)),R=Math.round(h*E+f*C),[y,l]=it(o).valid,d=pt(o),{x:P,y:H}=c.targetGeometry,B=[P,H],b=[0,0];t.toScreen(b,B);const M=[0,0];let V;V=R>m?.5*m:.5*R;const I=Math.floor((P+.5*d)/d),F=y+I*d,N=l+I*d,q=[b[0]+V,0];t.toMap(M,q),M[0]>N&&(a=d),q[0]=b[0]-V,t.toMap(M,q),M[0]<F&&(a=-d);for(const $ of e){const O=$.elementView.bounds;if(w(O))continue;const[j,,L]=O;j<y&&L>y?$.updateDrawCoords(p,d):L>l&&j<l?$.updateDrawCoords(p,-d):$.updateDrawCoords(p,a)}}else for(const h of e)h.updateDrawCoords(p,a)}}let u=class extends Pt(It){constructor(){super(...arguments),this._overlayContainer=null,this._fetchQueue=null,this._tileStrategy=null,this._elementReferences=new Map,this.layer=null,this.elements=new Y}attach(){this.handles.add(et(()=>this.layer.source,"refresh",()=>{for(const i of this._tileStrategy.tiles)this._updateTile(i);this.requestUpdate()})),this._overlayContainer=new jt,this.container.addChild(this._overlayContainer),this._fetchQueue=new nt({tileInfoView:this.view.featuresTilingScheme,concurrency:10,process:(i,r)=>this._queryElements(i,r)}),this._tileStrategy=new lt({cachePolicy:"purge",resampling:!0,acquireTile:i=>this._acquireTile(i),releaseTile:i=>this._releaseTile(i),tileInfoView:this.view.featuresTilingScheme}),this.requestUpdate()}detach(){this.handles.removeAll(),this.elements.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.destroy(),this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this._elementReferences.clear()}supportsSpatialReference(i){return!0}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}update(i){this._tileStrategy.update(i)}async hitTest(i,r){const e=[],t=i.normalize(),s=[t.x,t.y];for(const{projectedElement:{normalizedCoords:o,element:m}}of this._elementReferences.values())D(o)&&ot(o.rings,s)&&e.push({type:"media",element:m,layer:this.layer,mapPoint:i});return e.reverse()}canResume(){return this.layer.source!=null&&super.canResume()}async doRefresh(){}_acquireTile(i){const r=new Lt(i.clone());return this._updateTile(r),r}_updateTile(i){this.updatingHandles.addPromise(this._fetchQueue.push(i.key).then(r=>{const[e,t]=i.setElements(r);this._acquireElements(i,e),this._releaseElements(i,t),this.requestUpdate()},r=>{Z(r)||Q.getLogger(this.declaredClass).error(r)}))}_releaseTile(i){this._fetchQueue.abort(i.key.id),i.elements&&this._releaseElements(i,i.elements),this.requestUpdate()}async _queryElements(i,r){const e=this.layer.source;if(w(e))return[];this.view.featuresTilingScheme.getTileBounds(v,i,!0);const t=new st({xmin:v[0],ymin:v[1],xmax:v[2],ymax:v[3],spatialReference:this.view.spatialReference});return e.queryElements(t,r)}_acquireElements(i,r){const e=this.layer.source,t=this.view.spatialReference;if(!w(e))for(const s of r)K(this._elementReferences,s.uid,()=>{const o=new at({element:s,spatialReference:t}),m=new Ot(o);return this._overlayContainer.addChild(m),this.elements.add(s),{tiles:new Set,projectedElement:o,overlay:m}}).tiles.add(i)}_releaseElements(i,r){for(const e of r){const t=this._elementReferences.get(e.uid);t.tiles.delete(i),t.tiles.size||(this._overlayContainer.removeChild(t.overlay),t.overlay.destroy(),t.projectedElement.destroy(),this._elementReferences.delete(e.uid),this.elements.remove(e))}}};x([A()],u.prototype,"_fetchQueue",void 0),x([A()],u.prototype,"layer",void 0),x([A({readOnly:!0})],u.prototype,"elements",void 0),u=x([k("esri.views.2d.layers.MediaLayerView2D")],u);const v=rt();class Lt{constructor(r){this.key=r,this.elements=null,this.isReady=!1,this.visible=!0}setElements(r){const e=[],t=new Set(this.elements);this.elements=r;for(const s of r)t.has(s)?t.delete(s):e.push(s);return this.isReady=!0,[e,Array.from(t)]}}const Ys=u;export{Ys as default};
