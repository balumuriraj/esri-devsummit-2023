import{e as o,y as n,n as T,f as M}from"./cast-fcb46737.js";import"./geometry-b7901087.js";import{g as W}from"./Graphic-f0e54e86.js";import{S as q,m as H,y as I,n as Q}from"./symbols-f8232671.js";import{j as J}from"./Collection-910b6f71.js";import{a as U}from"./Error-ec6249b9.js";import{y as L,o as Z}from"./string-a318751c.js";import{r as c,t as g}from"./typedArrayUtil-4d7bb04c.js";import{O as V}from"./MultiOriginJSONSupport-aae3bc0c.js";import"./ArrayPool-a8ee9378.js";import{k as w,E as X,o as b,r as Y,a as ee}from"./Extent-da876e26.js";import{u as v,A as te,e as re,t as oe,r as ie}from"./projection-290b739f.js";import{D as E,h as x,I as D,K as R,f as j}from"./aaBoundingRect-193543b5.js";import{v as ae}from"./normalizeUtils-27e29a72.js";import ne from"./FeatureLayer-041050b6.js";import{i as P,a as le}from"./GraphicsCollection-c37a9ffd.js";import{b as _}from"./Layer-5ffe0eda.js";import{n as G}from"./BlendLayer-20d0571b.js";import{t as A}from"./ScaleRangeLayer-4be07229.js";import{x as pe}from"./ElevationInfo-215614d8.js";import{n as se}from"./objectIdUtils-789e911a.js";import{c as ye}from"./OperationalLayer-97084f13.js";import{v as me}from"./PortalLayer-b2643f87.js";import{y as F}from"./Field-61ec9870.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-1e54421e.js";import"./Polyline-ff2d7c6b.js";import"./typeUtils-35750739.js";import"./jsonMap-7b8332c9.js";import"./PopupTemplate-40f3c9aa.js";import"./Clonable-545593ce.js";import"./fieldUtils-7f54c4b1.js";import"./preload-helper-3bce6601.js";import"./arcadeOnDemand-281a01eb.js";import"./enumeration-3a03bd31.js";import"./number-27cf8195.js";import"./locale-30120714.js";import"./Identifiable-bfe1ff30.js";import"./jsonUtils-229211af.js";import"./CIMSymbol-539bd447.js";import"./Symbol-f93ed9fd.js";import"./Color-fb64d77d.js";import"./colorUtils-639f4d25.js";import"./mathUtils-b4bb77e2.js";import"./vec3-e93e648f.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-1f7f5126.js";import"./symbolLayerUtils3D-76acc268.js";import"./aaBoundingBox-657a9b82.js";import"./request-6fc81c4c.js";import"./persistableUrlUtils-5f719c3b.js";import"./Symbol3DAnchorPosition2D-5726d999.js";import"./collectionUtils-803d9ba8.js";import"./Portal-2bb189b3.js";import"./Loadable-268c900a.js";import"./Promise-376ab9f6.js";import"./PortalGroup-8e41557a.js";import"./PortalUser-659cc1d2.js";import"./Ellipsoid-89682c5e.js";import"./Evented-a45c8b0f.js";import"./SimpleObservable-23231131.js";import"./unitUtils-45d1147c.js";import"./mat4-44a0988f.js";import"./assets-8d3e737a.js";import"./zscale-89472cba.js";import"./UniqueValueRenderer-08f8851c.js";import"./LegendOptions-010d0873.js";import"./reactiveUtils-4dabbb80.js";import"./diffUtils-68b89c71.js";import"./colorRamps-9dac42c1.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-18d58939.js";import"./lengthUtils-fa751420.js";import"./jsonUtils-0ff4ff96.js";import"./styleUtils-22b14a8b.js";import"./jsonUtils-f5674613.js";import"./DictionaryLoader-1cbfea53.js";import"./LRUCache-64ec42ee.js";import"./MemCache-18a255ed.js";import"./deprecate-035b199e.js";import"./heatmapUtils-aaea3f32.js";import"./vec4f64-e407da96.js";import"./LayerFloorInfo-54b916a2.js";import"./FeatureLayerBase-ad5cfa1a.js";import"./HeightModelInfo-5d01231e.js";import"./arcgisLayerUrl-c09f09b4.js";import"./RelationshipQuery-0dda77ad.js";import"./Query-b96bcde0.js";import"./TimeExtent-23e282b9.js";import"./HandleOwner-9b396af1.js";import"./workers-6e30d081.js";import"./Connection-9a1cf8da.js";import"./Queue-b7d3cd48.js";import"./intl-65a3e389.js";import"./messages-2289086c.js";import"./editsZScale-6a661299.js";import"./queryZScale-1481fa99.js";import"./FeatureSet-d32b0eb8.js";import"./fieldType-f31285f7.js";import"./APIKeyMixin-a0a8917a.js";import"./ArcGISService-21dc1d06.js";import"./CustomParametersMixin-47aab0a6.js";import"./EditBusLayer-e750b15b.js";import"./FeatureReductionLayer-d69dae71.js";import"./labelingInfo-607e66b8.js";import"./labelUtils-3108e8d7.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-af7a6030.js";import"./RefreshableLayer-7f154951.js";import"./TemporalLayer-61549309.js";import"./TimeInfo-1d30dc7c.js";import"./FeatureTemplate-c1d0bb70.js";import"./FeatureType-34d71ade.js";import"./fieldProperties-e2eeb1d5.js";import"./FieldsIndex-f104cc5f.js";import"./versionUtils-fd91f55f.js";import"./styleUtils-a989c0af.js";import"./asyncUtils-437defc4.js";import"./TopFeaturesQuery-cad97c37.js";import"./popupUtils-86dc6b94.js";import"./parser-498c8be0.js";import"./mat4f32-77b3d8ac.js";import"./PortalItem-bb7e98a6.js";let d=class extends G(A(_)){constructor(e){super(e),this.elevationInfo=null,this.graphics=new P,this.screenSizePerspectiveEnabled=!0,this.type="graphics",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(e){return this.graphics.add(e),this}addMany(e){return this.graphics.addMany(e),this}removeAll(){return this.graphics.removeAll(),this}remove(e){this.graphics.remove(e)}removeMany(e){this.graphics.removeMany(e)}on(e,t){return super.on(e,t)}graphicChanged(e){this.emit("graphic-update",e)}};o([n({type:pe})],d.prototype,"elevationInfo",void 0),o([n(le(P,"graphics"))],d.prototype,"graphics",void 0),o([n({type:["show","hide"]})],d.prototype,"listMode",void 0),o([n()],d.prototype,"screenSizePerspectiveEnabled",void 0),o([n({readOnly:!0})],d.prototype,"type",void 0),o([n({constructOnly:!0})],d.prototype,"internal",void 0),d=o([T("esri.layers.GraphicsLayer")],d);const ue=d;function O(e){return e.featureCollectionType==="markup"||e.layers.some(t=>t.layerDefinition.visibilityField!=null||!B(t))}function B({layerDefinition:e,featureSet:t}){const r=e.geometryType??t.geometryType;return C.find(i=>{var a,p,s;return r===i.geometryTypeJSON&&((s=(p=(a=e.drawingInfo)==null?void 0:a.renderer)==null?void 0:p.symbol)==null?void 0:s.type)===i.identifyingSymbol.type})}function z(){return new ee({xmin:-180,ymin:-90,xmax:180,ymax:90})}const $=new F({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),de=new F({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let m=class extends ue{constructor(e){super(e),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",e=>{e.item.sourceLayer=this.layer}),this.graphics.on("after-remove",e=>{e.item.sourceLayer=null})}get fullExtent(){var r;const e=(r=this.layer)==null?void 0:r.spatialReference,t=this.fullBounds;return e?g(t)?v(z(),e).geometry:j(t,e):null}get fullBounds(){var r;const e=(r=this.layer)==null?void 0:r.spatialReference;if(!e)return null;const t=E();return this.graphics.forEach(i=>{const a=c(i.geometry)?v(i.geometry,e).geometry:null;c(a)&&x(t,a.type==="point"?a:a.extent,t)}),D(t,R)?null:t}get sublayers(){return this.graphics}};o([n({readOnly:!0})],m.prototype,"fullExtent",null),o([n({readOnly:!0})],m.prototype,"fullBounds",null),o([n({readOnly:!0})],m.prototype,"sublayers",null),o([n()],m.prototype,"layer",void 0),o([n()],m.prototype,"layerId",void 0),o([n({readOnly:!0})],m.prototype,"visibilityMode",void 0),m=o([T("esri.layers.MapNotesLayer.MapNotesSublayer")],m);const C=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:new q().toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:new H().toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:new I().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:new I().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:new Q().toJSON()}];let l=class extends G(A(ye(me(V(_))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=w.WGS84,this.sublayers=new J(C.map(t=>new m({id:t.id,layerId:t.layerId,title:t.title,layer:this}))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!O(t)&&(r==null?void 0:r.origin)!=="portal-item"}}}readFeatureCollections(e,t,r){if(!O(t))return null;const i=t.layers.map(a=>{const p=new ne;return p.read(a,r),p});return new J({items:i})}readLegacyfeatureCollectionJSON(e,t){return O(t)?L(t.featureCollection):null}get fullExtent(){var r;const e=this.spatialReference,t=E();return c(this.sublayers)?this.sublayers.forEach(({fullBounds:i})=>c(i)?x(t,i,t):t,t):(r=this.featureCollectionJSON)!=null&&r.layers.some(i=>i.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(i=>{const a=v(i.layerDefinition.extent,e).geometry;c(a)&&x(t,a,t)}),D(t,R)?v(z(),e).geometry:j(t,e)}readMinScale(e,t){for(const r of t.layers)if(r.layerDefinition.minScale!=null)return r.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const r of t.layers)if(r.layerDefinition.maxScale!=null)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?w.fromJSON(t.layers[0].layerDefinition.spatialReference):w.WGS84}readSublayers(e,t,r){if(O(t))return null;const i=[];let a=t.layers.reduce((p,s)=>Math.max(p,s.layerDefinition.id??-1),-1)+1;for(const p of t.layers){const{layerDefinition:s,featureSet:y}=p,u=s.id??a++,f=B(p);if(c(f)){const h=new m({id:f.id,title:s.name,layerId:u,layer:this,graphics:y.features.map(({geometry:S,symbol:N,attributes:k,popupInfo:K})=>W.fromJSON({attributes:k,geometry:S,symbol:N,popupTemplate:K}))});i.push(h)}}return new J(i)}writeSublayers(e,t,r,i){var f;const{minScale:a,maxScale:p}=this;if(g(e))return;const s=e.some(h=>h.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing)return void(s&&((f=i==null?void 0:i.messages)==null?void 0:f.push(new U("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"))));const y=[];let u=this.spatialReference.toJSON();e:for(const h of e)for(const S of h.graphics)if(c(S.geometry)){u=S.geometry.spatialReference.toJSON();break e}for(const h of C){const S=e.find(N=>h.id===N.id);this._writeMapNoteSublayer(y,S,h,a,p,u,i)}Z("featureCollection.layers",y,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=L(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(g(this.sublayers))return;let e=null;const t=[];for(const i of this.sublayers)for(const a of i.graphics)if(c(a.geometry)){const p=a.geometry;e?X(p.spatialReference,e)||(te(p.spatialReference,e)||re()||await oe(),a.geometry=ie(p,e)):e=p.spatialReference,t.push(a)}const r=await ae(t.map(i=>i.geometry));t.forEach((i,a)=>i.geometry=r[a])}_findSublayer(e){var t;return g(this.sublayers)?null:((t=this.sublayers)==null?void 0:t.find(r=>r.id===e))??null}_writeMapNoteSublayer(e,t,r,i,a,p,s){const y=[];if(!g(t)){for(const u of t.graphics)this._writeMapNote(y,u,r.geometryType,s);this._normalizeObjectIds(y,$),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:L(r.identifyingSymbol)}},id:t.layerId,geometryType:r.geometryTypeJSON,minScale:i,maxScale:a,objectIdField:"OBJECTID",fields:[$.toJSON(),de.toJSON()],spatialReference:p},featureSet:{features:y,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,i){var u,f;if(g(t))return;const{geometry:a,symbol:p,popupTemplate:s}=t;if(g(a))return;if(a.type!==r)return void((u=i==null?void 0:i.messages)==null?void 0:u.push(new M("map-notes-layer:invalid-geometry-type",`Geometry "${a.type}" cannot be saved in "${r}" layer`,{graphic:t})));if(g(p))return void((f=i==null?void 0:i.messages)==null?void 0:f.push(new M("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t})));const y={attributes:{...t.attributes},geometry:a.toJSON(),symbol:p.toJSON()};c(s)&&(y.popupInfo=s.toJSON()),e.push(y)}_normalizeObjectIds(e,t){const r=t.name;let i=se(r,e)+1;const a=new Set;for(const p of e){p.attributes||(p.attributes={});const{attributes:s}=p;(s[r]==null||a.has(s[r]))&&(s[r]=i++),a.add(s[r])}}};o([n({readOnly:!0})],l.prototype,"capabilities",void 0),o([b(["portal-item","web-map"],"capabilities",["layers"])],l.prototype,"readCapabilities",null),o([n({readOnly:!0})],l.prototype,"featureCollections",void 0),o([b(["web-map","portal-item"],"featureCollections",["layers"])],l.prototype,"readFeatureCollections",null),o([n({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],l.prototype,"featureCollectionJSON",void 0),o([b(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],l.prototype,"readLegacyfeatureCollectionJSON",null),o([n({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],l.prototype,"featureCollectionType",void 0),o([n({readOnly:!0})],l.prototype,"fullExtent",null),o([n({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],l.prototype,"legendEnabled",void 0),o([n({type:["show","hide","hide-children"]})],l.prototype,"listMode",void 0),o([n({type:Number,nonNullable:!0,json:{write:!1}})],l.prototype,"minScale",void 0),o([b(["web-map","portal-item"],"minScale",["layers"])],l.prototype,"readMinScale",null),o([n({type:Number,nonNullable:!0,json:{write:!1}})],l.prototype,"maxScale",void 0),o([b(["web-map","portal-item"],"maxScale",["layers"])],l.prototype,"readMaxScale",null),o([n({readOnly:!0})],l.prototype,"multipointLayer",null),o([n({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],l.prototype,"operationalLayerType",void 0),o([n({readOnly:!0})],l.prototype,"pointLayer",null),o([n({readOnly:!0})],l.prototype,"polygonLayer",null),o([n({readOnly:!0})],l.prototype,"polylineLayer",null),o([n({type:w})],l.prototype,"spatialReference",void 0),o([b(["web-map","portal-item"],"spatialReference",["layers"])],l.prototype,"readSpatialReference",null),o([n({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],l.prototype,"sublayers",void 0),o([b("web-map","sublayers",["layers"])],l.prototype,"readSublayers",null),o([Y("web-map","sublayers")],l.prototype,"writeSublayers",null),o([n({readOnly:!0})],l.prototype,"textLayer",null),o([n()],l.prototype,"title",void 0),o([n({readOnly:!0,json:{read:!1}})],l.prototype,"type",void 0),l=o([T("esri.layers.MapNotesLayer")],l);const Er=l;export{Er as default};
