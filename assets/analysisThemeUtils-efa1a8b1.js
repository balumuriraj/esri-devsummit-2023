import{d as tt,E as et,$ as F}from"./unitUtils-45d1147c.js";import"./geometry-b7901087.js";import{a as j,b as T}from"./Error-ec6249b9.js";import{n as g,o as nt,z as rt}from"./projection-290b739f.js";import{l as at,k as it}from"./Extent-da876e26.js";import"./Polyline-ff2d7c6b.js";import{x as C}from"./screenUtils-410d12c0.js";import{o as st,v as ot}from"./vec2-528adfe4.js";import{o as ct,u as ut,g as ht}from"./vec3-e93e648f.js";import{l as k}from"./Color-fb64d77d.js";function lt(t){let{r:e,g:n,b:r,a}=t;return a<1&&(e=Math.round(a*e+255*(1-a)),n=Math.round(a*n+255*(1-a)),r=Math.round(a*r+255*(1-a))),new k({r:e,g:n,b:r})}function ft(t){const{r:e,g:n,b:r}=lt(t);return .2126*e+.7152*n+.0722*r}const St={readOnly:!0,get(){return tt(this.view)}};var G;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(G||(G={}));function O(t){if(!t)return null;if(at(t)&&t.wkid){const e=nt[t.wkid];if(e)return e}if(t.wkt){const e=mt(t.wkt);if(e)return e}return null}function mt(t){const e=rt.exec(t);if(!e||e.length!==2)return null;const n=e[1].split(",");if(!n||n.length<3)return null;const r=parseFloat(n[1]),a=parseFloat(n[2]);return isNaN(r)||isNaN(a)?null:{a:r,f:a===0?0:1/a}}function pt(t){const e=O(t??it.WGS84);if(Mt(e))return e;const n=e.a*(1-e.f);return Object.assign(e,{b:n,eSq:1-(n/e.a)**2,radius:(2*e.a+n)/3,densificationRatio:1e4/((2*e.a+n)/3)})}function Mt(t){return t!=null&&"b"in t&&"eSq"in t&&"radius"in t}function dt(t){return O(t)!==null}function xt(t,e="meters"){if(!t)throw new j("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(r=>!dt(r.spatialReference)))throw new j("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const n=[];for(let r=0;r<t.length;r++){const a=t[r],{spatialReference:d}=a,$=a.type==="polyline"?a.paths:a.rings;let s=0;for(let v=0;v<$.length;v++){const o=$[v];let f=0;for(let m=1;m<o.length;m++){const z=o[m-1][0],_=o[m][0],R=o[m-1][1],u=o[m][1];if(R!==u||z!==_){const c=new gt;$t(c,[z,R],[_,u],d),f+=c.distance}}s+=f}s=et(s,"meters",e),n.push(s)}return n}class gt{constructor(e=0,n,r){this.distance=e,this.azimuth=n,this.reverseAzimuth=r}}function $t(t,e,n,r){const a=e[0]*g,d=e[1]*g,$=n[0]*g,s=n[1]*g,{a:v,b:o,f,radius:m}=pt(r),z=$-a,_=Math.atan((1-f)*Math.tan(d)),R=Math.atan((1-f)*Math.tan(s)),u=Math.sin(_),c=Math.cos(_),w=Math.sin(R),h=Math.cos(R);let S,b,p,i,A,E,N,P,U,y,x=1e3,l=z;do{if(N=Math.sin(l),P=Math.cos(l),p=Math.sqrt(h*N*(h*N)+(c*w-u*h*P)*(c*w-u*h*P)),p===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;A=u*w+c*h*P,E=Math.atan2(p,A),U=c*h*N/p,b=1-U*U,i=A-2*u*w/b,isNaN(i)&&(i=0),y=f/16*b*(4+f*(4-3*b)),S=l,l=z+(1-y)*f*U*(E+y*p*(i+y*A*(2*i*i-1)))}while(Math.abs(l-S)>1e-12&&--x>0);if(x===0){const Q=m,V=Math.acos(Math.sin(d)*Math.sin(s)+Math.cos(d)*Math.cos(s)*Math.cos($-a))*Q,D=$-a,X=Math.sin(D)*Math.cos(s),Y=Math.cos(d)*Math.sin(s)-Math.sin(d)*Math.cos(s)*Math.cos(D),Z=Math.atan2(X,Y);return t.azimuth=Z/g,t.distance=V,t.reverseAzimuth=void 0,t}const M=b*(v*v-o*o)/(o*o),q=M/1024*(256+M*(M*(74-47*M)-128)),J=o*(1+M/16384*(4096+M*(M*(320-175*M)-768)))*(E-q*p*(i+q/4*(A*(2*i*i-1)-q/6*i*(4*p*p-3)*(4*i*i-3)))),K=Math.atan2(h*Math.sin(l),c*w-u*h*Math.cos(l)),L=Math.atan2(c*Math.sin(l),c*w*Math.cos(l)-u*h);return t.azimuth=K/g,t.distance=J,t.reverseAzimuth=L/g,t}function Dt(t,e){if(ct(e,0,0,0),t.length>0){for(let n=0;n<t.length;++n)ut(e,e,t[n]);ht(e,e,1/t.length)}}function Ft(t,e,n,r){r.projectToRenderScreen(t,I),r.projectToRenderScreen(e,W),st(n,wt,vt),ot(n,n)}const I=C(),vt=I,W=C(),wt=W;let jt=class{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=F(this._spatialReference,1),this._metersPerElevationUnit=F(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}};function B(t,e){const n=t.a*e;return ft(t)>225?new k([0,0,0,n]):new k([255,255,255,n])}function H(t,e){const n=new k(t);return n.a*=e,n}function zt(t=1){return H(T.analysisTheme.accentColor,t)}function Tt(t=1){return B(zt(),t)}function _t(t=1){return H(T.analysisTheme.textColor,t)}function Ct(t=1){return B(_t(),t)}export{dt as M,_t as a,$t as b,Dt as c,G as e,Ft as f,zt as i,St as r,Ct as s,jt as t,Tt as u,gt as v,xt as y};
