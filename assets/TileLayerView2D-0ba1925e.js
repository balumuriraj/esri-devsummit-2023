import{gY as w,l as y,da as I,bd as a,gZ as c,p as V,e as l,y as g,a as v}from"./calcite-c5ae4991.js";import"./Rasterizer-80b3452a.js";import"./Container-c668494e.js";import"./DisplayObject-b5071d0a.js";import"./BufferPool-0254decf.js";import"./enums-b1d611e3.js";import"./WGLContainer-02cfa21d.js";import"./DefaultVertexAttributeLayouts-5f20d8dd.js";import"./color-b3c5ad11.js";import"./enums-e2e92c86.js";import"./Texture-3d2bcec7.js";import"./Program-2221c2b1.js";import"./MaterialKey-1f5dd6e2.js";import"./utils-d084e5dc.js";import"./FramebufferObject-d9042b3f.js";import"./number-b10bd8f5.js";import"./StyleDefinition-7d58136b.js";import"./enums-fb086c25.js";import"./MagnifierPrograms-da9be5c4.js";import"./OrderIndependentTransparency-5f7257d7.js";import"./floatRGBA-2dd25736.js";import"./webgl-debug-7f880832.js";import{a as H}from"./GraphicsView2D-8c34d0d6.js";import"./AttributeStoreView-1b0e85f6.js";import"./earcut-61f7b102.js";import"./vec3f32-01c06d8d.js";import{t as T,o as f,n as d}from"./imageUtils-ebb6795b.js";import{f as q}from"./LayerView2D-88fd32e8.js";import{n as U}from"./HighlightGraphicContainer-84e51d6f.js";import{h as Q}from"./TileInfoView-c5645cd8.js";import{y as b,r as S}from"./TileStrategy-6e83933b.js";import{u as C}from"./LayerView-d2d47806.js";import{i as k}from"./RefreshableLayerView-3999328b.js";import{P as F,S as P}from"./MapServiceLayerViewHelper-0d7679b1.js";import{a as G}from"./drapedUtils-fefdce39.js";import"./index-9a6385f7.js";import"./_commonjsHelpers-2f3e7994.js";import"./cimAnalyzer-d4821ac0.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./enums-4b2a86a0.js";import"./alignmentUtils-ae955d28.js";import"./definitions-3ddd14a8.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-94cb1131.js";import"./quantizationUtils-a15bd53f.js";import"./rasterizingUtils-5fc2770c.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLBrushVTLSymbol-67363b39.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-f39983cc.js";import"./heatmapTextureUtils-7a5994f1.js";import"./imageutils-2ddb774e.js";import"./Matcher-5075bcf0.js";import"./visualVariablesUtils-7d174a95.js";import"./visualVariablesUtils-42287514.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-33c077a4.js";import"./ExpandedCIM-e70c558e.js";import"./devEnvironmentUtils-5002a058.js";import"./TileStore-bec0a021.js";import"./CircularArray-9dd7c217.js";import"./ComputedAttributeStorage-fb7b7196.js";import"./arcadeTimeUtils-96d04d57.js";import"./executionError-fb3f283a.js";import"./centroid-b9acbfa6.js";import"./ZoomMomentumEstimator-f0d7cb62.js";import"./basicInterfaces-7449a8bf.js";import"./normalizeUtilsSync-f9670301.js";import"./projectionSupport-c2c1f4b7.js";import"./json-48e3ea08.js";import"./schemaUtils-0cd2ddb2.js";import"./util-96b92fc2.js";import"./GraphicsView-6e05d316.js";import"./TiledDisplayObject-0268aa47.js";import"./BitmapTileContainer-0e6fbf5d.js";import"./Bitmap-e270b20f.js";import"./TileContainer-dabd955d.js";import"./MapView-c3d00f71.js";import"./unitBezier-881ac1eb.js";import"./ClipRect-c491bd72.js";import"./BaseGraphicContainer-aa1bc280.js";import"./FeatureContainer-679297bc.js";import"./scaleUtils-a8d07219.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-50bd0200.js";import"./popupUtils-bf43aa1c.js";const R=[0,0];let s=class extends k(T(q(C))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null;if(this._tileInfoView=new Q(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new b({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(i,e)=>this.fetchTile(i,e)}),this._tileStrategy=new S({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),F(this,this.layer)){const i=this._highlightView=new H({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new P({createFetchPopupFeaturesQueryGeometry:(e,r)=>G(e,r,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(e,r)=>{i.graphicUpdateHandler({graphic:e,property:r})},layerView:this,updatingHandles:this.updatingHandles})}this.requestUpdate(),this.addAttachHandles(y(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):{remove(){}}}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return I((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){!this.attached||this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(t=>this._enqueueTileFetch(t)))}isUpdating(){var t;return((t=this._fetchQueue)==null?void 0:t.updating)??!1}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(R,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(i),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:m=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(h){if(!a(h)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(m<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const u=new c(n),_=await this.fetchTile(u,{...i,resamplingLevel:m+1});return d(this._tileInfoView,_,u,t)}}throw h}const p=new c(0,0,0,0);let o;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,p,{signal:r}),p.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);o=await this._fetchImage(p,r)}catch(h){if(a(h))throw h;o=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,o,p,t):o}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){a(i)||V.getLogger(this.declaredClass).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};l([g()],s.prototype,"_fetchQueue",void 0),l([g()],s.prototype,"resampling",null),s=l([v("esri.views.2d.layers.TileLayerView2D")],s);const _i=s;export{_i as default};
