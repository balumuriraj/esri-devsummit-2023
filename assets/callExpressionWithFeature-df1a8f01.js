import{$ as m,p as i,a1 as l}from"./calcite-8912bd40.js";import{q as p,C as y,B as d,v as f}from"./quantizationUtils-b3b2ae2a.js";function G(o,r,e,n,t){if(m(o))return null;const a=o.referencesGeometry()&&t?g(r,n,t):r,s=o.repurposeFeature(a);try{return o.evaluate({...e,$feature:s})}catch(c){return i.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",c),null}}const u=new Map;function g(o,r,e){const{transform:n,hasZ:t,hasM:a}=e;u.has(r)||u.set(r,w(r));const s=u.get(r)(o.geometry,n,t,a);return{...o,geometry:s}}function w(o){const r={};switch(o){case"esriGeometryPoint":return(e,n,t,a)=>f(n,r,e,t,a);case"esriGeometryPolygon":return(e,n,t,a)=>d(n,r,e,t,a);case"esriGeometryPolyline":return(e,n,t,a)=>y(n,r,e,t,a);case"esriGeometryMultipoint":return(e,n,t,a)=>p(n,r,e,t,a);default:return i.getLogger("esri.views.2d.support.arcadeOnDemand").error(new l("mapview-arcade",`Unable to handle geometryType: ${o}`)),e=>e}}export{G as i};
