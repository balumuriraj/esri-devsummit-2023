import{e as s,y as a,a as l,at as h,ht as f,fr as S,ha as d,j9 as g,ep as y,ja as R}from"./calcite-c5ae4991.js";let r=class extends h{constructor(t){super(t),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const t=this.geometries.map(i=>i.toJSON()),o=this.geometries[0],e={};return e.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),e.inSR=o.spatialReference.wkid||JSON.stringify(o.spatialReference.toJSON()),e.geometries=JSON.stringify({geometryType:f(o),geometries:t}),this.transformation&&(e.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(e.transformForward=this.transformForward),e}};s([a()],r.prototype,"geometries",void 0),s([a({json:{read:{source:"outSR"}}})],r.prototype,"outSpatialReference",void 0),s([a()],r.prototype,"transformation",void 0),s([a()],r.prototype,"transformForward",void 0),r=s([l("esri.rest.support.ProjectParameters")],r);const J=r,N=S(J);async function j(n,t,o){t=N(t);const e=d(n),i={...e.query,f:"json",...t.toJSON()},p=t.outSpatialReference,c=f(t.geometries[0]),m=g(i,o);return y(e.path+"/project",m).then(({data:{geometries:u}})=>R(u,c,p))}export{J as a,j as n};
