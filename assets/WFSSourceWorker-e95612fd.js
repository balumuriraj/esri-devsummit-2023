import{j as l}from"./asyncUtils-437defc4.js";import{a as n,s as g}from"./Error-ec6249b9.js";import{r as _,e as f}from"./typedArrayUtil-4d7bb04c.js";import{f as m,j as d}from"./promiseUtils-1e54421e.js";import{E as w,F as p}from"./Extent-da876e26.js";import{n as E,r as F}from"./featureConversionUtils-03a03f40.js";import{u as q}from"./FeatureStore-3cfbdfa3.js";import{g as S,f as T}from"./projectionSupport-aa5eaa0d.js";import{Y as x}from"./QueryEngine-cdb0ba2c.js";import{T as j,I}from"./geojson-8e4c2449.js";import{m as b}from"./sourceUtils-77beff52.js";import{K as C}from"./wfsUtils-db42dc81.js";import{r as P}from"./FieldsIndex-f104cc5f.js";import"./cast-fcb46737.js";import"./string-a318751c.js";import"./ArrayPool-a8ee9378.js";import"./nextTick-3ee5a785.js";import"./Ellipsoid-89682c5e.js";import"./jsonUtils-229211af.js";import"./Polyline-ff2d7c6b.js";import"./OptimizedFeature-4ab8d380.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Evented-a45c8b0f.js";import"./aaBoundingBox-657a9b82.js";import"./aaBoundingRect-193543b5.js";import"./mathUtils-b4bb77e2.js";import"./vec3-e93e648f.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./BoundsStore-b9fa27cc.js";import"./PooledRBush-3e149119.js";import"./quickselect-322ec8e1.js";import"./optimizedFeatureQueryEngineAdapter-d72f082e.js";import"./centroid-5c988df3.js";import"./projection-290b739f.js";import"./preload-helper-3bce6601.js";import"./unitUtils-45d1147c.js";import"./jsonMap-7b8332c9.js";import"./SimpleObservable-23231131.js";import"./mat4-44a0988f.js";import"./assets-8d3e737a.js";import"./request-6fc81c4c.js";import"./zscale-89472cba.js";import"./json-48e3ea08.js";import"./MemCache-18a255ed.js";import"./normalizeUtils-27e29a72.js";import"./geometry-b7901087.js";import"./typeUtils-35750739.js";import"./QueryEngineResult-8f90b8dc.js";import"./quantizationUtils-4dd81f85.js";import"./ItemCache-fd3aceaf.js";import"./WhereClause-d4b8b019.js";import"./utils-b34fcd9d.js";import"./generateRendererUtils-7252b5e6.js";import"./colorRamps-9dac42c1.js";import"./Color-fb64d77d.js";import"./colorUtils-639f4d25.js";import"./enumeration-3a03bd31.js";import"./Symbol-f93ed9fd.js";import"./SnappingCandidate-970faec6.js";import"./utils-511aa5f5.js";import"./fieldUtils-7f54c4b1.js";import"./arcadeOnDemand-281a01eb.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-3de56d7f.js";import"./Scheduler-540208b6.js";import"./reactiveUtils-4dabbb80.js";import"./xmlUtils-444cb4c0.js";import"./Field-61ec9870.js";import"./fieldType-f31285f7.js";class Dt{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async t=>{const{objectIdField:e}=this._queryEngine,i=await C(this._getFeatureUrl??"",this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map(r=>r.name),signal:t});await j(i),m(t);const o=I(i,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:e});if(!w(this._queryEngine.spatialReference,p))for(const r of o)_(r.geometry)&&(r.geometry=E(S(F(r.geometry,this._queryEngine.geometryType,!1,!1),p,this._queryEngine.spatialReference)));let a=1;for(const r of o){const s={};b(this._fieldsIndex,s,r.attributes,!0),r.attributes=s,r.attributes[e]==null&&(r.objectId=r.attributes[e]=a++)}return o}}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e){const{getFeatureUrl:i,getFeatureOutputFormat:o,spatialReference:a,fields:r,geometryType:s,featureType:u,objectIdField:h,customParameters:y}=t;this._featureType=u,this._customParameters=y,this._getFeatureUrl=i,this._getFeatureOutputFormat=o,this._fieldsIndex=new P(r),await this._checkProjection(a),m(e),this._queryEngine=new x({fields:r,geometryType:s,hasM:!1,hasZ:!1,objectIdField:h,spatialReference:a,timeInfo:null,featureStore:new q({geometryType:s,hasM:!1,hasZ:!1})});const c=await this._snapshotFeatures(f(e.signal));return this._queryEngine.featureStore.addMany(c),{extent:this._queryEngine.fullExtent}}async applyEdits(){throw new n("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){var e;return this._customParameters=t,(e=this._snapshotTask)==null||e.abort(),this._snapshotTask=l(this._snapshotFeatures),this._snapshotTask.promise.then(i=>{this._queryEngine.featureStore.clear(),i&&this._queryEngine.featureStore.addMany(i)},i=>{this._queryEngine.featureStore.clear(),d(i)||g.getLogger("esri.layers.WFSLayer").error(new n("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:i}))}),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(t){try{await T(p,t)}catch{throw new n("unsupported-projection","Projection not supported",{spatialReference:t})}}}export{Dt as default};
