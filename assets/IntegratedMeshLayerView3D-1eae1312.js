import{ly as n,a4 as p,aA as m,v as l,ac as i,ad as e,hm as d,af as h}from"./index-738d935d.js";import{v as u}from"./I3SMeshView3D-b696b4dc.js";import{n as c}from"./LayerView3D-da1b015a.js";import{u as g}from"./LayerView-1b945bf7.js";import"./I3SOverrides-432c03fa.js";import"./I3SNode-ce0e22bc.js";import"./I3SUtil-d5aff221.js";import"./I3SBinaryReader-525534dc.js";import"./RenderTexture-76842063.js";import"./FeatureLayerView3D-b5c9eab9.js";import"./FeatureLayerViewBase3D-7f72c504.js";import"./FeatureLikeLayerView3D-117b6659.js";import"./dehydratedFeatureComparison-4f346faa.js";import"./queryForSymbologySnapping-b15e9074.js";import"./elevationInfoUtils-72729690.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-b839ed8f.js";import"./optimizedFeatureQueryEngineAdapter-4dc0036f.js";import"./centroid-f5daa837.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-b565a77e.js";import"./QueryEngineResult-2c28eebf.js";import"./WhereClause-f6ddfb88.js";import"./executionError-fb3f283a.js";import"./utils-ebf21391.js";import"./generateRendererUtils-bf5214e6.js";import"./projectionSupport-d70ac199.js";import"./json-48e3ea08.js";import"./utils-61f08010.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-d6519503.js";import"./FeatureStore-42c9ec6f.js";import"./heatmapTextureUtils-fcd30222.js";import"./projectExtentUtils-4e8d4f69.js";import"./EventedSet-9dd36680.js";import"./FeatureLayerView-c926a694.js";import"./popupUtils-d91ea519.js";import"./RefreshableLayerView-23b69a26.js";import"./SceneModification-93e668c8.js";import"./persistable-4ddc218c.js";import"./SceneLayerWorker-bd417782.js";const y=.2;let r=class extends u(c(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),l(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(d)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([h("esri.views.3d.layers.SceneLayerView3D")],r);const ot=r;export{ot as default};
