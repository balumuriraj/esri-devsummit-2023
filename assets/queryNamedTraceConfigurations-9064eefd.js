import{e as i,at as u,y as l,a as f,ha as d,kl as y,j9 as h,ep as N}from"./calcite-c5ae4991.js";import{c as C}from"./MediaLayerWebmap-d9efc23f.js";import"./index-9a6385f7.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./featureQueryAll-5c48871f.js";import"./project-0e0370f9.js";import"./MapView-c3d00f71.js";import"./unitBezier-881ac1eb.js";import"./TileStrategy-6e83933b.js";import"./TileStore-bec0a021.js";import"./TileInfoView-c5645cd8.js";import"./Version-e2fa8281.js";let a=class extends u{constructor(o){super(o),this.namedTraceConfigurations=[]}};i([l({type:[C],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],a.prototype,"namedTraceConfigurations",void 0),a=i([f("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],a);const $=a;async function R(o,t,n){const s=d(o),r=t.toJSON();t.globalIds&&t.globalIds.length>0&&(r.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(r.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(r.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(r.names=JSON.stringify(t.names));const m={...r,f:"json"},g=y({...s.query,...m}),p=h(g,{...n,method:"post"}),c=`${s.path}/traceConfigurations/query`,{data:e}=await N(c,p);return e?$.fromJSON(e):null}export{R as queryNamedTraceConfigurations};
