import{e as r,y as i,a as l,hn as $,ga as k,v as P,ai as f,jh as R,l as g,R as d,c1 as T,hM as U,a1 as x,g1 as E}from"./calcite-c5ae4991.js";import{n as j}from"./StreamFeatureManager-fed3c120.js";import{createConnection as G}from"./createConnection-8a578c0f.js";import{r as V}from"./EventedSet-916d5a8d.js";import{w as C}from"./FeatureLikeLayerView3D-a22645de.js";import{n as L}from"./LayerView3D-1f5cccf1.js";import{C as F}from"./MediaLayerVideo-b25b4fca.js";import{u as N}from"./LayerView-d2d47806.js";import"./index-9a6385f7.js";import"./CircularArray-9dd7c217.js";import"./geometryServiceUtils-b1997a16.js";import"./project-0e0370f9.js";import"./dehydratedFeatures-ce9ee959.js";import"./quantizationUtils-a15bd53f.js";import"./dehydratedFeatureComparison-52788bbf.js";import"./queryForSymbologySnapping-155c8564.js";import"./elevationInfoUtils-def3e352.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-b5c5b0ef.js";import"./optimizedFeatureQueryEngineAdapter-5d25bc4d.js";import"./centroid-b9acbfa6.js";import"./PooledRBush-52d39e88.js";import"./basicInterfaces-7449a8bf.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-856a56fe.js";import"./QueryEngineResult-7bb9e34b.js";import"./WhereClause-19168e5f.js";import"./executionError-fb3f283a.js";import"./utils-d04d4fee.js";import"./generateRendererUtils-0781e0f0.js";import"./projectionSupport-c2c1f4b7.js";import"./json-48e3ea08.js";import"./SnappingCandidate-970faec6.js";import"./utils-d27f2aa1.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-bf0170ce.js";import"./scaleUtils-a8d07219.js";import"./FeatureStore-8d653403.js";import"./BoundsStore-32c0ea98.js";import"./symbolColorUtils-14fb8f64.js";import"./objectResourceUtils-8fb711c9.js";import"./devEnvironmentUtils-5002a058.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./BufferView-bc307796.js";import"./vec33-164586fc.js";import"./DefaultMaterial_COLOR_GAMMA-941dbf6c.js";import"./types-e1c0a5bf.js";import"./enums-e2e92c86.js";import"./Version-e2fa8281.js";import"./quat-8dcd84de.js";import"./quatf64-f8f1c132.js";import"./resourceUtils-527631ac.js";import"./Indices-84de656e.js";import"./NestedMap-1b5db22e.js";import"./requestImageUtils-67552ee5.js";import"./Util-2b929b00.js";import"./sphere-5ce3b13c.js";import"./VertexAttribute-15d1866a.js";import"./doublePrecisionUtils-e3c3d0d8.js";import"./OrderIndependentTransparency-5f7257d7.js";import"./Texture-3d2bcec7.js";import"./FramebufferObject-d9042b3f.js";import"./VertexElementDescriptor-2925c6af.js";import"./InterleavedLayout-45bbbdfe.js";import"./vec3f32-01c06d8d.js";import"./heatmapTextureUtils-7a5994f1.js";import"./projectExtentUtils-c85d0d8b.js";import"./plane-6ecad71b.js";import"./spatialReferenceEllipsoidUtils-87122df3.js";import"./ElevationSamplerData-41a54d7d.js";import"./Octree-65a3a6a2.js";import"./edgeProcessing-fca251f2.js";import"./deduplicate-54cc928a.js";import"./MeshComponent-9e26db57.js";import"./earcut-61f7b102.js";import"./imageUtils-c2d0d1ae.js";import"./projection-425e8064.js";import"./ZoomMomentumEstimator-f0d7cb62.js";import"./floatRGBA-2dd25736.js";import"./labelFormatUtils-2486d06e.js";import"./orientedBoundingBox-d2c06194.js";import"./quatf32-51a323b8.js";import"./callExpressionWithFeature-94cb1131.js";import"./DefaultVertexAttributeLayouts-5f20d8dd.js";import"./LercDecoder-25ed2639.js";import"./VectorTile-ade0a955.js";import"./enums-fb086c25.js";import"./config-1337d16e.js";import"./TiledDisplayObject-0268aa47.js";import"./DisplayObject-b5071d0a.js";import"./rasterUtils-0aabb0e8.js";import"./resources-4ce48b80.js";import"./workerHelper-33dafb63.js";import"./webgl-debug-7f880832.js";import"./RenderingContext-f0258ff2.js";import"./ProgramCache-ddf14e3e.js";import"./Program-2221c2b1.js";import"./MediaLayer-faedb24a.js";import"./MediaElementView-92573d58.js";import"./normalizeUtilsSync-f9670301.js";import"./resourceExtension-a1892050.js";import"./prism-line-numbers-713161a8.js";import"./label2-e5a29f4c.js";import"./interactive-1de2e238.js";import"./loadable-6afd516d.js";import"./t9n-b59ffad1.js";import"./observers-c89705b8.js";import"./icon-179b3e31.js";import"./loader-dc9b20b1.js";import"./guid-51402ee7.js";const z=2500;let m=class extends T{getObjectId(){return this.objectId}};r([i({type:Number,json:{read:!0}})],m.prototype,"objectId",void 0),m=r([l("esri.layers.graphics.controllers.StreamGraphic")],m);class B{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const o=this._idToGraphic.get(e);return o?(o.sourceLayer=o.layer=null,this._idToGraphic.delete(e),o):null}update(e,o){this.onUpdate(e,o)}get size(){return this._idToGraphic.size}}let n=class extends $(k(P)){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new V,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._clearInterval(),this.connection=f(this.connection),this.store=f(this.store),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{layer:t,layerView:e}=this,{spatialReference:o,definitionExpression:s,geometryDefinition:c,objectIdField:h,timeInfo:v,purgeOptions:_,maxReconnectionAttempts:I,maxReconnectionInterval:w,customParameters:S}=t,b=t.geometryType?R.toJSON(t.geometryType):null,M=o,u=e.view.spatialReference,O={geometry:c,where:s};this.clear(),this._set("connection",G(t.parsedUrl,M,u,b,O,I,w,S??void 0)),this._outSpatialReference=u.toJSON(),this.store=new B(this._onUpdate.bind(this)),this.featuresManager=new j(this.store,h,v.toJSON(),_);const y="startup-watches";this.handles.remove(y),this.handles.add([t.on("send-message-to-socket",p=>this.connection.sendMessageToSocket(p)),t.on("send-message-to-client",p=>this.connection.sendMessageToClient(p)),this.connection.on("data-received",p=>this._onFeature(p)),this.connection.on("message-received",p=>this._onWebSocketMessage(p)),g(()=>[t.definitionExpression,t.geometryDefinition,t.purgeOptions],()=>this._startup())],y),this._initUpdateInterval()}_onWebSocketMessage(t){if(this.layerView.emit("message-received",t),"type"in t)switch(t.type){case"delete":if(t.objectIds)for(const e of t.objectIds)this.featuresManager.removeById(e);if(t.trackIds)for(const e of t.trackIds)this.featuresManager.removeByTrackId(e);break;case"clear":this.store.forEach(e=>this.featuresManager.removeById(e.objectId))}}_onFeature(t){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry});try{d(t.geometry)&&!t.geometry.spatialReference&&(t.geometry.spatialReference=this._outSpatialReference);const e=m.fromJSON(t);e.sourceLayer=e.layer=this.layer,this.featuresManager.add(e)}catch{}}_onUpdate(t,e){d(e)&&this.graphics.removeMany(e),d(t)&&(this._updateInfo.client+=t.length,this.graphics.addMany(t))}_initUpdateInterval(){this._clearInterval();const{updateInterval:t}=this.layer;let e=performance.now();this._updateIntervalId=setInterval(()=>{const o=performance.now(),s=o-e;if(s>z){e=o;const c=Math.round(this._updateInfo.client/(s/1e3)),h=Math.round(this._updateInfo.websocket/(s/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:c,websocket:h})}this.featuresManager.checkForUpdates()},t)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}};r([i()],n.prototype,"isPaused",void 0),r([i({constructOnly:!0})],n.prototype,"layer",void 0),r([i({constructOnly:!0})],n.prototype,"layerView",void 0),r([i()],n.prototype,"connection",void 0),r([i({readOnly:!0})],n.prototype,"updating",null),n=r([l("esri.layers.graphics.controllers.StreamController")],n);const J=t=>{let e=class extends t{constructor(...o){super(...o),this.connectionError=null,this.filter=null}get connectionStatus(){var o,s,c;return(o=this.controller)!=null&&o.isPaused?"paused":((c=(s=this.controller)==null?void 0:s.connection)==null?void 0:c.connectionStatus)??"disconnected"}};return r([i({readOnly:!0})],e.prototype,"connectionError",void 0),r([i({readOnly:!0})],e.prototype,"connectionStatus",null),r([i({type:U})],e.prototype,"filter",void 0),e=r([l("esri.layers.mixins.StreamLayerView")],e),e};let a=class extends J(C(L(N))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=F.ASYNC,this.hasZ=!0,this.hasM=!1,this._isUserPaused=!1}initialize(){this.handles.add(g(()=>this.suspended,t=>{this.controller&&(t?this.controller.pauseStream():this._isUserPaused||this.controller.resumeStream())}))}get connectionError(){const t=this.get("controller.connection.errorString");if(t)return new x("stream-controller",t)}pause(){this._isUserPaused=!0,this.controller.pauseStream()}resume(){this._isUserPaused=!1,this.controller.resumeStream()}createQuery(){return new E({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(t,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(t),e==null?void 0:e.signal)}createController(){return new n({layer:this.layer,layerView:this})}beforeSetController(){}};r([i({readOnly:!0})],a.prototype,"updatePolicy",void 0),r([i({readOnly:!0})],a.prototype,"connectionError",null),r([i()],a.prototype,"controller",void 0),r([i({readOnly:!0})],a.prototype,"hasZ",void 0),r([i({readOnly:!0})],a.prototype,"hasM",void 0),a=r([l("esri.views.3d.layers.StreamLayerView3D")],a);const We=a;export{We as default};
