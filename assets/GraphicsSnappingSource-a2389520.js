import{hn as w,v as b,R as m,h as y,l as E,b as k,jo as F,cU as d,a3 as C,$ as c,af as $,i5 as A,dc as R,ni as g,dX as G,bP as P,dd as x,l3 as I,jh as O,e as a,y as l,a as H,ey as Z,dx as z}from"./calcite-8912bd40.js";import{p as L}from"./normalizeUtilsSync-3ea564a9.js";import{g as M}from"./FeatureStore-b2e1c75d.js";import{e as j}from"./QueryEngine-dd47d379.js";import{y as W}from"./elevationInfoUtils-551ce894.js";import{d as q,b as T}from"./DimensionAnalysisView3D-96b9bbd9.js";import{i as B,p as U}from"./queryEngineUtils-7ee0448f.js";import{r as _,a as D,n as f}from"./symbologySnappingCandidates-4ae897de.js";import"./index-00759e4a.js";import"./BoundsStore-00da37da.js";import"./PooledRBush-5a11bc7e.js";import"./optimizedFeatureQueryEngineAdapter-b6d8def7.js";import"./centroid-bf48eee6.js";import"./utils-046b23b4.js";import"./projectionSupport-d23d7a2d.js";import"./json-48e3ea08.js";import"./QueryEngineResult-dfcfeac3.js";import"./quantizationUtils-b3b2ae2a.js";import"./WhereClause-8339ee75.js";import"./executionError-fb3f283a.js";import"./utils-e5a50699.js";import"./generateRendererUtils-5b0c1ef7.js";import"./SnappingCandidate-970faec6.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-a3b9e468.js";import"./LineVisualElement-b0e5ebeb.js";import"./MediaLayerVideo-42e60ea8.js";import"./sphere-d0e5285d.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quatf64-f8f1c132.js";import"./Util-6d3f024a.js";import"./plane-5e2b046c.js";import"./spatialReferenceEllipsoidUtils-afb35af9.js";import"./scaleUtils-d13015f2.js";import"./ElevationSamplerData-e3118b17.js";import"./objectResourceUtils-782953c3.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-379a78a4.js";import"./vec33-69c9e93b.js";import"./DefaultMaterial_COLOR_GAMMA-6ed76d86.js";import"./types-e1c0a5bf.js";import"./enums-e2e92c86.js";import"./Version-aa0a1d91.js";import"./quat-7b70e9a8.js";import"./resourceUtils-527631ac.js";import"./basicInterfaces-7449a8bf.js";import"./Indices-d8bff7b2.js";import"./NestedMap-1b5db22e.js";import"./requestImageUtils-d1ba3b36.js";import"./symbolColorUtils-c9d24716.js";import"./VertexAttribute-15d1866a.js";import"./doublePrecisionUtils-e3c3d0d8.js";import"./OrderIndependentTransparency-5f7257d7.js";import"./Texture-563cf5e5.js";import"./FramebufferObject-8b18fc0c.js";import"./VertexElementDescriptor-2925c6af.js";import"./InterleavedLayout-d57c91d0.js";import"./vec3f32-01c06d8d.js";import"./Octree-499541ed.js";import"./edgeProcessing-20e12367.js";import"./deduplicate-769a6f51.js";import"./MeshComponent-788e605a.js";import"./earcut-61f7b102.js";import"./imageUtils-c2d0d1ae.js";import"./projection-5969b753.js";import"./ZoomMomentumEstimator-ef57e6a4.js";import"./floatRGBA-ca2b39ca.js";import"./dehydratedFeatures-3a140d03.js";import"./labelFormatUtils-71e1f841.js";import"./orientedBoundingBox-a14b97b5.js";import"./quatf32-51a323b8.js";import"./callExpressionWithFeature-df1a8f01.js";import"./DefaultVertexAttributeLayouts-5f20d8dd.js";import"./geometryServiceUtils-a536bb19.js";import"./project-909a4219.js";import"./LercDecoder-65586d50.js";import"./VectorTile-d41a1f0f.js";import"./enums-fb086c25.js";import"./config-1337d16e.js";import"./TiledDisplayObject-419c008b.js";import"./DisplayObject-87c37b69.js";import"./rasterUtils-7694cc98.js";import"./resources-7587d8f4.js";import"./workerHelper-6131d203.js";import"./webgl-debug-7f880832.js";import"./RenderingContext-0f21aa0e.js";import"./ProgramCache-f29c900e.js";import"./Program-77209250.js";import"./MediaLayer-4c42fc2f.js";import"./MediaElementView-06baa4d4.js";import"./resourceExtension-f31d9f10.js";import"./prism-line-numbers-eff41b13.js";import"./label2-a2f37e65.js";import"./interactive-1de2e238.js";import"./loadable-6afd516d.js";import"./t9n-81df3a71.js";import"./observers-c89705b8.js";import"./icon-8e47fbec.js";import"./loader-c773e800.js";import"./guid-51402ee7.js";import"./LengthDimension-ebecad1f.js";import"./Segment-499df512.js";import"./analysisViewUtils-1aeb817c.js";import"./ImageMaterial-e77d3ec9.js";import"./Factory-befbd753.js";import"./RightAngleQuadVisualElement-10d61437.js";import"./VisualElementResources-b14774ca.js";import"./PointVisualElement-18444051.js";import"./colorUtils-c0f43caf.js";import"./EditGeometryOperations-f7a23176.js";import"./dehydratedFeatureComparison-409d2bff.js";import"./RenderTexture-6105e069.js";import"./VertexSnappingCandidate-afa006d0.js";const v="graphics-collections";let n=class extends w(b){get updating(){return this.updatingHandles.updating}get _hasZ(){const t=this.view;return m(t)&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:t}=this,{layer:e}=this.layerSource,i=m(t)&&t.type==="3d";if(!i||e.type==="map-notes")return _();const o=async(s,r)=>(await Z(t.whenLayerView(e),r)).elevationAlignPointsInFeatures(s,r);return _(i,{elevationInfo:e.elevationInfo,alignPointsInFeatures:o,spatialReference:t.spatialReference})}get _snappingElevationFilter(){const{view:t}=this,e=m(t)&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes";return D(e)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:e}=this.layerSource,i=m(t)&&t.type==="3d",o=this._extrudedPolygonSymbolsCount>0;return i&&e.type!=="map-notes"&&o?f(o,async(s,r)=>{const p=await t.whenLayerView(e);return d(r),p.queryForSymbologySnapping({candidates:s,spatialReference:t.spatialReference},r)}):f()}constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources(t=>this._destroySource(t))}initialize(){this.updatingHandles.add(()=>this.getGraphicsLayers(),i=>{this.updatingHandles.removeHandles(v);for(const o of i)this._addMany(o.graphics.toArray()),this.handles.add([o.on("graphic-update",s=>this._onGraphicUpdate(s)),this.updatingHandles.addOnCollectionChange(()=>o.graphics,s=>this._onGraphicsChanged(s))],v)},y);const{view:t}=this,{layer:e}=this.layerSource;m(t)&&t.type==="3d"&&e.type!=="map-notes"&&this.addHandles([t.elevationProvider.on("elevation-change",({context:i})=>{W(i,e.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),E(()=>e.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),y),k(()=>e,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(t,e){const{point:i}=t,o=await F(this._mapSources(p=>this._fetchCandidatesForSource(p,t,e)));d(e);const s=this._getGroundElevation,r=o.flat().map(p=>B(p,s));return q(i,r),r}get _getGroundElevation(){return U(this.view)}async _fetchCandidatesForSource(t,e,i){var u;const o=T(e,((u=C(this.view))==null?void 0:u.type)??"2d"),s=await t.queryEngine.executeQueryForSnapping(o,i);d(i);const r=await this._snappingElevationAligner.alignCandidates(s.candidates,i);d(i);const p=await this._symbologySnappingFetcher.fetch(r,i);d(i);const S=p.length===0?r:[...r,...p];return this._snappingElevationFilter.filter(o,S)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some(e=>e.graphics.includes(t.graphic)))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const e of t.removed)this._remove(e);this._addMany(t.added)}_addMany(t){const e=[],i=new Map;for(const o of t)c(o.geometry)||(this._needsInitializeProjection(o.geometry.spatialReference)?(e.push(o.geometry.spatialReference),i.set(o.uid,o)):this._add(o));this._createPendingAdd(e,i)}_createPendingAdd(t,e){if(!t.length)return;const i=$(async r=>{await A(t.map(p=>({source:p,dest:this.spatialReference})),{signal:r}),this._markLoadedSpatialReferences(t);for(const[,p]of e)this._add(p)});this.updatingHandles.addPromise(i.promise);const o={task:i,graphics:e},s=()=>z(this._pendingAdds,o);i.promise.then(s,s),this._pendingAdds.push(o)}_markLoadedSpatialReferences(t){for(const e of t)e.wkid!=null&&this._loadedWkids.add(e.wkid),e.wkt!=null&&this._loadedWkts.add(e.wkt)}_add(t){if(c(t.geometry)||!t.visible)return;let e=t.geometry;if(e.type==="mesh")return;e.type==="extent"&&(e=R.fromExtent(e));const i=this._ensureSource(e.type);if(c(i))return;const o=this._createOptimizedFeature(t.uid,e);c(o)||(i.featureStore.add(o),g(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){return(t.wkid==null||!this._loadedWkids.has(t.wkid))&&(t.wkt==null||!this._loadedWkts.has(t.wkt))&&!G(t,this.spatialReference)}_createOptimizedFeature(t,e){const i=P(L(e),this.spatialReference);if(!i)return null;const o=this._ensureGeometryHasZ(i),s=x(o,this._hasZ,!1);return new I(s,{[h]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const e=o=>{for(;o.length<3;)o.push(0)},i=t.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(e);break;case"polyline":i.paths.forEach(o=>o.forEach(e));break;case"polygon":i.rings.forEach(o=>o.forEach(e))}return i}_ensureSource(t){const e=this._sources[t];if(m(e))return e;const i=this._createSource(t);return this._sources[t]=i,i}_createSource(t){const e=O.toJSON(t),i=this._hasZ,o=new M({geometryType:e,hasZ:i,hasM:!1});return{featureStore:o,queryEngine:new j({featureStore:o,fields:[{name:h,type:"esriFieldTypeOID",alias:h}],geometryType:e,hasM:!1,hasZ:i,objectIdField:h,spatialReference:this.spatialReference,scheduler:m(this.view)&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources(e=>this._removeFromSource(e,t));for(const e of this._pendingAdds)e.graphics.delete(t.uid),e.graphics.size===0&&e.task.abort()}_removeFromSource(t,e){const i=e.uid;t.featureStore.has(i)&&(t.featureStore.removeById(e.uid),g(e.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:e,polygon:i,polyline:o,multipoint:s}=this._sources,r=[];return m(e)&&r.push(t(e)),m(i)&&r.push(t(i)),m(o)&&r.push(t(o)),m(s)&&r.push(t(s)),r}};a([l()],n.prototype,"getGraphicsLayers",void 0),a([l({constructOnly:!0})],n.prototype,"layerSource",void 0),a([l({constructOnly:!0})],n.prototype,"spatialReference",void 0),a([l({constructOnly:!0})],n.prototype,"view",void 0),a([l({readOnly:!0})],n.prototype,"updating",null),a([l({readOnly:!0})],n.prototype,"availability",void 0),a([l()],n.prototype,"_hasZ",null),a([l()],n.prototype,"_snappingElevationAligner",null),a([l()],n.prototype,"_snappingElevationFilter",null),a([l()],n.prototype,"_symbologySnappingFetcher",null),a([l()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),a([l()],n.prototype,"_getGroundElevation",null),n=a([H("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const h="OBJECTID";export{n as GraphicsSnappingSource};
