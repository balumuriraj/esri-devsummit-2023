import{e as s,y as a,n as m}from"./cast-fcb46737.js";import{j as w}from"./Collection-910b6f71.js";import{n as g}from"./collectionUtils-803d9ba8.js";import{a as S}from"./Error-ec6249b9.js";import{l,w as p,a as b}from"./reactiveUtils-4dabbb80.js";import"./typedArrayUtil-4d7bb04c.js";import"./ArrayPool-a8ee9378.js";import{i as q}from"./utils-317368cb.js";import{Y as R,Z as $}from"./index-a2d9f93b.js";import"./geometry-b7901087.js";import{p as A,a as P}from"./Extent-da876e26.js";import{v as U}from"./jsonUtils-229211af.js";import{v as V}from"./Polyline-ff2d7c6b.js";var y;const x={base:A,key:"type",typeMap:{extent:P,polygon:V}};let c=y=class extends R{constructor(o){super(o),this.type="geometry",this.geometry=null}clone(){var o;return new y({geometry:((o=this.geometry)==null?void 0:o.clone())??null})}commitVersionProperties(){this.commitProperty("geometry")}};s([a({types:x,json:{read:U,write:!0}})],c.prototype,"geometry",void 0),c=y=s([m("esri.views.layers.support.Geometry")],c);const C=c;let d=class extends R{constructor(o){super(o),this.type="path",this.path=[]}commitVersionProperties(){this.commitProperty("path")}};s([a({type:[[[Number]]],json:{write:!0}})],d.prototype,"path",void 0),d=s([m("esri.views.layers.support.Path")],d);const j=d,u=w.ofType({key:"type",base:null,typeMap:{rect:$,path:j,geometry:C}}),H=o=>{let i=class extends o{constructor(){super(...arguments),this.attached=!1,this.clips=new u,this.lastUpdateId=-1,this.moving=!1,this.updateRequested=!1,this.visibleAtCurrentScale=!1}initialize(){var n,h,f;const e=((n=this.view)==null?void 0:n.spatialReferenceLocked)??!0;((h=this.view)==null?void 0:h.spatialReference)&&e&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new S("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new q),this.container.fadeTransitionEnabled=!0,this.container.visible=!1,this.container.endTransitions(),this.handles.add([l(()=>this.suspended,t=>{this.container&&(this.container.visible=!t),this.view&&!t&&this.updateRequested&&this.view.requestUpdate()},p),l(()=>{var t;return((t=this.layer)==null?void 0:t.opacity)??1},t=>{this.container&&(this.container.opacity=t)},p),l(()=>this.layer&&"blendMode"in this.layer?this.layer.blendMode:"normal",t=>{this.container&&(this.container.blendMode=t)},p),l(()=>this.layer&&"effect"in this.layer?this.layer.effect:null,t=>{this.container&&(this.container.effect=t)},p),b(()=>this.clips,"change",()=>{this.container&&(this.container.clips=this.clips)},p),l(()=>{var t;return{scale:(t=this.view)==null?void 0:t.scale,scaleRange:this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null}},({scale:t})=>{const v=t&&this.isVisibleAtScale(t);v!==this.visibleAtCurrentScale&&this._set("visibleAtCurrentScale",v)},p)]),(f=this.view)!=null&&f.whenLayerView?this.view.whenLayerView(this.layer).then(t=>{t===this&&this.processAttach()},()=>{}):this.when().then(()=>{this.processAttach()},()=>{}))}destroy(){this.processDetach(),this.updateRequested=!1}get spatialReferenceSupported(){var r;const e=(r=this.view)==null?void 0:r.spatialReference;return e==null||this.supportsSpatialReference(e)}get updating(){var e;return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!!((e=this.updatingHandles)!=null&&e.updating))}processAttach(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}processDetach(){this.attached&&(this.attached=!1,this.detach(),this.updateRequested=!1)}isVisibleAtScale(e){const r=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;if(!r)return!0;const{minScale:n,maxScale:h}=r;return(n===0||e<=n)&&(h===0||e>=h)}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.suspended||this.view.requestUpdate())}processUpdate(e){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",e),this.updateRequested&&!this.suspended&&(this.updateRequested=!1,this.update(e))):this.updateRequested=!1}hitTest(e,r){return Promise.resolve(null)}supportsSpatialReference(e){return!0}canResume(){return!!this.spatialReferenceSupported&&!!super.canResume()&&this.visibleAtCurrentScale}getSuspendInfo(){const e=super.getSuspendInfo(),r=!this.spatialReferenceSupported,n=this.visibleAtCurrentScale;return r&&(e.spatialReferenceNotSupported=r),n&&(e.outsideScaleRange=n),e}};return s([a()],i.prototype,"attached",void 0),s([a({type:u,set(e){const r=g(e,this._get("clips"),u);this._set("clips",r)}})],i.prototype,"clips",void 0),s([a()],i.prototype,"container",void 0),s([a()],i.prototype,"moving",void 0),s([a({readOnly:!0})],i.prototype,"spatialReferenceSupported",null),s([a({readOnly:!0})],i.prototype,"updateParameters",void 0),s([a()],i.prototype,"updateRequested",void 0),s([a()],i.prototype,"updating",null),s([a()],i.prototype,"view",void 0),s([a({readOnly:!0})],i.prototype,"visibleAtCurrentScale",void 0),i=s([m("esri.views.2d.layers.LayerView2D")],i),i};export{H as y};
