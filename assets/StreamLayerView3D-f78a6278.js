import{e as r,y as i,a as l,hn as $,ga as k,v as P,ai as f,jh as R,l as g,R as d,c1 as T,hM as U,a1 as x,g1 as E}from"./calcite-8912bd40.js";import{n as j}from"./StreamFeatureManager-fbac28f2.js";import{createConnection as G}from"./createConnection-83d39580.js";import{r as V}from"./EventedSet-7ad75bee.js";import{w as C}from"./FeatureLikeLayerView3D-55d9655f.js";import{n as L}from"./LayerView3D-4128a20f.js";import{C as F}from"./MediaLayerVideo-42e60ea8.js";import{u as N}from"./LayerView-abbb3570.js";import"./index-00759e4a.js";import"./CircularArray-edd903b3.js";import"./geometryServiceUtils-a536bb19.js";import"./project-909a4219.js";import"./dehydratedFeatures-3a140d03.js";import"./quantizationUtils-b3b2ae2a.js";import"./dehydratedFeatureComparison-409d2bff.js";import"./queryForSymbologySnapping-f85651d3.js";import"./elevationInfoUtils-551ce894.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-8688d43e.js";import"./optimizedFeatureQueryEngineAdapter-b6d8def7.js";import"./centroid-bf48eee6.js";import"./PooledRBush-5a11bc7e.js";import"./basicInterfaces-7449a8bf.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-dd47d379.js";import"./QueryEngineResult-dfcfeac3.js";import"./WhereClause-8339ee75.js";import"./executionError-fb3f283a.js";import"./utils-e5a50699.js";import"./generateRendererUtils-5b0c1ef7.js";import"./projectionSupport-d23d7a2d.js";import"./json-48e3ea08.js";import"./SnappingCandidate-970faec6.js";import"./utils-046b23b4.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-a3b9e468.js";import"./scaleUtils-d13015f2.js";import"./FeatureStore-b2e1c75d.js";import"./BoundsStore-00da37da.js";import"./symbolColorUtils-c9d24716.js";import"./objectResourceUtils-782953c3.js";import"./devEnvironmentUtils-5002a058.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./BufferView-379a78a4.js";import"./vec33-69c9e93b.js";import"./DefaultMaterial_COLOR_GAMMA-6ed76d86.js";import"./types-e1c0a5bf.js";import"./enums-e2e92c86.js";import"./Version-aa0a1d91.js";import"./quat-7b70e9a8.js";import"./quatf64-f8f1c132.js";import"./resourceUtils-527631ac.js";import"./Indices-d8bff7b2.js";import"./NestedMap-1b5db22e.js";import"./requestImageUtils-d1ba3b36.js";import"./Util-6d3f024a.js";import"./sphere-d0e5285d.js";import"./VertexAttribute-15d1866a.js";import"./doublePrecisionUtils-e3c3d0d8.js";import"./OrderIndependentTransparency-5f7257d7.js";import"./Texture-563cf5e5.js";import"./FramebufferObject-8b18fc0c.js";import"./VertexElementDescriptor-2925c6af.js";import"./InterleavedLayout-d57c91d0.js";import"./vec3f32-01c06d8d.js";import"./heatmapTextureUtils-56fc7bff.js";import"./projectExtentUtils-e8c7cde0.js";import"./plane-5e2b046c.js";import"./spatialReferenceEllipsoidUtils-afb35af9.js";import"./ElevationSamplerData-e3118b17.js";import"./Octree-499541ed.js";import"./edgeProcessing-20e12367.js";import"./deduplicate-769a6f51.js";import"./MeshComponent-788e605a.js";import"./earcut-61f7b102.js";import"./imageUtils-c2d0d1ae.js";import"./projection-5969b753.js";import"./ZoomMomentumEstimator-ef57e6a4.js";import"./floatRGBA-ca2b39ca.js";import"./labelFormatUtils-71e1f841.js";import"./orientedBoundingBox-a14b97b5.js";import"./quatf32-51a323b8.js";import"./callExpressionWithFeature-df1a8f01.js";import"./DefaultVertexAttributeLayouts-5f20d8dd.js";import"./LercDecoder-65586d50.js";import"./VectorTile-d41a1f0f.js";import"./enums-fb086c25.js";import"./config-1337d16e.js";import"./TiledDisplayObject-419c008b.js";import"./DisplayObject-87c37b69.js";import"./rasterUtils-7694cc98.js";import"./resources-7587d8f4.js";import"./workerHelper-6131d203.js";import"./webgl-debug-7f880832.js";import"./RenderingContext-0f21aa0e.js";import"./ProgramCache-f29c900e.js";import"./Program-77209250.js";import"./MediaLayer-4c42fc2f.js";import"./MediaElementView-06baa4d4.js";import"./normalizeUtilsSync-3ea564a9.js";import"./resourceExtension-f31d9f10.js";import"./prism-line-numbers-eff41b13.js";import"./label2-a2f37e65.js";import"./interactive-1de2e238.js";import"./loadable-6afd516d.js";import"./t9n-81df3a71.js";import"./observers-c89705b8.js";import"./icon-8e47fbec.js";import"./loader-c773e800.js";import"./guid-51402ee7.js";const z=2500;let m=class extends T{getObjectId(){return this.objectId}};r([i({type:Number,json:{read:!0}})],m.prototype,"objectId",void 0),m=r([l("esri.layers.graphics.controllers.StreamGraphic")],m);class B{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const o=this._idToGraphic.get(e);return o?(o.sourceLayer=o.layer=null,this._idToGraphic.delete(e),o):null}update(e,o){this.onUpdate(e,o)}get size(){return this._idToGraphic.size}}let n=class extends $(k(P)){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new V,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._clearInterval(),this.connection=f(this.connection),this.store=f(this.store),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{layer:t,layerView:e}=this,{spatialReference:o,definitionExpression:s,geometryDefinition:c,objectIdField:h,timeInfo:v,purgeOptions:_,maxReconnectionAttempts:I,maxReconnectionInterval:w,customParameters:S}=t,b=t.geometryType?R.toJSON(t.geometryType):null,M=o,u=e.view.spatialReference,O={geometry:c,where:s};this.clear(),this._set("connection",G(t.parsedUrl,M,u,b,O,I,w,S??void 0)),this._outSpatialReference=u.toJSON(),this.store=new B(this._onUpdate.bind(this)),this.featuresManager=new j(this.store,h,v.toJSON(),_);const y="startup-watches";this.handles.remove(y),this.handles.add([t.on("send-message-to-socket",p=>this.connection.sendMessageToSocket(p)),t.on("send-message-to-client",p=>this.connection.sendMessageToClient(p)),this.connection.on("data-received",p=>this._onFeature(p)),this.connection.on("message-received",p=>this._onWebSocketMessage(p)),g(()=>[t.definitionExpression,t.geometryDefinition,t.purgeOptions],()=>this._startup())],y),this._initUpdateInterval()}_onWebSocketMessage(t){if(this.layerView.emit("message-received",t),"type"in t)switch(t.type){case"delete":if(t.objectIds)for(const e of t.objectIds)this.featuresManager.removeById(e);if(t.trackIds)for(const e of t.trackIds)this.featuresManager.removeByTrackId(e);break;case"clear":this.store.forEach(e=>this.featuresManager.removeById(e.objectId))}}_onFeature(t){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry});try{d(t.geometry)&&!t.geometry.spatialReference&&(t.geometry.spatialReference=this._outSpatialReference);const e=m.fromJSON(t);e.sourceLayer=e.layer=this.layer,this.featuresManager.add(e)}catch{}}_onUpdate(t,e){d(e)&&this.graphics.removeMany(e),d(t)&&(this._updateInfo.client+=t.length,this.graphics.addMany(t))}_initUpdateInterval(){this._clearInterval();const{updateInterval:t}=this.layer;let e=performance.now();this._updateIntervalId=setInterval(()=>{const o=performance.now(),s=o-e;if(s>z){e=o;const c=Math.round(this._updateInfo.client/(s/1e3)),h=Math.round(this._updateInfo.websocket/(s/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:c,websocket:h})}this.featuresManager.checkForUpdates()},t)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}};r([i()],n.prototype,"isPaused",void 0),r([i({constructOnly:!0})],n.prototype,"layer",void 0),r([i({constructOnly:!0})],n.prototype,"layerView",void 0),r([i()],n.prototype,"connection",void 0),r([i({readOnly:!0})],n.prototype,"updating",null),n=r([l("esri.layers.graphics.controllers.StreamController")],n);const J=t=>{let e=class extends t{constructor(...o){super(...o),this.connectionError=null,this.filter=null}get connectionStatus(){var o,s,c;return(o=this.controller)!=null&&o.isPaused?"paused":((c=(s=this.controller)==null?void 0:s.connection)==null?void 0:c.connectionStatus)??"disconnected"}};return r([i({readOnly:!0})],e.prototype,"connectionError",void 0),r([i({readOnly:!0})],e.prototype,"connectionStatus",null),r([i({type:U})],e.prototype,"filter",void 0),e=r([l("esri.layers.mixins.StreamLayerView")],e),e};let a=class extends J(C(L(N))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=F.ASYNC,this.hasZ=!0,this.hasM=!1,this._isUserPaused=!1}initialize(){this.handles.add(g(()=>this.suspended,t=>{this.controller&&(t?this.controller.pauseStream():this._isUserPaused||this.controller.resumeStream())}))}get connectionError(){const t=this.get("controller.connection.errorString");if(t)return new x("stream-controller",t)}pause(){this._isUserPaused=!0,this.controller.pauseStream()}resume(){this._isUserPaused=!1,this.controller.resumeStream()}createQuery(){return new E({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(t,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(t),e==null?void 0:e.signal)}createController(){return new n({layer:this.layer,layerView:this})}beforeSetController(){}};r([i({readOnly:!0})],a.prototype,"updatePolicy",void 0),r([i({readOnly:!0})],a.prototype,"connectionError",null),r([i()],a.prototype,"controller",void 0),r([i({readOnly:!0})],a.prototype,"hasZ",void 0),r([i({readOnly:!0})],a.prototype,"hasM",void 0),a=r([l("esri.views.3d.layers.StreamLayerView3D")],a);const We=a;export{We as default};
