import{ea as l,x as u,u as g,e as w,a as V,f as p,cU as v,$ as b,a8 as L,t as m}from"./calcite-8912bd40.js";import{v as j,b as $,j as P}from"./Util-6d3f024a.js";import{R as S,g as _,N as C}from"./sphere-d0e5285d.js";import{D as E}from"./QueryEngineResult-dfcfeac3.js";import{V as x}from"./Octree-499541ed.js";import{m as I}from"./edgeProcessing-20e12367.js";import"./index-00759e4a.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quatf64-f8f1c132.js";import"./quantizationUtils-b3b2ae2a.js";import"./WhereClause-8339ee75.js";import"./executionError-fb3f283a.js";import"./utils-e5a50699.js";import"./generateRendererUtils-5b0c1ef7.js";import"./projectionSupport-d23d7a2d.js";import"./json-48e3ea08.js";import"./SnappingCandidate-970faec6.js";import"./utils-046b23b4.js";import"./plane-5e2b046c.js";import"./deduplicate-769a6f51.js";import"./Indices-d8bff7b2.js";import"./InterleavedLayout-d57c91d0.js";import"./BufferView-379a78a4.js";import"./types-e1c0a5bf.js";import"./VertexAttribute-15d1866a.js";import"./enums-e2e92c86.js";import"./VertexElementDescriptor-2925c6af.js";const T=1e3;function N(t,o,i){const e=S(),n=_(e);return l(n,n,t,.5),l(n,n,o,.5),e[3]=u(n,t),g(n,n,i),e}let f=class{constructor(){this._idToComponent=new Map,this._components=new x(t=>t.bounds),this._edges=new x(t=>t.bounds),this._tmpLineSegment=j(),this._tmpP1=p(),this._tmpP2=p(),this._tmpP3=p(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),v(o),await this._ensureEdgeLocations(t,o);const i=[];return this._edges.forEachNeighbor(e=>(this._addCandidates(t,e,i),i.length<T),t.bounds),{result:{candidates:i}}}async _ensureEdgeLocations(t,o){const i=[];if(this._components.forEachNeighbor(s=>{if(b(s.info)){const{id:a,uid:r}=s;i.push({id:a,uid:r})}return!0},t.bounds),!i.length)return;const e={components:i},n=await this.remoteClient.invoke("fetchAllEdgeLocations",e,L(o,{}));for(const s of n.components)this._setFetchEdgeLocations(s)}async add(t){const o=new h(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const i=[];this._edges.forEachNeighbor(e=>(e.component===o&&i.push(e),!0),o.bounds),this._edges.remove(i),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(b(o)||t.uid!==o.uid)return;const i=I.createView(t.locations),e=new Array(i.count),n=p(),s=p();for(let d=0;d<i.count;d++){i.position0.getVec(d,n),i.position1.getVec(d,s);const c=N(n,s,t.origin),y=new k(o,d,c);e[d]=y}this._edges.add(e);const{objectIds:a,origin:r}=t;o.info={locations:i,objectIds:a,origin:r}}_addCandidates(t,o,i){const{info:e}=o.component,{origin:n,objectIds:s}=e,a=e.locations,r=a.position0.getVec(o.index,this._tmpP1),d=a.position1.getVec(o.index,this._tmpP2);g(r,r,n),g(d,d,n);const c=s[a.componentIndex.get(o.index)];this._addEdgeCandidate(t,c,r,d,i),this._addVertexCandidate(t,c,r,i),this._addVertexCandidate(t,c,d,i)}_addEdgeCandidate(t,o,i,e,n){if(!(t.types&E.EDGE))return;const s=_(t.bounds),a=$(i,e,this._tmpLineSegment),r=P(a,s,this._tmpP3);C(t.bounds,r)&&n.push({type:"edge",objectId:o,target:m(r),distance:u(s,r),start:m(i),end:m(e)})}_addVertexCandidate(t,o,i,e){if(!(t.types&E.VERTEX))return;const n=_(t.bounds);C(t.bounds,i)&&e.push({type:"vertex",objectId:o,target:m(i),distance:u(n,i)})}};f=w([V("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],f);const ct=f;class h{constructor(o,i){this.id=o,this.bounds=i,this.info=null,this.uid=++h.uid}}h.uid=0;class k{constructor(o,i,e){this.component=o,this.index=i,this.bounds=e}}export{ct as default};
