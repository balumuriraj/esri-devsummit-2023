import{bd as p,p as m,e,y as o,a as s}from"./calcite-c5ae4991.js";import{a as h}from"./BitmapContainer-d9c6decd.js";import{f as n}from"./LayerView2D-88fd32e8.js";import{v as d}from"./ExportStrategy-e891c937.js";import{u as c}from"./LayerView-d2d47806.js";import{i as u}from"./RefreshableLayerView-3999328b.js";import"./index-9a6385f7.js";import"./WGLContainer-02cfa21d.js";import"./definitions-3ddd14a8.js";import"./FramebufferObject-d9042b3f.js";import"./enums-e2e92c86.js";import"./Texture-3d2bcec7.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLBrushVTLSymbol-67363b39.js";import"./DefaultVertexAttributeLayouts-5f20d8dd.js";import"./enums-b1d611e3.js";import"./number-b10bd8f5.js";import"./StyleDefinition-7d58136b.js";import"./enums-4b2a86a0.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./color-b3c5ad11.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-f39983cc.js";import"./Program-2221c2b1.js";import"./MaterialKey-1f5dd6e2.js";import"./alignmentUtils-ae955d28.js";import"./utils-d084e5dc.js";import"./heatmapTextureUtils-7a5994f1.js";import"./Container-c668494e.js";import"./DisplayObject-b5071d0a.js";import"./earcut-61f7b102.js";import"./MapView-c3d00f71.js";import"./unitBezier-881ac1eb.js";import"./TileStrategy-6e83933b.js";import"./TileStore-bec0a021.js";import"./TileInfoView-c5645cd8.js";import"./ClipRect-c491bd72.js";import"./Bitmap-e270b20f.js";let t=class extends u(n(c)){update(r){this._strategy.update(r).catch(i=>{p(i)||m.getLogger(this.declaredClass).error(i)}),this.notifyChange("updating")}attach(){this._bitmapContainer=new h,this.container.addChild(this._bitmapContainer),this._strategy=new d({container:this._bitmapContainer,fetchSource:this.fetchBitmapData.bind(this),requestUpdate:this.requestUpdate.bind(this)})}detach(){this._strategy.destroy(),this._strategy=null,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}fetchBitmapData(r,i,a){return this.layer.fetchImageBitmap(r,i,a)}async doRefresh(){this.requestUpdate()}isUpdating(){return this._strategy.updating||this.updateRequested}};e([o()],t.prototype,"_strategy",void 0),e([o()],t.prototype,"updating",void 0),t=e([s("esri.views.2d.layers.BaseDynamicLayerView2D")],t);const Z=t;export{Z as default};
