import{ly as n,a4 as p,aA as m,v as l,ac as i,ad as e,hm as d,af as h}from"./index-e2cce3f9.js";import{v as u}from"./I3SMeshView3D-51fd2f92.js";import{n as c}from"./LayerView3D-2180ceac.js";import{u as g}from"./LayerView-6c77a651.js";import"./I3SOverrides-64755f50.js";import"./I3SNode-cf7d34e3.js";import"./I3SUtil-7855880e.js";import"./I3SBinaryReader-95d266be.js";import"./RenderTexture-48f14e15.js";import"./FeatureLayerView3D-05602f4c.js";import"./FeatureLayerViewBase3D-90d01387.js";import"./FeatureLikeLayerView3D-fee66a9b.js";import"./dehydratedFeatureComparison-cfbaf2b3.js";import"./queryForSymbologySnapping-1cdc2786.js";import"./elevationInfoUtils-7ae88d1f.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-7ec777bb.js";import"./optimizedFeatureQueryEngineAdapter-b87727e4.js";import"./centroid-d6b71598.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-973a533b.js";import"./QueryEngineResult-cd7af0b9.js";import"./WhereClause-71f39803.js";import"./executionError-fb3f283a.js";import"./utils-8666faa5.js";import"./generateRendererUtils-afd452c5.js";import"./projectionSupport-f926ae71.js";import"./json-48e3ea08.js";import"./utils-3acd7143.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-c84000a0.js";import"./FeatureStore-708c9a3b.js";import"./heatmapTextureUtils-b966ef75.js";import"./projectExtentUtils-22a200cc.js";import"./EventedSet-11e8134f.js";import"./FeatureLayerView-de60a247.js";import"./popupUtils-6dadcc7e.js";import"./RefreshableLayerView-25d7048d.js";import"./SceneModification-55e3052d.js";import"./persistable-0c9443b4.js";import"./SceneLayerWorker-bbe37c2e.js";const y=.2;let r=class extends u(c(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),l(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(d)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([h("esri.views.3d.layers.SceneLayerView3D")],r);const ot=r;export{ot as default};
