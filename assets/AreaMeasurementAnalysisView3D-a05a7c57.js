import{e as a,y as l,n as re,m as ge,t as Ie}from"./cast-fcb46737.js";import{r as _,i as Ee,s as v,t as k,e as W}from"./typedArrayUtil-4d7bb04c.js";import"./ArrayPool-a8ee9378.js";import{b as je,v as Ue,c as ae,e as he,t as Ke,i as Q,u as Qe,s as Xe,a as Ze,r as Je}from"./analysisThemeUtils-efa1a8b1.js";import{a as Ye,n as et,c as E,b as tt}from"./LineVisualElement-ae15994e.js";import{l as N,U as fe,w as le}from"./reactiveUtils-4dabbb80.js";import{g as F,y as de,w as oe,A as We,R as st,K as Le,j as ye,i as it}from"./projection-290b739f.js";import{a as ce,u as rt,I as nt,p as ot,E as at,T as ht,A as lt,K as dt,O as ct}from"./unitUtils-45d1147c.js";import{m as pt,s as ut}from"./mathUtils-b4bb77e2.js";import{a as j,o as ve,g as X,m as Se,v as mt,b as we,l as pe}from"./Segment-f7754d46.js";import{r as Ce,m as gt,a as _t}from"./vec2-528adfe4.js";import{n as be,r as Fe}from"./vec2f64-30dc1443.js";import{o as ke,u as te,g as Y,p as ft,P as $,x as Ne,r as ee,z as ue,_ as qe,j as Lt,e as se}from"./vec3-e93e648f.js";import{n as c}from"./vec3f64-2f9cef06.js";import{n as yt,r as ie}from"./vec4f64-e407da96.js";import{k as Be,t as Pe,w as vt}from"./Extent-da876e26.js";import{n as St}from"./sphere-2af0d852.js";import{H as wt,A as Ct,l as bt,i as Pt,E as Z,t as At,d as Mt}from"./objectResourceUtils-d556a033.js";import{geodesicArea as $t}from"./geometryEngine-d1bfed92.js";import{v as Vt}from"./Polyline-ff2d7c6b.js";import{aP as Rt,aQ as Ae,aR as Gt,aS as Dt,aj as xt,ak as zt,aT as Ot}from"./index-38ff5066.js";import{a as Me}from"./DefaultMaterial_COLOR_GAMMA-fe26fda8.js";import{x as Tt}from"./earcut-58237617.js";import"./plane-b575face.js";import{n as It}from"./Evented-a45c8b0f.js";import{s as Et}from"./Error-ec6249b9.js";import{D as $e,m as jt}from"./aaBoundingRect-193543b5.js";import{V as Ve,g as Ut,w as Wt,p as Ft}from"./EditGeometryOperations-464d8964.js";import{l as U}from"./Color-fb64d77d.js";import"./intl-65a3e389.js";import"./string-a318751c.js";import{j as kt,x as Nt}from"./mat4-44a0988f.js";import{e as qt}from"./mat4f64-1e28eae0.js";import{D as Re,a as Ge}from"./vec4-790471c0.js";import{E as Bt,d as Ht,x as Kt,j as Qt,c as D}from"./VisualVariablePassParameters-d460182b.js";import{O as T}from"./VertexAttribute-9c5c630d.js";import{h as De}from"./Matrix3PassUniform-ad9f953b.js";import{_ as Xt}from"./preload-helper-3bce6601.js";import{t as Zt,l as Jt,e as Yt,o as es,W as ts,a as ss,_ as is}from"./EvaluateSceneLighting.glsl-189abc15.js";import{e as rs,o as q}from"./TransparencyPassType-a11868d2.js";import{n as ns}from"./MultipassTerrainTest.glsl-bb236672.js";import{v as os}from"./View.glsl-3ce196d4.js";import{e as as}from"./Texture2DPassUniform-753de459.js";import{e as xe}from"./Float4PassUniform-d7bdbc81.js";import{o as hs,n as ze}from"./ShaderBuilder-a7d0da4e.js";import{R as J}from"./enums-64ab819c.js";import{e as z}from"./ShaderTechniqueConfiguration-9f5b4555.js";import{s as ls}from"./DefaultTechniqueConfiguration-588e5ab2.js";import{s as ds}from"./locale-30120714.js";import{u as cs}from"./messages-2289086c.js";function ps(t,e){const s=e.center;ke(s,0,0,0);for(let r=0;r<t.length;++r)te(s,s,t[r]);Y(s,s,1/t.length);let i=0;for(let r=0;r<t.length;++r)i=Math.max(i,ft(s,t[r]));e.radius=Math.sqrt(i)}function us(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");Rt(t[0],t[1],t[2],e)}function ms(t,e){return $(t,e)+t[3]}function gs(t,e,s){return F(t,V,s)&&F(e,R,s)?Ne(V,R):0}function _s(t,e){if(!de(t,V)||!de(e,R))return 0;const s=new Ue;return je(s,[V[0],V[1]],[R[0],R[1]]),s.distance}function fs(t,e,s){const i=new Ue;return je(i,[t[0],t[1]],[e[0],e[1]],s),i.distance}function Ls(t,e,s,i){const r=vs;return oe(t,i,V)&&oe(e,i,R)&&oe(s,i,me)?(r.setPoint(0,0,V),r.setPoint(0,1,R),r.setPoint(0,2,me),Math.abs($t(r,"square-meters"))):0}function ys(t,e=null,s=!0){const r=(n,o)=>{if(o[0]===0&&o[1]===0&&o[2]===0)return!1;for(let h=0;h<n.length;++h)if($(o,n[h])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&ee(e,t[0]),!0;ke(S,0,0,0);for(let n=0;n<t.length;++n)te(S,S,t[n]);if(ue(S,S),r(t,S))return e&&ee(e,S),!0;if(!s)return!1;for(let n=0;n<t.length;++n)for(let o=0;o<t.length;++o)if(n!==o&&(qe(S,t[n],t[o]),ue(S,S),r(t,S)))return e&&ee(e,S),!0;return!1}const V=c(),R=c(),me=c(),vs=new Vt({rings:[[V,R,me]],spatialReference:Be.WGS84}),S=c();function Oe(t){return Tt(Ss(t),[],2)}function Ss(t){const e=new Float64Array(2*t.length);for(let s=0;s<t.length;++s){const i=t[s],r=2*s;e[r+0]=i[0],e[r+1]=i[1]}return e}class ws{constructor(e,s){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=c(),this.areaCentroidRenderCoords=c(),this.geodesicAreaCentroidRenderCoords=c(),this._length=0,this._centroidRenderCoords=c(),this._planeWorldCoords=yt(),this._worldUp=c(),this._worldTangent=c(),this._frame=[c(),c(),c()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=c(),this._tempV=c(),this._tempVec3=c(),this._tempSphere={center:c(),radius:0},this._sceneView=e,this.unitNormalizer=s}update(e,s,i,r,n,o,h){const d=this.unitNormalizer,u=this._sceneView.renderSpatialReference,p=this.unitNormalizer.spatialReference,g=_(s);if(this._pathVersion===e.version&&this._validMeasurement===r&&!h&&this._hasCursorPoint===g&&this._mode===o)return!e.isValidPolygon&&(this._updateCursorSegmentLength(e,s),!0);this._pathVersion=e.version,this._validMeasurement=r,this._hasCursorPoint=g;const m=e.numVertices;this._resize(m);const y=ce(i.spatialReference),b=We(i.spatialReference,y)&&st(i.spatialReference),{positionsGeographic:P,positionsWorldCoords:B,positionsRenderCoords:A,positionsSpherical:x}=this;e.forEachVertexPosition((L,C)=>{Cs(i.elevationProvider,L),F(L,B[C],p),F(L,A[C],u),b&&(de(L,P[C]),F(L,x[C],y),ue(x[C],x[C]))});const H=this._updatePathLengths(r);if(this.pathLength=this._length>1?j(d.normalizeDistance(H),"meters"):null,b){const L=this._updateGeodesicPathLengths(r,p);this.geodesicPathLength=this._length>1?j(L,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,s),this._updateMode(e,o),r?(this._updateArea(i,d,u,p,n),b&&this._updateGeodesicArea(i),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(c()),this.positionsRenderCoords.push(c()),this.positionsProjectedWorldCoords.push(be()),this.positionsFittedRenderCoords.push(c()),this.positionsGeographic.push(c()),this.positionsSpherical.push(c()),this.positionsStereographic.push(be()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorldCoords,i=this.pathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const o=i[n]=Ne(s[n],s[(n+1)%this._length]);(n<this._length-1||e)&&(r+=o)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let n=0;for(let o=0;o<this._length;++o){const h=r[o]=fs(i[o],i[(o+1)%this._length],s);(o<this._length-1||e)&&(n+=h)}return n}_updateArea(e,s,i,r,n){const o=e.renderCoordsHelper,h=this.positionsWorldCoords,d=this.positionsRenderCoords,u=this.positionsProjectedWorldCoords,p=this.positionsFittedRenderCoords,g=this._planeWorldCoords,m=this._centroidRenderCoords;ae(d,m),o.worldUpAtPosition(m,this._worldUp),o.worldBasisAtPosition(m,St.X,this._worldTangent),Le(m,this._worldUp,i,this._worldUp,r),Le(m,this._worldTangent,i,this._worldTangent,r),h.length>2&&us(h,g),this.fittingMode=this._selectFittingMode(g,h,this._worldUp,n);let y=0;if(this.fittingMode==="horizontal"){let L=-1/0;d.forEach((C,K)=>{const _e=o.getAltitude(d[K]);_e>L&&(L=_e,y=K)})}const b=h[y];let P=g,B=this._worldTangent;this.fittingMode==="horizontal"?P=this._worldUp:this.fittingMode==="vertical"&&(P=this._tempVec3,B=this._worldUp,Ae(g,this._worldUp,P)),ee(this._frame[2],P),Ae(B,P,this._frame[0]),qe(this._frame[1],this._frame[0],this._frame[2]),Lt(this._frame[1],this._frame[1]);const A=this._tempVec3,x=this._tempU,H=this._tempV;for(let L=0;L<this._length;++L){const C=u[L],K=p[L];se(A,h[L],b),Ce(C,$(this._frame[0],A),$(this._frame[1],A)),Y(x,this._frame[0],C[0]),Y(H,this._frame[1],C[1]),te(A,x,H),te(A,A,b),ye(A,r,K,i)}this.perimeterLength=this._length>0?j(s.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,ae(p,this.areaCentroidRenderCoords),ye(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?ve(s.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,o=this._tempVec3,h=ys(r,o);if(!h)return void(this.geodesicArea=null);const d=this._tempU,u=this._tempV;Gt(o,d,u);for(let p=0;p<this._length;++p){const g=$(r[p],d),m=$(r[p],u),y=$(r[p],o);Ce(n[p],g/y,m/y)}Y(o,o,rt(i).radius),s.toRenderCoords(o,ce(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?ve(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=gt(e[r],e[(r+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];Pe(n,o,h,d)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,s=this.triangleIndices=Me(Oe(e));let i=0;for(let r=0;r<s.length;r+=3)i+=wt(e[s[r]],e[s[r+1]],e[s[r+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];Pe(n,o,h,d)&&(s.add(i),s.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=Me(Oe(s));let r=0;for(let n=0;n<i.length;n+=3)r+=Ls(e[i[n]],e[i[n+1]],e[i[n+2]],Be.WGS84);return r}_selectFittingMode(e,s,i,r){const n=s.map(p=>Math.abs(ms(e,p))).reduce((p,g)=>Math.max(p,g),0);ps(s,this._tempSphere);const o=n/(2*this._tempSphere.radius),h=o<r.maxRelativeErrorCoplanar,d=o<r.maxRelativeErrorAlmostCoplanar;let u="horizontal";return h?u="oblique":d&&(u=Math.abs($(i,e))>Math.cos(pt(r.verticalAngleThreshold))?"horizontal":"vertical"),u}_updateCursorSegmentLength(e,s){const i=e.lastPoint;!e.isValidPolygon&&_(i)&&_(s)?(this.geodesicCursorSegmentLength=j(_s(i,s),"meters"),this.cursorSegmentLength=j(this.unitNormalizer.normalizeDistance(gs(i,s,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,s){if(s===he.Auto){this.actualMeasurementMode="euclidean";let i=0;this.geodesicPathLength!=null&&(i+=this.geodesicPathLength.value),!e.isValidPolygon&&_(this.geodesicCursorSegmentLength)&&(i+=this.geodesicCursorSegmentLength.value),i>bs&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=s===he.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=s}}function Cs(t,e){e.hasZ||(e.z=Ee(Dt(t,e,"ground"),0))}const bs=1e5;let O=class extends ge{constructor(e){super(e)}initialize(){const{spatialReference:e}=this.view,s=ce(e),i=s===nt?ot:s,r=!e||We(e,i)?i:e,n=new Ke(r);this._measurementDataManager=new ws(this.view,n),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),N(()=>this.analysisViewData.cursorPoint,()=>this._update(),fe),N(()=>this.analysisViewData.mode,()=>this._update(),fe)]),this._update()}_update(e=!1){const{analysisViewData:s,view:i}=this,r={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(s.path,s.cursorPoint,i,s.validMeasurement,r,s.mode,e)&&(s.measurementData=this._measurementDataManager.getData())}};a([l({constructOnly:!0})],O.prototype,"view",void 0),a([l({constructOnly:!0})],O.prototype,"analysis",void 0),a([l({constructOnly:!0})],O.prototype,"analysisViewData",void 0),O=a([re("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],O);const He="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",Ps=Et.getLogger(He);let M=class extends It.EventedAccessor{constructor(t={}){super(t),this._handles=new Ie,this._version=0,this._internalGeometryChange=!1,this._extent=$e()}destroy(){this._handles=v(this._handles)}set areaMeasurement(t){this._set("areaMeasurement",t),_(t)&&_(this.view)&&this._initialize(t,this.view)}set view(t){this._set("view",t),_(t)&&_(this.areaMeasurement)&&this._initialize(this.areaMeasurement,t)}get constructed(){return _(this.areaMeasurement)&&_(this.view)}get version(){return this._version}get isValidPolygon(){return this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const t=$e(this._extent);return this.forEachVertex(e=>{jt(t,e.pos)}),t}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(t,e){this._handles.removeAll(),this._handles.add(N(()=>t.geometry,()=>{this._updateEditGeometryFromModelGeometry(t,e)},le)),this._makeDirty(!0)}_makeDirty(t=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),t&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(t,e){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let s=t.geometry;if(_(s)){const i=it(s,e.spatialReference);k(i)&&Ye(t,s.spatialReference,Ps),s=i}_(s)?this._editGeometryOperations=Ve.fromGeometry(s,e.state.viewingMode):this._editGeometryOperations=new Ve(new Ut("polygon",Wt(!0,!1,e.spatialReference))),this._makeDirty(!0),this.emit("change"),this._handles.add(this._editGeometry.on("change",i=>{this._makeDirty(i.addedVertices!=null||i.removedVertices!=null),this._internalGeometryChange=!0,t.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const t=[];return this.forEachVertex(e=>{t.push(e)}),t}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getLastVertex();if(_(t))return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}getVertex(t){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const e=this._editGeometry.components[0].vertices[0];let s=e;do{if(s.index===t)return s;s=s.rightEdge.rightVertex}while(s!==e&&s!=null);return null}getVertexPositionAsPoint(t){return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}getVertexPositionAsPointFromIndex(t){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(t).pos)}forEachVertex(t){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(t)}forEachVertexPosition(t){const e=this._editGeometry.coordinateHelper;this.forEachVertex((s,i)=>{e.vectorToPoint(s.pos,Te),t(Te,i)})}clear(){_(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(t){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=W(this.view);this._editGeometry.components.push(new Ft(s.spatialReference,s.state.viewingMode))}const e=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),e}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const t=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),t}ensureContains(t,e=""){let s=!1;if(this._editGeometry.components.forEach(i=>{i.iterateVertices(r=>{r===t&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${e}`);return s}setVertexPosition(t,e){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(t,this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}equals(t){if(this.numVertices!==t.numVertices)return!1;let e=!0;return this.forEachVertexPosition((s,i)=>{const r=t.getVertexPositionAsPointFromIndex(i);s.equals(r)||(e=!1)}),!!e}};a([l({value:null})],M.prototype,"areaMeasurement",null),a([l({value:null})],M.prototype,"view",null),a([l()],M.prototype,"isValidPolygon",null),a([l()],M.prototype,"extent",null),a([l()],M.prototype,"spatialReference",null),a([l()],M.prototype,"numVertices",null),M=a([re(He)],M);const Te=new vt;function As(t){const e=new hs;e.extensions.add("GL_OES_standard_derivatives");const{vertex:s,fragment:i}=e;return os(s,t),e.attributes.add(T.POSITION,"vec3"),e.attributes.add(T.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.hasMultipassTerrain&&e.varyings.add("depth","float"),s.code.add(ze`
    void main(void) {
      vUV = uv0;
      ${t.hasMultipassTerrain?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(ns,t),i.uniforms.add(new as("size",r=>r.size)),i.uniforms.add(new xe("color1",r=>r.color1)),i.uniforms.add(new xe("color2",r=>r.color2)),i.include(rs),i.code.add(ze`
    void main() {
      ${t.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${t.transparencyPassType===q.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),e}const Ms=Object.freeze(Object.defineProperty({__proto__:null,build:As},Symbol.toStringTag,{value:"Module"}));class ne extends Yt{initializeProgram(e){return new es(e.rctx,ne.shader.get().build(this.configuration),Bt)}_setPipelineState(e){const s=this.configuration,i=e===q.NONE,r=e===q.FrontFace;return ts({blending:s.transparent?i?Vs:Ct(e):null,depthTest:{func:bt(e)},depthWrite:i?s.writeDepth&&ss:Pt(e),colorWrite:is,polygonOffset:i||r?s.polygonOffset&&$s:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}ne.shader=new Zt(Ms,()=>Xt(()=>import("./CheckerBoard.glsl-c1087044.js"),["assets/CheckerBoard.glsl-c1087044.js","assets/ShaderBuilder-a7d0da4e.js","assets/typedArrayUtil-4d7bb04c.js","assets/Error-ec6249b9.js","assets/string-a318751c.js","assets/vec2-528adfe4.js","assets/common-c186b691.js","assets/vec2f64-30dc1443.js","assets/Texture2DPassUniform-753de459.js","assets/View.glsl-3ce196d4.js","assets/mat4-44a0988f.js","assets/vec3f64-2f9cef06.js","assets/mat4f32-77b3d8ac.js","assets/vec3-e93e648f.js","assets/TransparencyPassType-a11868d2.js","assets/VertexAttribute-9c5c630d.js","assets/cast-fcb46737.js","assets/ArrayPool-a8ee9378.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-1e54421e.js","assets/analysisThemeUtils-efa1a8b1.js","assets/unitUtils-45d1147c.js","assets/jsonMap-7b8332c9.js","assets/Extent-da876e26.js","assets/Ellipsoid-89682c5e.js","assets/geometry-b7901087.js","assets/Polyline-ff2d7c6b.js","assets/typeUtils-35750739.js","assets/projection-290b739f.js","assets/preload-helper-3bce6601.js","assets/mathUtils-b4bb77e2.js","assets/vec4-790471c0.js","assets/SimpleObservable-23231131.js","assets/assets-8d3e737a.js","assets/request-6fc81c4c.js","assets/aaBoundingRect-193543b5.js","assets/zscale-89472cba.js","assets/screenUtils-410d12c0.js","assets/Color-fb64d77d.js","assets/colorUtils-639f4d25.js","assets/LineVisualElement-ae15994e.js","assets/Promise-376ab9f6.js","assets/index-38ff5066.js","assets/Graphic-f0e54e86.js","assets/PopupTemplate-40f3c9aa.js","assets/Clonable-545593ce.js","assets/Collection-910b6f71.js","assets/Evented-a45c8b0f.js","assets/fieldUtils-7f54c4b1.js","assets/arcadeOnDemand-281a01eb.js","assets/enumeration-3a03bd31.js","assets/number-27cf8195.js","assets/locale-30120714.js","assets/Identifiable-bfe1ff30.js","assets/symbols-f8232671.js","assets/CIMSymbol-539bd447.js","assets/Symbol-f93ed9fd.js","assets/opacityUtils-1f7f5126.js","assets/symbolLayerUtils3D-76acc268.js","assets/aaBoundingBox-657a9b82.js","assets/persistableUrlUtils-5f719c3b.js","assets/Symbol3DAnchorPosition2D-5726d999.js","assets/collectionUtils-803d9ba8.js","assets/Portal-2bb189b3.js","assets/Loadable-268c900a.js","assets/PortalGroup-8e41557a.js","assets/PortalUser-659cc1d2.js","assets/jsonUtils-229211af.js","assets/Cyclical-151bcc41.js","assets/CollectionFlattener-8f4d518b.js","assets/reactiveUtils-4dabbb80.js","assets/workers-6e30d081.js","assets/Connection-9a1cf8da.js","assets/Queue-b7d3cd48.js","assets/intl-65a3e389.js","assets/messages-2289086c.js","assets/TileInfo-b0eb8c90.js","assets/widget-fb292a2f.js","assets/uuid-73213768.js","assets/HandleOwner-9b396af1.js","assets/byteSizeEstimations-f0cab514.js","assets/executeQueryJSON-2fe748db.js","assets/normalizeUtils-27e29a72.js","assets/query-694f7287.js","assets/pbfQueryUtils-4adda2cc.js","assets/pbf-0e99a620.js","assets/OptimizedFeature-4ab8d380.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-1481fa99.js","assets/FeatureSet-d32b0eb8.js","assets/Field-61ec9870.js","assets/fieldType-f31285f7.js","assets/Query-b96bcde0.js","assets/TimeExtent-23e282b9.js","assets/RelationshipQuery-0dda77ad.js","assets/LegendOptions-010d0873.js","assets/utils-6786b611.js","assets/asyncUtils-437defc4.js","assets/parser-498c8be0.js","assets/ItemCache-fd3aceaf.js","assets/MemCache-18a255ed.js","assets/jsonUtils-f5674613.js","assets/UniqueValueRenderer-08f8851c.js","assets/diffUtils-68b89c71.js","assets/colorRamps-9dac42c1.js","assets/sizeVariableUtils-d4870b0d.js","assets/compilerUtils-18d58939.js","assets/lengthUtils-fa751420.js","assets/jsonUtils-0ff4ff96.js","assets/styleUtils-22b14a8b.js","assets/DictionaryLoader-1cbfea53.js","assets/LRUCache-64ec42ee.js","assets/deprecate-035b199e.js","assets/heatmapUtils-aaea3f32.js","assets/vec4f64-e407da96.js","assets/featureConversionUtils-03a03f40.js","assets/TopFeaturesQuery-cad97c37.js","assets/FeatureLayer-041050b6.js","assets/MultiOriginJSONSupport-aae3bc0c.js","assets/LayerFloorInfo-54b916a2.js","assets/FeatureLayerBase-ad5cfa1a.js","assets/HeightModelInfo-5d01231e.js","assets/arcgisLayerUrl-c09f09b4.js","assets/OperationalLayer-97084f13.js","assets/ElevationInfo-215614d8.js","assets/Layer-5ffe0eda.js","assets/editsZScale-6a661299.js","assets/APIKeyMixin-a0a8917a.js","assets/ArcGISService-21dc1d06.js","assets/BlendLayer-20d0571b.js","assets/CustomParametersMixin-47aab0a6.js","assets/EditBusLayer-e750b15b.js","assets/FeatureReductionLayer-d69dae71.js","assets/labelingInfo-607e66b8.js","assets/labelUtils-3108e8d7.js","assets/defaultsJSON-59981e75.js","assets/OrderedLayer-af7a6030.js","assets/PortalLayer-b2643f87.js","assets/PortalItem-bb7e98a6.js","assets/RefreshableLayer-7f154951.js","assets/ScaleRangeLayer-4be07229.js","assets/TemporalLayer-61549309.js","assets/TimeInfo-1d30dc7c.js","assets/FeatureTemplate-c1d0bb70.js","assets/FeatureType-34d71ade.js","assets/fieldProperties-e2eeb1d5.js","assets/FieldsIndex-f104cc5f.js","assets/versionUtils-fd91f55f.js","assets/styleUtils-a989c0af.js","assets/popupUtils-86dc6b94.js","assets/mat2d-2bbb5feb.js","assets/Scheduler-540208b6.js","assets/Basemap-af7f62f8.js","assets/loadAll-b5bfa7ab.js","assets/writeUtils-e686bd33.js","assets/layerUtils-f4d08f94.js","assets/TablesMixin-bc97d131.js","assets/GraphicsCollection-c37a9ffd.js","assets/ViewingMode-5d7d590b.js","assets/enums-0fc02184.js","assets/mat3-3fc68e72.js","assets/mat3f32-d3d088e8.js","assets/vec2f32-461e65a9.js","assets/TileStrategy-a90cd1af.js","assets/TileStore-00ac650f.js","assets/TileKey-5aef17b6.js","assets/rbush-8e36784a.js","assets/quickselect-322ec8e1.js","assets/capabilities-302cf20d.js","assets/context-util-a4ce3a7b.js","assets/BoundsStore-b9fa27cc.js","assets/PooledRBush-3e149119.js","assets/mat3f64-c6305894.js","assets/sphere-2af0d852.js","assets/mat4f64-1e28eae0.js","assets/quatf64-7fd38d64.js","assets/lineSegment-10422ca0.js","assets/plane-b575face.js","assets/scaleUtils-93ad8d0c.js","assets/ElevationSamplerData-b87e0e50.js","assets/PhysicallyBasedRendering.glsl-d457fff5.js","assets/FloatPassUniform-68d54f51.js","assets/Float4PassUniform-d7bdbc81.js","assets/RgbaFloatEncoding.glsl-52af7fcf.js","assets/vec3f32-c9aa289f.js","assets/Texture2DDrawUniform-053796dc.js","assets/basicInterfaces-19ed850e.js","assets/PiUtils.glsl-db6418ee.js","assets/ReadLinearDepth.glsl-9c87a54a.js","assets/WaterSurface.glsl-c64cb8f1.js","assets/ForwardLinearDepth.glsl-56affafd.js","assets/Matrix3PassUniform-ad9f953b.js","assets/Slice.glsl-3b39b1f7.js","assets/Transform.glsl-6d2e2fd9.js","assets/OutputHighlight.glsl-fbac199a.js","assets/MultipassTerrainTest.glsl-bb236672.js","assets/NormalUtils.glsl-c12729bf.js","assets/AlphaCutoff-96178e0d.js","assets/EvaluateSceneLighting.glsl-189abc15.js","assets/VisualVariablePassParameters-d460182b.js","assets/enums-64ab819c.js","assets/VertexElementDescriptor-2925c6af.js","assets/FramebufferObject-a3b9c52c.js","assets/Texture-243be4d7.js","assets/Util-a48361c6.js","assets/SSAOBlur.glsl-8bf33b65.js","assets/ScreenSpacePass-d5e48a9b.js","assets/SSAO.glsl-980b3771.js","assets/ShaderTechniqueConfiguration-9f5b4555.js","assets/HUD.glsl-d3a072ad.js","assets/VerticalOffset.glsl-87cbb2e3.js","assets/objectResourceUtils-d556a033.js","assets/devEnvironmentUtils-5002a058.js","assets/BufferView-903d1848.js","assets/vec33-e98769e8.js","assets/DefaultMaterial_COLOR_GAMMA-fe26fda8.js","assets/types-e1c0a5bf.js","assets/Version-2946cc03.js","assets/quat-3d5eec2d.js","assets/Texture-46c8c2cb.js","assets/TextureOnly.glsl-1ec9a9ef.js","assets/InterleavedLayout-984d67b2.js","assets/MixExternalColor.glsl-ab0706f7.js","assets/symbolColorUtils-b2b55883.js","assets/ObjectAndLayerIdColor.glsl-ad468647.js","assets/OutputDepth.glsl-470c8e2a.js","assets/VisualVariables.glsl-2b937327.js","assets/DiscardOrAdjustAlphaBlend.glsl-73258f38.js","assets/Normals.glsl-76f97814.js","assets/DefaultMaterial.glsl-885671b3.js","assets/VertexColor.glsl-8c022fa8.js","assets/DefaultTechniqueConfiguration-588e5ab2.js","assets/RealisticTree.glsl-b6cc03f2.js","assets/edgeProcessing-f733ce76.js","assets/deduplicate-03981d62.js","assets/projection-a69d43d0.js","assets/Octree-0a267ea2.js","assets/HUDMaterial.glsl-32cf019c.js","assets/sdfPrimitives-9858c36d.js","assets/floatRGBA-9ad35d39.js","assets/dehydratedFeatures-0557137d.js","assets/quantizationUtils-4dd81f85.js","assets/labelFormatUtils-d25d1d9e.js","assets/I3SUtil-f31a4571.js","assets/I3SBinaryReader-f4829435.js","assets/LineCallout.glsl-358ef89b.js","assets/earcut-58237617.js","assets/SnappingCandidate-970faec6.js","assets/MeshComponent-a43522cc.js","assets/MarkerSizing.glsl-566261cc.js","assets/RibbonLine.glsl-0f7c2bbc.js","assets/LineStipple.glsl-ed22a88b.js","assets/callExpressionWithFeature-55effb7b.js","assets/LineMarker.glsl-8166d610.js","assets/NativeLine.glsl-742e9e29.js","assets/Path.glsl-9f6bab44.js","assets/ColorMaterial.glsl-3a70e4a7.js","assets/Pattern.glsl-67f4595b.js","assets/DefaultVertexAttributeLayouts-2bcf3941.js","assets/LercDecoder-4c9b29b3.js","assets/config-1337d16e.js","assets/workerHelper-e756ac3a.js","assets/originUtils-1469eeaf.js","assets/multiOriginJSONSupportUtils-c978f4c3.js","assets/portalItemUtils-2ccd793f.js","assets/index-8df10e3d.css","assets/Segment-f7754d46.js","assets/elevationInfoUtils-36e5dd0f.js","assets/geometryEngine-d1bfed92.js","assets/geometryEngineBase-3dd302e0.js","assets/hydrated-c3c67fc1.js","assets/EditGeometryOperations-464d8964.js"]));const $s={factor:0,units:-25},Vs=Jt(J.SRC_ALPHA,J.ONE,J.ONE_MINUS_SRC_ALPHA,J.ONE_MINUS_SRC_ALPHA);class G extends ls{constructor(){super(...arguments),this.transparencyPassType=q.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}a([z({count:q.COUNT})],G.prototype,"transparencyPassType",void 0),a([z()],G.prototype,"transparent",void 0),a([z()],G.prototype,"writeDepth",void 0),a([z()],G.prototype,"polygonOffset",void 0),a([z()],G.prototype,"hasMultipassTerrain",void 0),a([z()],G.prototype,"cullAboveGround",void 0);let Rs=class extends Ht{constructor(e){super(e,new Ds),this._configuration=new G}dispose(){}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.hasMultipassTerrain=s.multipassTerrain.enabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}intersect(e,s,i,r,n,o,h){return Kt(e,s,r,n,o,void 0,h)}requiresSlot(e,s){return s===De.Color||s===De.Alpha?e===(this.parameters.transparent?this.parameters.writeDepth?Z.TRANSPARENT_MATERIAL:Z.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:Z.OPAQUE_MATERIAL)||e===Z.DRAPED_MATERIAL:!1}createGLMaterial(e){return new Gs(e)}createBufferWriter(){return new xt(zt)}};class Gs extends At{beginSlot(e){return this.ensureTechnique(ne,e)}}class Ds extends Qt{constructor(){super(...arguments),this.size=Fe(1,1),this.color1=ie(.75,.75,.75,1),this.color2=ie(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class xs extends et{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=D.OccludeAndTransparent,this._geometry=null,this._size=Fe(1,1),this._color1=ie(1,.5,0,.5),this._color2=ie(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){_t(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){Re(e,this._color1)||(Ge(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){Re(e,this._color2)||(Ge(this._color2,e),this._updateMaterial())}_updateMaterial(){_(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Rs({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){_(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if(k(this._geometry)||k(this._checkerBoardMaterial))return;const s=zs;kt(s,this.transform);const i=this._geometry,r=[],n=c();i.position.forEach(d=>{se(n,d,s),r.push(n[0],n[1],n[2])});const o=[];i.uv.forEach(d=>{o.push(d[0],d[1])});const h=new Mt([[T.POSITION,{size:3,data:r,exclusive:!0}],[T.UV0,{size:2,data:o,exclusive:!0}]],[[T.POSITION,i.triangleIndices],[T.UV0,i.triangleIndices]]);e.addGeometry(h,this._checkerBoardMaterial)}_geometryChanged(){this.recreateGeometry()}}const zs=c();let w=class extends ge{constructor(t){super(t),this._handles=new Ie,this._params={pathLineColor:U.toUnitRGBA(Q()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:U.toUnitRGBA(Q()),perimeterLineWidth:2,projectionLineColor:U.toUnitRGBA(Q()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:U.toUnitRGBA(Q(.5)),areaColor2:U.toUnitRGBA(Qe(.5)),labelDistance:25},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=c(),this._originTransform=qt(),this._cursorPositionRenderSpace=c(),this.messages=null,this.viewData=Os,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}initialize(){const{analysisViewData:t,_params:e,view:s}=this;this._path=new E({view:s,attached:!0,width:e.pathLineWidth,color:e.pathLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._intersectedPath=new E({view:s,attached:!0,width:e.pathLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._perimeter=new E({view:s,attached:!0,width:e.perimeterLineWidth,color:e.perimeterLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._intersectedPerimeter=new E({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._projectionLines=new E({view:s,attached:!0,width:e.projectionLineWidth,color:e.projectionLineColor,stipplePattern:Ot(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._measurementArea=new xs({view:s,attached:!0,color1:e.areaColor1,color2:e.areaColor2});const i={attached:!0,backgroundColor:Xe(.6),textColor:Ze(),view:s};this._areaLabel=new X({...i,fontSize:I.Large}),this._pathLengthLabel=new X({...i,fontSize:I.Small}),this._cursorSegmentLengthLabel=new X({...i,fontSize:I.Small}),this._perimeterLengthLabel=new X({...i,fontSize:I.Small}),this._handles.add([N(()=>[t.mode,this.visible,t.unit,t.measurementData,t.cursorPoint],()=>this._update(),le),N(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),le),ds(()=>this._updateMessageBundle())]),this._updateMessageBundle()}destroy(){this._measurementArea=v(this._measurementArea),this._path=v(this._path),this._intersectedPath=v(this._intersectedPath),this._perimeter=v(this._perimeter),this._intersectedPerimeter=v(this._intersectedPerimeter),this._areaLabel=v(this._areaLabel),this._pathLengthLabel=v(this._pathLengthLabel),this._cursorSegmentLengthLabel=v(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=v(this._perimeterLengthLabel),this._projectionLines=v(this._projectionLines),this._handles=v(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;k(t)||(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,s){const i=e.isValidPolygon,r=t.actualMeasurementMode==="geodesic",n=r?t.geodesicArea:t.area;let o=1;if(n){const d=this._toPreferredAreaUnit(n,this.analysisViewData.unit);o=ut(Math.sqrt(d.value)/Math.sqrt(300)),o*=Math.sqrt(at(1,d.unit,"square-meters")),o/=t.unitNormalizer.normalizeDistance(1)}const h={validMeasurement:i,path:e,pathVersion:e.version,cursorPoint:s,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",h)}_updateOrigin(){const t=this.viewData;ae(t.positionsRenderCoords,this._origin),Nt(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=e.path,i=this.view.renderCoordsHelper.spatialReference,r=e.mode,n=[],o=[],h=[],d=e.validMeasurement?s.numVertices:s.numVertices-1;for(let u=0;u<d;++u){const p=e[t][u],g=e[t][(u+1)%s.numVertices];let m=null;switch(r){case"euclidean":m=new pe(p,g);break;case"geodesic":m=new Se(p,g,i)}e.intersectingSegments.has(u)?h.push(m):o.push(m),n.push(m)}return{all:n,nonIntersecting:o,intersecting:h}}_updatePathSegments(){const{view:{renderCoordsHelper:t},viewData:e,visible:s}=this,i=this._createSegments("positionsRenderCoords"),{cursorPoint:r,mode:n,path:o}=e,h=!o.isValidPolygon,d=t.spatialReference;if(this._cursorSegment=null,o.numVertices>0&&h&&_(r)&&t.toRenderCoords(r,this._cursorPositionRenderSpace)){const u=e.positionsRenderCoords[o.numVertices-1],p=this._cursorPositionRenderSpace;let g=null;switch(n){case"euclidean":g=new pe(u,p);break;case"geodesic":g=new Se(u,p,d)}i.nonIntersecting.push(g),this._cursorSegment=g}this._path.setGeometryFromSegments(i.nonIntersecting,this._origin),this._path.visible=s,this._intersectedPath.setGeometryFromSegments(i.intersecting,this._origin),this._intersectedPath.visible=s,this._pathSegments=i.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.path,i=t.mode;if(s.numVertices>0&&t.validMeasurement&&i==="euclidean"){const r=[];for(let n=0;n<s.numVertices;++n){const o=c();se(o,t.positionsRenderCoords[n],this._origin);const h=c();se(h,t.positionsFittedRenderCoords[n],this._origin),r.push([o,h])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:s,path:i}=t;if(!i)return;const r=!i.isValidPolygon,n=this.visible,o=this._formatAreaLabel(this.messages,s==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);_(o)?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=o,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&n):this._areaLabel.visible=!1,this._set("areaLabel",W(o));const h=this._formatLengthLabel(this.messages,s==="geodesic"?e.geodesicPathLength:e.pathLength,this.analysisViewData.unit);if(_(h)&&t.pathLengthLabelSegmentIndex>=0&&t.pathLengthLabelSegmentIndex<this._pathSegments.length){const m=this._pathSegments[t.pathLengthLabelSegmentIndex],y=_(this._cursorSegment)?this._cursorSegment:Ts;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:m,right:y},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=r&&i.numVertices>0&&n}else this._pathLengthLabel.visible=!1;const d=s==="geodesic"?t.measurementData.geodesicCursorSegmentLength:t.measurementData.cursorSegmentLength;if(_(d)){const m=this._formatLengthLabel(this.messages,d,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=_(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=W(m),this._cursorSegmentLengthLabel.visible=r&&d.value!==0&&n}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const u=t.mode==="geodesic",p=u?e.geodesicPathLength:e.perimeterLength,g=this._formatLengthLabel(this.messages,p,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",W(g)),t.validMeasurement&&t.intersectingSegments.size===0){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=W(g),this._perimeterLengthLabel.visible=!0;let m=!0;for(let y=0;y<t.path.numVertices;++y){const b=(t.perimeterLengthLabelSegmentIndex+y)%t.path.numVertices,P=u?this._pathSegments[b]:this._perimeterSegments[b];if(m=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:P,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;m=!1}this._perimeterLengthLabel.visible=m&&n}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return mt(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return lt(t.value,t.unit);case"imperial":return ht(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const s=this._deriveLengthUnitFromAreaUnit(e);switch(s){case"metric":return ct(t.value,t.unit);case"imperial":return dt(t.value,t.unit);default:return s}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,s){return t&&e&&we(t,e,this._preferredAreaUnit(e,s))}_formatLengthLabel(t,e,s){return t&&e&&we(t,e,this._preferredLengthUnit(e,s))}_updateMessageBundle(){this.loadingMessages=!0,cs("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var I;a([l()],w.prototype,"view",void 0),a([l()],w.prototype,"messages",void 0),a([l()],w.prototype,"analysis",void 0),a([l()],w.prototype,"viewData",void 0),a([l()],w.prototype,"analysisViewData",void 0),a([l({readOnly:!0})],w.prototype,"areaLabel",void 0),a([l({readOnly:!0})],w.prototype,"perimeterLengthLabel",void 0),a([l()],w.prototype,"loadingMessages",void 0),a([l()],w.prototype,"visible",null),w=a([re("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],w),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(I||(I={}));const Os={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Ts=new pe(c(),c());let f=class extends tt(ge){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=he.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new M({view:e,areaMeasurement:t}),this.analysisVisualization=new w({view:e,analysis:t,analysisViewData:this}),this.analysisController=new O({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=v(this.analysisController),this.analysisVisualization=v(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return k(t)?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return Ee(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};a([l({readOnly:!0})],f.prototype,"type",void 0),a([l({constructOnly:!0,nonNullable:!0})],f.prototype,"analysis",void 0),a([l()],f.prototype,"updating",null),a([l()],f.prototype,"analysisVisualization",void 0),a([l()],f.prototype,"analysisController",void 0),a([l()],f.prototype,"result",null),a([l()],f.prototype,"measurementData",void 0),a([l()],f.prototype,"viewData",null),a([l()],f.prototype,"validMeasurement",null),a([l()],f.prototype,"path",void 0),a([l()],f.prototype,"lastDraggedVertex",void 0),a([l()],f.prototype,"cursorPoint",void 0),a([l()],f.prototype,"mode",void 0),a([l()],f.prototype,"unit",null),a([l(Je)],f.prototype,"_defaultUnit",void 0),f=a([re("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],f);const Is=f,Ti=Object.freeze(Object.defineProperty({__proto__:null,default:Is},Symbol.toStringTag,{value:"Module"}));export{Ti as A,As as n};
