import{e as n,y as l,n as v,m as q,B as Q}from"./cast-fcb46737.js";import{g as _}from"./Graphic-f0e54e86.js";import{t as m,r as p,p as N,W as G}from"./typedArrayUtil-4d7bb04c.js";import{j as E}from"./Collection-910b6f71.js";import{s as c,a as x}from"./Error-ec6249b9.js";import{j as U,L as B,D as j}from"./promiseUtils-1e54421e.js";import{h as S,l as V,w as I}from"./reactiveUtils-4dabbb80.js";import"./ArrayPool-a8ee9378.js";import"./BuildingGroupSublayer-cc8c0afd.js";import{WhereClause as W}from"./WhereClause-d4b8b019.js";import"./BuildingComponentSublayer-cd73d2b0.js";import{y as T}from"./FeatureReductionLayer-d69dae71.js";import{T as w,v as C,c as k}from"./fieldUtils-7f54c4b1.js";import{x as $}from"./Query-b96bcde0.js";import{n as D}from"./Evented-a45c8b0f.js";import{a as z}from"./HandleOwner-9b396af1.js";import{s as H}from"./Identifiable-bfe1ff30.js";import{m as X}from"./Promise-376ab9f6.js";import{y as Y,u as J,L as K,I as L}from"./I3SMeshView3D-b6817b32.js";import{t as Z}from"./vec4f64-e407da96.js";import{p as tt,b as et,w as rt,M as it}from"./I3SUtil-f31a4571.js";import{r as ot}from"./symbolColorUtils-b2b55883.js";import{L as M,d as st,f as nt,n as lt}from"./I3SQueryFeatureStore-80df2bf8.js";import{t as pt}from"./DefinitionExpressionSceneLayerView-9802dbb8.js";import"./string-a318751c.js";import{d as at,s as R}from"./popupUtils-af06d391.js";import{I as ut}from"./Scheduler-540208b6.js";import{n as mt}from"./LayerView3D-5a3fc1dd.js";import{a9 as dt}from"./index-b1b27909.js";import{u as ht}from"./LayerView-bd9a2316.js";import"./nextTick-3ee5a785.js";import"./geometry-b7901087.js";import"./Extent-da876e26.js";import"./Ellipsoid-89682c5e.js";import"./Polyline-ff2d7c6b.js";import"./typeUtils-35750739.js";import"./jsonMap-7b8332c9.js";import"./PopupTemplate-40f3c9aa.js";import"./Clonable-545593ce.js";import"./enumeration-3a03bd31.js";import"./number-27cf8195.js";import"./locale-30120714.js";import"./symbols-f8232671.js";import"./CIMSymbol-539bd447.js";import"./Symbol-f93ed9fd.js";import"./Color-fb64d77d.js";import"./colorUtils-639f4d25.js";import"./mathUtils-b4bb77e2.js";import"./vec3-e93e648f.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-1f7f5126.js";import"./symbolLayerUtils3D-76acc268.js";import"./aaBoundingBox-657a9b82.js";import"./aaBoundingRect-193543b5.js";import"./request-6fc81c4c.js";import"./preload-helper-3bce6601.js";import"./persistableUrlUtils-5f719c3b.js";import"./Symbol3DAnchorPosition2D-5726d999.js";import"./collectionUtils-803d9ba8.js";import"./Portal-2bb189b3.js";import"./Loadable-268c900a.js";import"./PortalGroup-8e41557a.js";import"./PortalUser-659cc1d2.js";import"./jsonUtils-229211af.js";import"./SimpleObservable-23231131.js";import"./loadAll-b5bfa7ab.js";import"./asyncUtils-437defc4.js";import"./UniqueValueRenderer-08f8851c.js";import"./LegendOptions-010d0873.js";import"./arcadeOnDemand-281a01eb.js";import"./diffUtils-68b89c71.js";import"./colorRamps-9dac42c1.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-18d58939.js";import"./lengthUtils-fa751420.js";import"./unitUtils-45d1147c.js";import"./jsonUtils-0ff4ff96.js";import"./styleUtils-22b14a8b.js";import"./jsonUtils-f5674613.js";import"./DictionaryLoader-1cbfea53.js";import"./LRUCache-64ec42ee.js";import"./MemCache-18a255ed.js";import"./deprecate-035b199e.js";import"./heatmapUtils-aaea3f32.js";import"./FeatureLayer-041050b6.js";import"./MultiOriginJSONSupport-aae3bc0c.js";import"./LayerFloorInfo-54b916a2.js";import"./FeatureLayerBase-ad5cfa1a.js";import"./Field-61ec9870.js";import"./fieldType-f31285f7.js";import"./HeightModelInfo-5d01231e.js";import"./arcgisLayerUrl-c09f09b4.js";import"./OperationalLayer-97084f13.js";import"./TimeExtent-23e282b9.js";import"./ElevationInfo-215614d8.js";import"./RelationshipQuery-0dda77ad.js";import"./Layer-5ffe0eda.js";import"./workers-6e30d081.js";import"./Connection-9a1cf8da.js";import"./Queue-b7d3cd48.js";import"./assets-8d3e737a.js";import"./intl-65a3e389.js";import"./messages-2289086c.js";import"./editsZScale-6a661299.js";import"./queryZScale-1481fa99.js";import"./zscale-89472cba.js";import"./FeatureSet-d32b0eb8.js";import"./APIKeyMixin-a0a8917a.js";import"./ArcGISService-21dc1d06.js";import"./BlendLayer-20d0571b.js";import"./parser-498c8be0.js";import"./mat4f32-77b3d8ac.js";import"./mat4-44a0988f.js";import"./CustomParametersMixin-47aab0a6.js";import"./EditBusLayer-e750b15b.js";import"./OrderedLayer-af7a6030.js";import"./PortalLayer-b2643f87.js";import"./PortalItem-bb7e98a6.js";import"./RefreshableLayer-7f154951.js";import"./ScaleRangeLayer-4be07229.js";import"./TemporalLayer-61549309.js";import"./TimeInfo-1d30dc7c.js";import"./FeatureTemplate-c1d0bb70.js";import"./FeatureType-34d71ade.js";import"./fieldProperties-e2eeb1d5.js";import"./FieldsIndex-f104cc5f.js";import"./labelingInfo-607e66b8.js";import"./labelUtils-3108e8d7.js";import"./defaultsJSON-59981e75.js";import"./versionUtils-fd91f55f.js";import"./styleUtils-a989c0af.js";import"./TopFeaturesQuery-cad97c37.js";import"./popupUtils-86dc6b94.js";import"./capabilities-a18453f6.js";import"./I3SIndexInfo-7af1a739.js";import"./I3SLayerDefinitions-ec48d9ab.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./mat4f64-1e28eae0.js";import"./projection-290b739f.js";import"./I3SOverrides-2be26e94.js";import"./dehydratedFeatures-0557137d.js";import"./quantizationUtils-4dd81f85.js";import"./ViewingMode-5d7d590b.js";import"./I3SNode-941d6d9e.js";import"./sphere-2af0d852.js";import"./mat3f64-c6305894.js";import"./quatf64-7fd38d64.js";import"./vec2f64-30dc1443.js";import"./I3SBinaryReader-f4829435.js";import"./VertexAttribute-9c5c630d.js";import"./RenderTexture-a15e38d0.js";import"./PhysicallyBasedRendering.glsl-d457fff5.js";import"./View.glsl-3ce196d4.js";import"./ShaderBuilder-a7d0da4e.js";import"./FloatPassUniform-68d54f51.js";import"./Float4PassUniform-d7bdbc81.js";import"./RgbaFloatEncoding.glsl-52af7fcf.js";import"./Texture2DPassUniform-753de459.js";import"./vec2-528adfe4.js";import"./vec3f32-c9aa289f.js";import"./Texture2DDrawUniform-053796dc.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-db6418ee.js";import"./AlphaCutoff-96178e0d.js";import"./Texture-46c8c2cb.js";import"./VisualVariablePassParameters-d460182b.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./FramebufferObject-a3b9c52c.js";import"./Texture-243be4d7.js";import"./context-util-a4ce3a7b.js";import"./Util-a48361c6.js";import"./TextureOnly.glsl-1ec9a9ef.js";import"./ScreenSpacePass-d5e48a9b.js";import"./Octree-0a267ea2.js";import"./plane-b575face.js";import"./FeatureLayerView3D-04ea68f9.js";import"./FeatureLayerViewBase3D-efa5bf23.js";import"./FeatureLikeLayerView3D-37eba3fd.js";import"./dehydratedFeatureComparison-59868945.js";import"./utils-6786b611.js";import"./ItemCache-fd3aceaf.js";import"./queryForSymbologySnapping-52bf6934.js";import"./elevationInfoUtils-36e5dd0f.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-621c34c6.js";import"./OptimizedFeature-4ab8d380.js";import"./optimizedFeatureQueryEngineAdapter-d72f082e.js";import"./centroid-5c988df3.js";import"./PooledRBush-3e149119.js";import"./quickselect-322ec8e1.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-cdb0ba2c.js";import"./normalizeUtils-27e29a72.js";import"./featureConversionUtils-03a03f40.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./QueryEngineResult-8f90b8dc.js";import"./utils-b34fcd9d.js";import"./generateRendererUtils-7252b5e6.js";import"./projectionSupport-aa5eaa0d.js";import"./json-48e3ea08.js";import"./SnappingCandidate-970faec6.js";import"./utils-511aa5f5.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-3de56d7f.js";import"./scaleUtils-93ad8d0c.js";import"./FeatureStore-3cfbdfa3.js";import"./BoundsStore-b9fa27cc.js";import"./EvaluateSceneLighting.glsl-189abc15.js";import"./SSAOBlur.glsl-8bf33b65.js";import"./ReadLinearDepth.glsl-9c87a54a.js";import"./SSAO.glsl-980b3771.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./objectResourceUtils-d556a033.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-903d1848.js";import"./vec33-e98769e8.js";import"./DefaultMaterial_COLOR_GAMMA-fe26fda8.js";import"./types-e1c0a5bf.js";import"./Version-2946cc03.js";import"./quat-3d5eec2d.js";import"./vec2f32-461e65a9.js";import"./lineSegment-10422ca0.js";import"./InterleavedLayout-984d67b2.js";import"./Matrix3PassUniform-ad9f953b.js";import"./MixExternalColor.glsl-ab0706f7.js";import"./ForwardLinearDepth.glsl-56affafd.js";import"./Slice.glsl-3b39b1f7.js";import"./Transform.glsl-6d2e2fd9.js";import"./ObjectAndLayerIdColor.glsl-ad468647.js";import"./OutputDepth.glsl-470c8e2a.js";import"./OutputHighlight.glsl-fbac199a.js";import"./VisualVariables.glsl-2b937327.js";import"./DiscardOrAdjustAlphaBlend.glsl-73258f38.js";import"./TransparencyPassType-a11868d2.js";import"./Normals.glsl-76f97814.js";import"./DefaultMaterial.glsl-885671b3.js";import"./VertexColor.glsl-8c022fa8.js";import"./VerticalOffset.glsl-87cbb2e3.js";import"./MultipassTerrainTest.glsl-bb236672.js";import"./DefaultTechniqueConfiguration-588e5ab2.js";import"./RealisticTree.glsl-b6cc03f2.js";import"./Heatmap.glsl-388d8513.js";import"./HeatmapDensity.glsl-92a06674.js";import"./heatmapTextureUtils-2627384f.js";import"./projectExtentUtils-fc8b6a4f.js";import"./query-694f7287.js";import"./pbfQueryUtils-4adda2cc.js";import"./pbf-0e99a620.js";import"./LercDecoder-4c9b29b3.js";import"./EventedSet-be3adf97.js";import"./FeatureLayerView-e9178bab.js";import"./RefreshableLayerView-7c1c2c75.js";import"./layerUtils-f4d08f94.js";import"./SceneModification-3462a3f4.js";import"./persistable-ad5d84e1.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./uuid-73213768.js";import"./SceneLayerWorker-02654016.js";import"./edgeProcessing-f733ce76.js";import"./deduplicate-03981d62.js";import"./Cyclical-151bcc41.js";import"./CollectionFlattener-8f4d518b.js";import"./TileInfo-b0eb8c90.js";import"./widget-fb292a2f.js";import"./executeQueryJSON-2fe748db.js";import"./mat2d-2bbb5feb.js";import"./Basemap-af7f62f8.js";import"./writeUtils-e686bd33.js";import"./TablesMixin-bc97d131.js";import"./GraphicsCollection-c37a9ffd.js";import"./enums-0fc02184.js";import"./TileStrategy-a90cd1af.js";import"./TileStore-00ac650f.js";import"./TileKey-5aef17b6.js";import"./rbush-8e36784a.js";import"./capabilities-302cf20d.js";import"./ElevationSamplerData-b87e0e50.js";import"./WaterSurface.glsl-c64cb8f1.js";import"./NormalUtils.glsl-c12729bf.js";import"./HUD.glsl-d3a072ad.js";import"./projection-a69d43d0.js";import"./HUDMaterial.glsl-32cf019c.js";import"./sdfPrimitives-9858c36d.js";import"./floatRGBA-9ad35d39.js";import"./labelFormatUtils-d25d1d9e.js";import"./LineCallout.glsl-358ef89b.js";import"./earcut-58237617.js";import"./MeshComponent-a43522cc.js";import"./MarkerSizing.glsl-566261cc.js";import"./RibbonLine.glsl-0f7c2bbc.js";import"./LineStipple.glsl-ed22a88b.js";import"./callExpressionWithFeature-55effb7b.js";import"./LineMarker.glsl-8166d610.js";import"./NativeLine.glsl-742e9e29.js";import"./Path.glsl-9f6bab44.js";import"./ColorMaterial.glsl-3a70e4a7.js";import"./Pattern.glsl-67f4595b.js";import"./DefaultVertexAttributeLayouts-2bcf3941.js";import"./config-1337d16e.js";import"./workerHelper-e756ac3a.js";import"./originUtils-1469eeaf.js";import"./portalItemUtils-2ccd793f.js";const O=(t,e)=>{let r=class extends X(z(H(D.EventedMixin(t)))){constructor(i){super(i),this.sublayer=null,this.parent=null,this.view=null}initialize(){}get suspended(){return!this.canResume()}get updating(){return!this.suspended&&this.isUpdating()}get visible(){var i;return!!((i=this.sublayer)!=null&&i.visible)}set visible(i){this._overrideIfSome("visible",i)}get fullOpacity(){const i=o=>o??1;return i(this.get("sublayer.opacity"))*i(this.get("parent.fullOpacity"))}canResume(){var i,o;return!((i=this.parent)!=null&&i.suspended)&&((o=this.view)==null?void 0:o.ready)&&this.visible||!1}isUpdating(){return!1}};return n([l()],r.prototype,"sublayer",void 0),n([l()],r.prototype,"parent",void 0),n([l({readOnly:!0})],r.prototype,"suspended",null),n([l({type:Boolean,readOnly:!0})],r.prototype,"updating",null),n([l()],r.prototype,"view",void 0),n([l()],r.prototype,"visible",null),n([l()],r.prototype,"fullOpacity",null),r=n([v("esri.views.3d.layers.BuildingSublayerView3D")],r),r};var d;(function(t){t[t.Solid=0]="Solid",t[t.WireFrame=1]="WireFrame",t[t.XRay=2]="XRay"})(d||(d={}));const P=.15,yt=.5*P;function ct(t){switch(t.filterMode.type){case"solid":return{mode:d.Solid};case"wire-frame":return{mode:d.WireFrame,edgeMaterial:tt(t.filterMode.edges,{})};case"x-ray":return{mode:d.XRay}}}function A(t,e){if(m(e))return t.color[3]=0,t.edgeMaterial=null,void(t.pickable=!1);switch(e.mode){case d.Solid:return;case d.WireFrame:return t.color[3]=0,t.edgeMaterial=e.edgeMaterial,void(t.pickable=!1);case d.XRay:return t.color[0]=1,t.color[1]=1,t.color[2]=1,t.color[3]*=P,t.colorMixMode=ot.Replace,t.castShadows=!1,t.pickable=!1,void(t.edgeMaterial=ft(t.edgeMaterial))}}function ft(t){return m(t)?null:(g.lastMaterial!==t&&(g.cachedMaterial=gt(t),g.lastMaterial=t),g.cachedMaterial)}function gt(t){const e=Z(t.color);return e[3]*=yt,{...t,color:e}}const g={cachedMaterial:null,lastMaterial:null};class b extends q{constructor(){super(...arguments),this.sublayer=null}get updating(){return!1}get suspended(){return!1}get availableFields(){return[]}get filter(){return null}set filter(e){throw new Error("Not implemented")}queryFeatures(e,r){throw new Error("Not implemented")}queryObjectIds(e,r){throw new Error("Not implemented")}queryFeatureCount(e,r){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(e,r){throw new Error("Not implemented")}highlight(e){throw new Error("Not implemented")}}n([l()],b.prototype,"sublayer",void 0),n([l()],b.prototype,"availableFields",null),n([l()],b.prototype,"filter",null);let a=class extends pt(Y(O(b))){constructor(){super(...arguments),this.type="building-component-sublayer-3d",this.layerView=null,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!1,this.requiredFields=[],this.progressiveLoadFactor=1,this._queryEngine=null}get i3slayer(){return this.sublayer}get layerUid(){return this.sublayer.layer.uid}get sublayerUid(){return this.sublayer.uid}get layerId(){return this.sublayer.layer.id}get sublayerId(){return this.sublayer.id}get layerPopupEnabled(){return this.sublayer.popupEnabled}initialize(){this.updatingHandles.add(()=>[this.sublayer.renderer,this.definitionExpressionFields,this.filterExpressionFields],()=>this._updateRequiredFields()),this.updatingHandles.add(()=>this.sublayer.renderer,e=>this._rendererChange(e),S);const t=()=>this._filterChange();this.updatingHandles.add(()=>this.parsedDefinitionExpression,t),this.updatingHandles.add(()=>p(this._filter)?this._filter.sortedObjectIds:null,t),this.updatingHandles.add(()=>p(this._filter)?this._filter.parsedWhereClause:null,t),this.updatingHandles.add(()=>[p(this._filter)?this._filter.parsedGeometry:null,p(this.filter)?this.filter.spatialRelationship:null],()=>this._geometryFilterChange()),this.updatingHandles.add(()=>this.parsedFilterExpressions,()=>this._updateSymbologyOverride(),S),this.addResolvingPromise(this._updateRequiredFields())}get lodFactor(){return this.view.qualitySettings.sceneService.object.lodFactor}get parsedFilterExpressions(){return this.sublayer.modelName!=="Overview"&&this.layerView?this.layerView.filterExpressions.map(([t,e])=>{let r;try{r=W.create(t,this.sublayer.fieldsIndex)}catch(s){return c.getLogger(this.declaredClass).error("Failed to parse filterExpression: "+s),null}if(!r.isStandardized)return c.getLogger(this.declaredClass).error("filterExpression is using non standard function"),null;const i=[],o=r.fieldNames;return et(o,this.sublayer.fields,{missingFields:i}),i.length>0?(c.getLogger(this.declaredClass).error(`filterExpression references unknown fields: ${i.join(", ")}`),null):[r,e]}).filter(t=>t!=null):[]}get filter(){return p(this._filter)?this._filter.viewFilter:null}set filter(t){!m(t)&&M.checkSupport(t)?p(this._filter)?this._filter.viewFilter=t:this._filter=new M({viewFilter:t,layerFieldsIndex:this.sublayer.fieldsIndex,loadAsyncModule:e=>this._loadAsyncModule(e),addSqlFilter:(e,r)=>this.addSqlFilter(e,r,this.logError)}):this._filter=null}isUpdating(){return super.isUpdating()||p(this._filter)&&this._filter.updating}_updateSymbologyOverride(){const t=this.parsedFilterExpressions;t.length>0?this._setSymbologyOverride((e,r)=>{for(const[i,o]of t)try{if(i.testFeature(e))return A(r,o)}catch(s){this.logError(s)}return A(r,null)},this.filterExpressionFields):this._setSymbologyOverride(null,null)}get filterExpressionFields(){return w(this.sublayer.fieldsIndex,this.parsedFilterExpressions.reduce((t,[e])=>t.concat(e.fieldNames),new Array))}get availableFields(){const t=this.sublayer,e=t.fieldsIndex;let r=this.requiredFields;if(t.outFields||t.layer.outFields){const i=[...t.outFields||[],...t.layer.outFields||[]];r=[...C(e,i),...r]}return w(e,r)}_createLayerGraphic(t){const e=new _(null,null,t);return e.layer=this.sublayer.layer,e.sourceLayer=this.sublayer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}async fetchPopupFeatures(t,e){const r=this._validateFetchPopupFeatures(e);if(r)throw r;if(m(e)||!e.clientGraphics||e.clientGraphics.length===0)return[];const i=[],o=[],s=p(this.sublayer.associatedLayer)?await this.sublayer.associatedLayer.load():this.sublayer,h=C(this.sublayer.fieldsIndex,await at(s,R(this.sublayer,e))),f=new Set;for(const y of e.clientGraphics)k(h,y,f)?o.push(y):i.push(y);return o.length===0?i:(p(this.sublayer.associatedLayer)&&await this.sublayer.associatedLayer.load().catch(()=>c.getLogger(this.declaredClass).warn("Failed to load associated feature layer. Displaying popup attributes from cached attributes.")),this.whenGraphicAttributes(o,Array.from(f)).catch(()=>o).then(y=>i.concat(y)))}async _updateRequiredFields(){const t=w(this.sublayer.fieldsIndex,[...this.sublayer.renderer?await this.sublayer.renderer.getRequiredFields(this.sublayer.fieldsIndex):[],...this.definitionExpressionFields||[],...this.filterExpressionFields||[]]);this._set("requiredFields",t)}_validateFetchPopupFeatures(t){const{sublayer:e}=this,{popupEnabled:r}=e;return r?R(e,t)?void 0:new x("buildingscenelayerview3d:fetchPopupFeatures","Layer does not define a popup template",{sublayer:e}):new x("buildingscenelayerview3d:fetchPopupFeatures","Popups are disabled",{sublayer:e})}getFilters(){const t=super.getFilters();return this.addSqlFilter(t,this.parsedDefinitionExpression,this.logError),p(this._filter)&&this._filter.addFilters(t,this.view,this._controller.crsIndex,this._collection),t}createQuery(){const t={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return p(this.filter)?this.filter.createQuery(t):new $(t)}queryExtent(t,e){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(t),e==null?void 0:e.signal)}queryFeatureCount(t,e){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(t),e==null?void 0:e.signal)}queryFeatures(t,e){return this._ensureQueryEngine().executeQuery(this._ensureQuery(t),e==null?void 0:e.signal).then(r=>{if(!(r!=null&&r.features))return r;const i=this.sublayer,o=i.layer;for(const s of r.features)s.layer=o,s.sourceLayer=i;return r})}queryObjectIds(t,e){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(t),e==null?void 0:e.signal)}_ensureQueryEngine(){return m(this._queryEngine)&&(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const t=J(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new st({layerView:this,priority:ut.FEATURE_QUERY_ENGINE,spatialIndex:new nt({featureAdapter:new lt({objectIdField:this.sublayer.objectIdField,attributeStorageInfo:this.sublayer.attributeStorageInfo,getFeatureExtent:t}),toArray:()=>{const e=new Array;return this._forAllFeatures((r,i,o)=>(e.push({id:r,index:i,meta:o}),K.CONTINUE),null,L.ALL_IN_CLIPPING_AREA),e},forAllFeatures:(e,r)=>this._forAllFeatures((i,o,s)=>e({id:i,index:o,meta:s}),r,L.ALL_IN_CLIPPING_AREA),getFeatureExtent:t,sourceSpatialReference:rt(this.sublayer),viewSpatialReference:this.view.spatialReference})})}_ensureQuery(t){return this._addDefinitionExpressionToQuery(m(t)?this.createQuery():$.from(t))}};n([l()],a.prototype,"i3slayer",null),n([l()],a.prototype,"layerView",void 0),n([l()],a.prototype,"lodFactor",null),n([l({readOnly:!0})],a.prototype,"parsedFilterExpressions",null),n([l({type:T})],a.prototype,"filter",null),n([l()],a.prototype,"_filter",void 0),n([l({type:[String],readOnly:!0})],a.prototype,"filterExpressionFields",null),n([l({type:[String],readOnly:!0})],a.prototype,"requiredFields",void 0),n([l({type:[String],readOnly:!0})],a.prototype,"availableFields",null),a=n([v("esri.views.3d.layers.BuildingComponentSublayerView3D")],a);const bt=a;class F extends ht{constructor(e){super(e),this.layer=null,this.sublayerViews=null}highlight(e){throw new Error("Not implemented")}}n([l()],F.prototype,"layer",void 0),n([l()],F.prototype,"sublayerViews",void 0);const wt=O(q);let u=class extends mt(F){constructor(t){super(t),this.type="building-scene-3d",this.sublayerViews=new E,this._abortController=new AbortController,this._loadingComponents=0,this._pendingWhenSublayerViews=new Map}get filterExpression(){var i;const t=this.layer.activeFilterId,e=t!=null?this.layer.filters.find(o=>o.id===t):null,r=e!=null?(i=e.filterBlocks)==null?void 0:i.find(o=>o.filterMode.type==="solid"):null;return r?r.filterExpression:null}get filterExpressions(){const t=this.layer.activeFilterId,e=t!=null?this.layer.filters.find(r=>r.id===t):null;return e&&e.filterBlocks?e.filterBlocks.toArray().map(r=>[r.filterExpression??"",ct(r)]):[]}get updatingProgressValue(){const t=this.sublayerViews,e=this._loadingComponents+(t?t.length:0);return t.reduce((r,i)=>r+i.updatingProgress,0)/e}isUpdating(){return this._loadingComponents>0||this.sublayerViews&&this.sublayerViews.some(t=>t.updating)}initialize(){it(this.layer.spatialReference,this.view.spatialReference,this.view.viewingMode),this._initializeSubLayerViews(this.layer.sublayers,this)}destroy(){this.sublayerViews&&(this.sublayerViews.forEach(t=>t.destroy()),this.sublayerViews=null),this._abortController=N(this._abortController)}_initializeSubLayerViews(t,e){const r=this,i=this.view;t.forEach(o=>{if(!o.isEmpty)if(o.type==="building-group"){const s=new wt({sublayer:o,view:i,parent:e});this._initializeSubLayerViews(o.sublayers,s)}else o.geometryType==="mesh"&&(this._loadingComponents++,o.load({signal:this._abortController.signal}).then(()=>{const s=new bt({sublayer:o,layerView:r,view:i,parent:e});this.sublayerViews.push(s);const h=this._pendingWhenSublayerViews.get(o);if(h){for(const f of h)f.resolve(s);this._pendingWhenSublayerViews.delete(o)}this.handles.add([V(()=>s.updating,()=>this.notifyChange("updating"),I),V(()=>s.updatingProgress,()=>this.notifyChange("updatingProgressValue"),I)])}).catch(s=>{U(s)||c.getLogger(this.declaredClass).error(`Error while creating view for sublayer ${o.id}
Layer: ${this.layer.url}
`,s)}).then(()=>{this._loadingComponents--,this.notifyChange("updating"),this.notifyChange("updatingProgressValue")}))})}getGraphicFromIntersectorTarget(t){for(const e of this.sublayerViews.items)if(e.sublayer.uid===t.sublayerUid)return e.getGraphicFromIntersectorTarget(t);return null}async fetchPopupFeatures(t,e){if(m(e)||!e.clientGraphics||e.clientGraphics.length===0)return[];const r=G(e.clientGraphics,o=>o.sourceLayer),i=[];for(const[o,s]of r){const h=this._findComponent(o);p(h)&&i.push(h.fetchPopupFeatures(t,{...e,clientGraphics:s}))}return B(i).then(o=>o.flat())}whenGraphicBounds(t){const e=this._findComponent(t.sourceLayer);return m(e)?Promise.reject():e.whenGraphicBounds(t)}getAABBFromIntersectorTarget(t){for(const e of this.sublayerViews.items)if(e.sublayer.uid===t.sublayerUid)return e.getAABBFromIntersectorTarget(t);return null}async whenSublayerView(t){const e=this._findComponent(t);if(p(e))return e;const r=this._pendingWhenSublayerViews.get(t),i=j();return r?r.push(i):this._pendingWhenSublayerViews.set(t,[i]),i.promise}_findComponent(t){return this.sublayerViews.find(e=>t===e.sublayer)}highlight(t){t instanceof _?t=[t]:t instanceof E&&(t=t.toArray());const e=[];if(Array.isArray(t)&&t.length>0&&t[0]instanceof _){const r=t,i=new Map;for(const o of r){let s=i.get(o.sourceLayer);s==null&&(s=[],i.set(o.sourceLayer,s)),s.push(o)}this.sublayerViews.forEach(o=>{const s=i.get(o.sublayer);s&&e.push(o.highlight(s))})}return Q(e)}getUsedMemory(){return this.sublayerViews.reduce((t,e)=>t+e.getUsedMemory(),0)}getUnloadedMemory(){return this.sublayerViews.reduce((t,e)=>t+e.getUnloadedMemory(),0)}ignoresMemoryFactor(){return!1}};n([l()],u.prototype,"sublayerViews",void 0),n([l({readOnly:!0})],u.prototype,"filterExpression",null),n([l({readOnly:!0})],u.prototype,"filterExpressions",null),n([l(dt)],u.prototype,"updatingProgress",void 0),n([l({readOnly:!0,dependsOn:[]})],u.prototype,"updatingProgressValue",null),u=n([v("esri.views.3d.layers.BuildingSceneLayerView3D")],u);const nn=u;export{nn as default};
