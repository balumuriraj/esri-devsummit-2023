import{e as a,y as o,n as l,c}from"./cast-fcb46737.js";import{f as h}from"./promiseUtils-1e54421e.js";import{j as p}from"./reactiveUtils-4dabbb80.js";import"./typedArrayUtil-4d7bb04c.js";import"./ArrayPool-a8ee9378.js";import{a7 as m,a8 as d}from"./index-b7900c1e.js";const R=r=>{let i=class extends r{constructor(){super(...arguments),this.slicePlaneEnabled=!1,this.supportsHeightUnitConversion=!1}postscript(e){super.postscript(e),m(this.layer)&&this.addResolvingPromise(this._validateHeightModelInfo())}async _validateHeightModelInfo(){const e=new AbortController,t=e.signal;this.handles.add(c(()=>e.abort())),await p(()=>{var n;return(n=this.view.defaultsFromMap)==null?void 0:n.heightModelInfoReady},t),h(t);const s=d(this.layer,this.view.heightModelInfo,this.supportsHeightUnitConversion);if(s)throw s}canResume(){const e=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;return super.canResume()&&(!e||!e.minScale||!e.maxScale||e.minScale>=e.maxScale)}getSuspendInfo(){const e=super.getSuspendInfo(),t=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;return t&&t.minScale&&t.maxScale&&t.minScale<t.maxScale&&(e.outsideScaleRange=!0),e}};return a([o()],i.prototype,"view",void 0),a([o()],i.prototype,"slicePlaneEnabled",void 0),i=a([l("esri.views.3d.layers.LayerView3D")],i),i};export{R as n};
