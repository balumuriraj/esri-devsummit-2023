import{_ as p}from"./index-00759e4a.js";import{lD as g,lE as y,j7 as w,li as I,lF as _,jR as d,$ as h}from"./calcite-8912bd40.js";class b{constructor(){this.code=null,this.description=null}}class v{constructor(t){this.error=new b,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function f(e){return new v(e)}class j{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function V(e){return new j(e)}const a=new Set;function $(e,t,i,m=!1,u){a.clear();for(const r in i){const n=e.get(r);if(!n)continue;const l=i[r],s=q(n,l);if(s!==l&&u&&u.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:n,originalValue:l,sanitizedValue:s}}),a.add(n.name),n&&(m||n.editable)){const c=g(n,s);if(c)return f(y(c,n,s));t[n.name]=s}}for(const r of(e==null?void 0:e.requiredFields)??[])if(!a.has(r.name))return f(`missing required field "${r.name}"`);return null}function q(e,t){let i=t;return typeof t=="string"&&w(e)?i=parseFloat(t):t!=null&&I(e)&&typeof t!="string"&&(i=String(t)),_(i)}let o;function D(e,t){if(!e||!d(t))return e;if("rings"in e||"paths"in e){if(h(o))throw new TypeError("geometry engine not loaded");return o.simplify(t,e)}return e}async function E(){return h(o)&&(o=await p(()=>import("./geometryEngineJSON-1e940afe.js"),["assets/geometryEngineJSON-1e940afe.js","assets/geometryEngineBase-e1a33b0a.js","assets/geometryEngineJSON-3f330436.js","assets/json-48e3ea08.js"])),o}async function G(e,t){!d(e)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await E()}export{f as a,V as f,D as g,$ as m,G as w};
