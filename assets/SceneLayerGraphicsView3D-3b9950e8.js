import{_ as z}from"./preload-helper-3bce6601.js";import{e as p,y as d,n as W}from"./cast-fcb46737.js";import{g as M}from"./Graphic-f0e54e86.js";import{s as b,t as L,r as m,e as Z,M as K}from"./typedArrayUtil-4d7bb04c.js";import{s as N}from"./Error-ec6249b9.js";import{h as V,l as Y}from"./reactiveUtils-4dabbb80.js";import"./ArrayPool-a8ee9378.js";import{u as J}from"./vec3-e93e648f.js";import{r as X,n as ee}from"./vec3f64-2f9cef06.js";import{x as $,j as te}from"./projection-290b739f.js";import{H as re}from"./Extent-da876e26.js";import{o as ie}from"./zscale-89472cba.js";import{ad as G,k as oe,ao as se,a9 as ae}from"./index-38ff5066.js";import{v as H,A as ne}from"./dehydratedFeatures-0557137d.js";import{s as pe,I as de,t as me}from"./I3SOverrides-b08cc3de.js";import{y as le}from"./FeatureReductionLayer-d69dae71.js";import{x as P}from"./Query-b96bcde0.js";import{h as he}from"./LercDecoder-4c9b29b3.js";import{n as ue}from"./LayerView3D-276cda7d.js";import{F as ce,p as ge}from"./FeatureLikeLayerView3D-cace86c7.js";import{c as _e,i as ye,u as fe,b as be,E as ve}from"./SceneLayerView-c06ba281.js";import{R as xe,S as Ee,u as Ie,V as we,g as Se}from"./I3SUtil-f31a4571.js";import{t as Ce}from"./DefinitionExpressionSceneLayerView-9802dbb8.js";import{c as De}from"./PopupSceneLayerView-56a29af9.js";import{i as Ae}from"./basicInterfaces-19ed850e.js";import{I as Oe}from"./Scheduler-540208b6.js";import"./string-a318751c.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-1e54421e.js";import"./geometry-b7901087.js";import"./Polyline-ff2d7c6b.js";import"./typeUtils-35750739.js";import"./jsonMap-7b8332c9.js";import"./PopupTemplate-40f3c9aa.js";import"./Clonable-545593ce.js";import"./Collection-910b6f71.js";import"./Evented-a45c8b0f.js";import"./SimpleObservable-23231131.js";import"./fieldUtils-7f54c4b1.js";import"./arcadeOnDemand-281a01eb.js";import"./enumeration-3a03bd31.js";import"./number-27cf8195.js";import"./locale-30120714.js";import"./Identifiable-bfe1ff30.js";import"./symbols-f8232671.js";import"./CIMSymbol-539bd447.js";import"./Symbol-f93ed9fd.js";import"./Color-fb64d77d.js";import"./colorUtils-639f4d25.js";import"./mathUtils-b4bb77e2.js";import"./vec4-790471c0.js";import"./common-c186b691.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-1f7f5126.js";import"./symbolLayerUtils3D-76acc268.js";import"./aaBoundingBox-657a9b82.js";import"./aaBoundingRect-193543b5.js";import"./request-6fc81c4c.js";import"./persistableUrlUtils-5f719c3b.js";import"./Symbol3DAnchorPosition2D-5726d999.js";import"./collectionUtils-803d9ba8.js";import"./Portal-2bb189b3.js";import"./Loadable-268c900a.js";import"./Promise-376ab9f6.js";import"./PortalGroup-8e41557a.js";import"./PortalUser-659cc1d2.js";import"./Ellipsoid-89682c5e.js";import"./jsonUtils-229211af.js";import"./unitUtils-45d1147c.js";import"./mat4-44a0988f.js";import"./assets-8d3e737a.js";import"./Cyclical-151bcc41.js";import"./CollectionFlattener-8f4d518b.js";import"./workers-6e30d081.js";import"./Connection-9a1cf8da.js";import"./Queue-b7d3cd48.js";import"./intl-65a3e389.js";import"./messages-2289086c.js";import"./TileInfo-b0eb8c90.js";import"./widget-fb292a2f.js";import"./uuid-73213768.js";import"./HandleOwner-9b396af1.js";import"./byteSizeEstimations-f0cab514.js";import"./executeQueryJSON-2fe748db.js";import"./normalizeUtils-27e29a72.js";import"./query-694f7287.js";import"./pbfQueryUtils-4adda2cc.js";import"./pbf-0e99a620.js";import"./OptimizedFeature-4ab8d380.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-1481fa99.js";import"./FeatureSet-d32b0eb8.js";import"./Field-61ec9870.js";import"./fieldType-f31285f7.js";import"./RelationshipQuery-0dda77ad.js";import"./LegendOptions-010d0873.js";import"./utils-6786b611.js";import"./asyncUtils-437defc4.js";import"./parser-498c8be0.js";import"./mat4f32-77b3d8ac.js";import"./ItemCache-fd3aceaf.js";import"./MemCache-18a255ed.js";import"./jsonUtils-f5674613.js";import"./UniqueValueRenderer-08f8851c.js";import"./diffUtils-68b89c71.js";import"./colorRamps-9dac42c1.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-18d58939.js";import"./lengthUtils-fa751420.js";import"./jsonUtils-0ff4ff96.js";import"./styleUtils-22b14a8b.js";import"./DictionaryLoader-1cbfea53.js";import"./LRUCache-64ec42ee.js";import"./deprecate-035b199e.js";import"./heatmapUtils-aaea3f32.js";import"./vec4f64-e407da96.js";import"./featureConversionUtils-03a03f40.js";import"./TopFeaturesQuery-cad97c37.js";import"./TimeExtent-23e282b9.js";import"./FeatureLayer-041050b6.js";import"./MultiOriginJSONSupport-aae3bc0c.js";import"./LayerFloorInfo-54b916a2.js";import"./FeatureLayerBase-ad5cfa1a.js";import"./HeightModelInfo-5d01231e.js";import"./arcgisLayerUrl-c09f09b4.js";import"./OperationalLayer-97084f13.js";import"./ElevationInfo-215614d8.js";import"./Layer-5ffe0eda.js";import"./editsZScale-6a661299.js";import"./APIKeyMixin-a0a8917a.js";import"./ArcGISService-21dc1d06.js";import"./BlendLayer-20d0571b.js";import"./CustomParametersMixin-47aab0a6.js";import"./EditBusLayer-e750b15b.js";import"./OrderedLayer-af7a6030.js";import"./PortalLayer-b2643f87.js";import"./PortalItem-bb7e98a6.js";import"./RefreshableLayer-7f154951.js";import"./ScaleRangeLayer-4be07229.js";import"./TemporalLayer-61549309.js";import"./TimeInfo-1d30dc7c.js";import"./FeatureTemplate-c1d0bb70.js";import"./FeatureType-34d71ade.js";import"./fieldProperties-e2eeb1d5.js";import"./FieldsIndex-f104cc5f.js";import"./labelingInfo-607e66b8.js";import"./labelUtils-3108e8d7.js";import"./defaultsJSON-59981e75.js";import"./versionUtils-fd91f55f.js";import"./styleUtils-a989c0af.js";import"./popupUtils-86dc6b94.js";import"./mat2d-2bbb5feb.js";import"./Basemap-af7f62f8.js";import"./loadAll-b5bfa7ab.js";import"./writeUtils-e686bd33.js";import"./layerUtils-f4d08f94.js";import"./TablesMixin-bc97d131.js";import"./GraphicsCollection-c37a9ffd.js";import"./ViewingMode-5d7d590b.js";import"./enums-0fc02184.js";import"./vec2-528adfe4.js";import"./vec2f64-30dc1443.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./TileStrategy-a90cd1af.js";import"./TileStore-00ac650f.js";import"./TileKey-5aef17b6.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./capabilities-302cf20d.js";import"./context-util-a4ce3a7b.js";import"./BoundsStore-b9fa27cc.js";import"./PooledRBush-3e149119.js";import"./mat3f64-c6305894.js";import"./sphere-2af0d852.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./lineSegment-10422ca0.js";import"./plane-b575face.js";import"./scaleUtils-93ad8d0c.js";import"./ElevationSamplerData-b87e0e50.js";import"./PhysicallyBasedRendering.glsl-d457fff5.js";import"./View.glsl-3ce196d4.js";import"./ShaderBuilder-a7d0da4e.js";import"./FloatPassUniform-68d54f51.js";import"./Float4PassUniform-d7bdbc81.js";import"./RgbaFloatEncoding.glsl-52af7fcf.js";import"./Texture2DPassUniform-753de459.js";import"./vec3f32-c9aa289f.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-053796dc.js";import"./PiUtils.glsl-db6418ee.js";import"./ReadLinearDepth.glsl-9c87a54a.js";import"./WaterSurface.glsl-c64cb8f1.js";import"./ForwardLinearDepth.glsl-56affafd.js";import"./Matrix3PassUniform-ad9f953b.js";import"./Slice.glsl-3b39b1f7.js";import"./Transform.glsl-6d2e2fd9.js";import"./OutputHighlight.glsl-fbac199a.js";import"./MultipassTerrainTest.glsl-bb236672.js";import"./NormalUtils.glsl-c12729bf.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-a11868d2.js";import"./EvaluateSceneLighting.glsl-189abc15.js";import"./VisualVariablePassParameters-d460182b.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./FramebufferObject-a3b9c52c.js";import"./Texture-243be4d7.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-8bf33b65.js";import"./ScreenSpacePass-d5e48a9b.js";import"./SSAO.glsl-980b3771.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-d3a072ad.js";import"./VerticalOffset.glsl-87cbb2e3.js";import"./objectResourceUtils-d556a033.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-903d1848.js";import"./vec33-e98769e8.js";import"./DefaultMaterial_COLOR_GAMMA-fe26fda8.js";import"./types-e1c0a5bf.js";import"./Version-2946cc03.js";import"./quat-3d5eec2d.js";import"./Texture-46c8c2cb.js";import"./TextureOnly.glsl-1ec9a9ef.js";import"./InterleavedLayout-984d67b2.js";import"./MixExternalColor.glsl-ab0706f7.js";import"./symbolColorUtils-b2b55883.js";import"./ObjectAndLayerIdColor.glsl-ad468647.js";import"./OutputDepth.glsl-470c8e2a.js";import"./VisualVariables.glsl-2b937327.js";import"./DiscardOrAdjustAlphaBlend.glsl-73258f38.js";import"./Normals.glsl-76f97814.js";import"./DefaultMaterial.glsl-885671b3.js";import"./VertexColor.glsl-8c022fa8.js";import"./DefaultTechniqueConfiguration-588e5ab2.js";import"./RealisticTree.glsl-b6cc03f2.js";import"./edgeProcessing-f733ce76.js";import"./deduplicate-03981d62.js";import"./projection-a69d43d0.js";import"./Octree-0a267ea2.js";import"./HUDMaterial.glsl-32cf019c.js";import"./sdfPrimitives-9858c36d.js";import"./floatRGBA-9ad35d39.js";import"./labelFormatUtils-d25d1d9e.js";import"./LineCallout.glsl-358ef89b.js";import"./earcut-58237617.js";import"./SnappingCandidate-970faec6.js";import"./MeshComponent-a43522cc.js";import"./MarkerSizing.glsl-566261cc.js";import"./RibbonLine.glsl-0f7c2bbc.js";import"./LineStipple.glsl-ed22a88b.js";import"./callExpressionWithFeature-55effb7b.js";import"./quantizationUtils-4dd81f85.js";import"./LineMarker.glsl-8166d610.js";import"./NativeLine.glsl-742e9e29.js";import"./Path.glsl-9f6bab44.js";import"./ColorMaterial.glsl-3a70e4a7.js";import"./Pattern.glsl-67f4595b.js";import"./DefaultVertexAttributeLayouts-2bcf3941.js";import"./config-1337d16e.js";import"./workerHelper-e756ac3a.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./portalItemUtils-2ccd793f.js";import"./I3SBinaryReader-f4829435.js";import"./I3SNode-941d6d9e.js";import"./RenderTexture-a15e38d0.js";import"./FeatureLayerView3D-897c7c3e.js";import"./FeatureLayerViewBase3D-5ca6a636.js";import"./EventedSet-be3adf97.js";import"./FeatureLayerView-e9178bab.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-af06d391.js";import"./LayerView-bd9a2316.js";import"./RefreshableLayerView-7c1c2c75.js";import"./dehydratedFeatureComparison-59868945.js";import"./queryForSymbologySnapping-3bbff2c8.js";import"./elevationInfoUtils-36e5dd0f.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-1e0ab5c6.js";import"./optimizedFeatureQueryEngineAdapter-d72f082e.js";import"./centroid-5c988df3.js";import"./QueryEngine-cdb0ba2c.js";import"./QueryEngineResult-8f90b8dc.js";import"./WhereClause-d4b8b019.js";import"./utils-b34fcd9d.js";import"./generateRendererUtils-7252b5e6.js";import"./projectionSupport-aa5eaa0d.js";import"./json-48e3ea08.js";import"./utils-511aa5f5.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-3de56d7f.js";import"./FeatureStore-3cfbdfa3.js";import"./Heatmap.glsl-388d8513.js";import"./HeatmapDensity.glsl-92a06674.js";import"./heatmapTextureUtils-2627384f.js";import"./projectExtentUtils-7f9e225f.js";class j extends he{constructor(t){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:i=>[i.geometryBuffer]},t,{hasInitialize:!0})}}const q=be();let n=class extends Ce(De(ue(ve))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._nodesAddedToStage=new Map,this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new pe,this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}initialize(){var t,i;const e=this.layer;this.addResolvingPromise(e.indexInfo),this._i3sOverrides=new de({view:this.view,layer:this.layer,memoryController:(t=this.view.resourceController)==null?void 0:t.memoryController}),xe(e,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new _e({layerView:this}),this.updatingHandles.add(()=>e.rangeInfos,r=>this._rangeInfosChanged(r),V),this.updatingHandles.add(()=>e.renderer,(r,o)=>this._rendererChange(r,o)),this.updatingHandles.add(()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted],()=>this._filterChange()),this.handles.add(Y(()=>G.I3S_TREE_SHOW_TILES,r=>{if(r&&!this._treeDebugger){const o=this._controller.crsIndex;z(()=>import("./I3STreeDebugger-e3fd5900.js"),["assets/I3STreeDebugger-e3fd5900.js","assets/cast-fcb46737.js","assets/typedArrayUtil-4d7bb04c.js","assets/string-a318751c.js","assets/Error-ec6249b9.js","assets/ArrayPool-a8ee9378.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-1e54421e.js","assets/geometry-b7901087.js","assets/Extent-da876e26.js","assets/Ellipsoid-89682c5e.js","assets/Polyline-ff2d7c6b.js","assets/typeUtils-35750739.js","assets/jsonMap-7b8332c9.js","assets/mat4-44a0988f.js","assets/vec3f64-2f9cef06.js","assets/common-c186b691.js","assets/mat4f64-1e28eae0.js","assets/vec3-e93e648f.js","assets/projection-290b739f.js","assets/preload-helper-3bce6601.js","assets/mathUtils-b4bb77e2.js","assets/vec4-790471c0.js","assets/unitUtils-45d1147c.js","assets/SimpleObservable-23231131.js","assets/assets-8d3e737a.js","assets/request-6fc81c4c.js","assets/aaBoundingRect-193543b5.js","assets/zscale-89472cba.js","assets/TileTreeDebugger-36d5c9d2.js","assets/Color-fb64d77d.js","assets/colorUtils-639f4d25.js","assets/Graphic-f0e54e86.js","assets/PopupTemplate-40f3c9aa.js","assets/Clonable-545593ce.js","assets/Collection-910b6f71.js","assets/Evented-a45c8b0f.js","assets/fieldUtils-7f54c4b1.js","assets/arcadeOnDemand-281a01eb.js","assets/enumeration-3a03bd31.js","assets/number-27cf8195.js","assets/locale-30120714.js","assets/Identifiable-bfe1ff30.js","assets/symbols-f8232671.js","assets/CIMSymbol-539bd447.js","assets/Symbol-f93ed9fd.js","assets/screenUtils-410d12c0.js","assets/opacityUtils-1f7f5126.js","assets/symbolLayerUtils3D-76acc268.js","assets/aaBoundingBox-657a9b82.js","assets/persistableUrlUtils-5f719c3b.js","assets/Symbol3DAnchorPosition2D-5726d999.js","assets/collectionUtils-803d9ba8.js","assets/Portal-2bb189b3.js","assets/Loadable-268c900a.js","assets/Promise-376ab9f6.js","assets/PortalGroup-8e41557a.js","assets/PortalUser-659cc1d2.js","assets/jsonUtils-229211af.js"]).then(({I3STreeDebugger:s})=>{!this._treeDebugger&&G.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new s({lv:this,view:this.view,nodeSR:o}))})}else r||!this._treeDebugger||G.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},V)),this._set("processor",new ce({owner:this,preferredUpdatePolicy:Ae.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:e.fullExtent,updateClippingExtent:r=>this._updateClippingExtent(r)})),(i=this.processor.elevationAlignment)==null||i.events.on("invalidate-elevation",r=>this._controller.updateElevationChanged(r.extent,r.spatialReference)),this.supportsHeightUnitConversion&&(this._verticalScale=ie("point",e.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(e.uid),this._controller=new me({layerView:this,scaleVisibilityEnabled:!1}),Ee(this.layer.geometryDefinitions)&&(this._worker=new j(r=>this.view.resourceController.schedule(r))),this.handles.add(this.layer.on("apply-edits",r=>this.updatingHandles.addPromise(r.result))),this.handles.add(this.layer.on("edits",r=>this._handleEdits(r))),this.when(()=>{const r=()=>this.processor.featureStore;this._queryEngine=new ge({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return r()},hasZ:this.hasZ,hasM:this.hasM},priority:Oe.FEATURE_QUERY_ENGINE}),this.updatingHandles.add(()=>this.maximumNumberOfFeatures,o=>this._controller.featureTarget=o,V),this.updatingHandles.add(()=>this.suspended,o=>{o&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=b(this._treeDebugger),this._i3sOverrides=b(this._i3sOverrides),this._set("processor",b(this.processor)),this._controller=b(this._controller),this._queryEngine=b(this._queryEngine),this._worker=b(this._worker),this._memCache=b(this._memCache),this._nodesAddedToStage.clear(),this._fieldsHelper=b(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){var e;return((e=this._controller)==null?void 0:e.updatingProgress)??1}get requiredFields(){var e;return((e=this._fieldsHelper)==null?void 0:e.requiredFields)??[]}get maximumNumberOfFeatures(){var t,i;const e=(i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.displayFeatureLimit;return(e==null?void 0:e.maximumNumberOfFeatures)??0}set maximumNumberOfFeatures(e){e!=null?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){var e;return!this.suspended&&!!((e=this._controller)!=null&&e.useMaximumNumberOfFeatures)&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort((t,i)=>t-i):null}get lodFactor(){return this.layer.semantic==="Labels"?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}async whenGraphicAttributes(e,t){return Ie(this.layer,e,this._getObjectIdField(),t,()=>[...this._nodesAddedToStage.values()])}getHit(e){if(!this.loadedGraphics)return null;const t=oe(this.loadedGraphics.find(r=>r.uid===e),this.layer),i=this._getObjectIdField();return t&&t.attributes&&t.attributes[i]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){var e,t,i;return!!((e=this._controller)!=null&&e.updating||(t=this.processor)!=null&&t.updating||(i=this._fieldsHelper)!=null&&i.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return ye(this._attributeEditingContext,e)}async _extractBinaryPointData(e,t){const i={geometryBuffer:e.geometryBuffer};return L(this._worker)&&(this._worker=new j(r=>this.view.resourceController.schedule(r))),this._worker.invoke(i,t).then(r=>{if(m(r))return{positionData:r.positions,featureIds:r.featureIds};throw new Error("Failed to decompress Draco point data")})}_checkExtent(e,t){e&&!re(e,t)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&N.getLogger(this.declaredClass).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&N.getLogger(this.declaredClass).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++)}async addNode(e,t,i){if(!Q(t)&&!U(t))throw new Error;if(this._nodesAddedToStage.has(e.index))return void N.getLogger(this.declaredClass).error("I3S node "+e.id+" already added");const r=m(this.layer.fullExtent)?Fe(this.layer.fullExtent.clone(),.5):null,o=this._controller.crsVertex,s=[],a={graphics:null,featureIds:null,attributeInfo:t.attributeDataInfo,node:e};if(Q(t)?await this._addNodeBinaryPointData(e,a,t,r,s,i):U(t)&&this._addNodeLegacyPointData(e,a,t,r,s),await this._i3sOverrides.apply(a.featureIds,t.attributeDataInfo,i),e.numFeatures=a.graphics.length,this._updateNodeMemory(e),k(a),s.length>0&&(this._computeObb(e,s,o),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(a);if(m(this._verticalScale))for(const l of a.graphics)this._verticalScale(l.geometry);const h=this.view._stage.renderView._objectAndLayerIdRenderHelper;if(h)for(let l=0;l<a.featureIds.length;l++){const x=a.featureIds[l];h.setUidToObjectAndLayerId(x,a.graphics[l].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled,a.node.resources.attributes,l)}this._nodesAddedToStage.set(e.index,a),this.loadedGraphics.addMany(a.graphics),this._controller.updateLoadStatus(e.index,!0),this._filterNode(a),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,i){const r=this._controller.crsIndex,o=r.isGeographic?this.view.renderSpatialReference:r;$(t,i,0,t,o,0,t.length/3);const s={data:t,size:3};e.serviceObb=we(s),r.isGeographic&&te(e.serviceObb.center,o,e.serviceObb.center,r)}isNodeLoaded(e){return this._nodesAddedToStage.has(e)}isNodeReloading(){return!1}updateNodeState(){}async _addNodeBinaryPointData(e,t,i,r,o,s){const a=await this._extractBinaryPointData(i,s);if(a==null)throw new Error;const h=this._getObjectIdField(),l=this._controller.crsVertex,x=this.view.spatialReference,C=this.processor.graphicsCore,{positionData:g,featureIds:w}=a,E=3,D=g.length/E,_=new Array,A=m(e.serviceObb)?e.serviceObb.center:[0,0,0],T=Math.abs(A[2])*2**-20;for(let y=0;y<D;y++){const I=y*E,u=X(g[I+0],g[I+1],g[I+2]);J(u,u,A),Math.abs(u[2])<T&&(u[2]=0),e.serviceObb||o.push(u[0],u[1],u[2]),m(r)&&this._checkExtent(r,u);const O=w[y],F={};O!=null&&(F[h]=O);const f=O??M.generateUID();$(u,l,0,v,x,0,1);const R=H(v[0],v[1],v[2],x),S=this.loadedGraphics.get(f);if(m(S))S.level<e.level&&(c.property="geometry",c.graphic=S,c.oldValue=Z(S.geometry),c.newValue=R,S.geometry=R,C.graphicUpdateHandler(c)),_.push(S);else{const B=M.generateUID();_.push({objectId:f,uid:B,geometry:R,attributes:F,visible:!0,level:e.level})}}t.graphics=_,t.featureIds=Array.from(w)}_addNodeLegacyPointData(e,t,i,r,o){const s=this._getObjectIdField(),a=this._controller.crsVertex,h=this.view.spatialReference,l=[0,0,0],x=new Array,C=new Array;for(const g of i.pointData){const w=g.featureDataPosition,E=w.length,D=g.geometries&&g.geometries[0]||Ne[E],_=g.featureIds[0];if(D.params.type!=="points")continue;m(r)&&this._checkExtent(r,w);const A={};_!=null&&(A[s]=_);const T=_??M.generateUID();let y;D.type==="Embedded"&&(y=D.params.vertexAttributes.position);for(let I=0;I<y.length;I+=E){for(let f=0;f<E;f++)l[f]=w[f]+y[I+f];const u=E===3;e.serviceObb||o.push(l[0],l[1],u?l[2]:0),$(l,a,0,v,h,0,1);const O=H(v[0],v[1],u?v[2]:void 0,h),F=this.loadedGraphics.get(T);m(F)?C.push(F):C.push({objectId:T,uid:M.generateUID(),geometry:O,attributes:A,visible:!0})}x.push(_)}t.graphics=C,t.featureIds=x}_updateNodeMemory(e){e.memory=4096+(m(e.numFeatures)?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce((i,r)=>ne(r)+i,512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this._nodesAddedToStage.forEach((e,t)=>{if(e){const i=e.node;this._updateNodeMemory(i),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)}),this._nodesAddedToStage.clear(),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this._nodesAddedToStage.get(e);return t?(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeMany(t.graphics),this._nodesAddedToStage.delete(e),this._treeDebugger&&this._treeDebugger.update(),t):null}async loadCachedNodeData(e){return this._memCache.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,i,r){this._nodesAddedToStage.has(e.index)?N.getLogger(this.declaredClass).error("I3S node "+e.id+" already added"):(this.loadedGraphics.addMany(t.graphics),this._nodesAddedToStage.set(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),await this.updateAttributes(e.index,i,r),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this._nodesAddedToStage.forEach(t=>e.push(t.node.id)),e.sort()}getVisibleNodes(){const e=new Array;return this._nodesAddedToStage.forEach(t=>e.push(t.node)),e}getLoadedNodeIndices(e){this._nodesAddedToStage.forEach((t,i)=>e.push(i))}getLoadedAttributes(e){const t=this._nodesAddedToStage.get(e);if(t&&m(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodesAddedToStage.get(e);if(t&&m(t.attributeInfo))return t.attributeInfo.attributeData}_setAttributeData(e,t){const i=this._nodesAddedToStage.get(e);i&&!L(i.attributeInfo)&&(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const r=this._nodesAddedToStage.get(e);r&&(await this._i3sOverrides.apply(r.featureIds,t,i),r.attributeInfo=t,this._attributeValuesChanged(r))}_attributeValuesChanged(e){if(k(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.graphics.map(i=>i.uid);this.processor.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||se}async _rendererChange(e,t){const{layer:{fieldsIndex:i}}=this,r=new Set;let o,s;e?(await e.collectRequiredFields(r,i),o=Array.from(r).sort()):o=[],r.clear(),t?(await t.collectRequiredFields(r,i),s=Array.from(r).sort()):s=[],o.length===s.length&&o.every((a,h)=>o[h]===s[h])||this._reloadAllNodes()}_rangeInfosChanged(e){e!=null&&e.length>0&&N.getLogger(this.declaredClass).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this._nodesAddedToStage.forEach(e=>this._filterNode(e))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,i=this._excludeObjectIdsSorted,r=this._getObjectIdField();for(const o of e.graphics){const s=o.visible,a=!t||this._evaluateClause(t,o),h=L(i)||K(i,o.attributes[r])<0;o.visible=a&&h,s!==o.visible&&(c.graphic=o,c.property="visible",c.oldValue=s,c.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(c))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return m(this.filter)?this.filter.createQuery(e):new P(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t==null?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(L(e)?this.createQuery():P.from(e))}getUsedMemory(){var e,t;return((t=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:t.usedMemory)??0}getUnloadedMemory(){var e,t,i;return .8*((((e=this._controller)==null?void 0:e.unloadedMemoryEstimate)??0)+(((i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.unprocessedMemoryEstimate)??0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){fe(this._attributeEditingContext,e)}get _attributeEditingContext(){const e=this._getObjectIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:t=>this._nodesAddedToStage.forEach(i=>t(i.node,i.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo,i3sOverrides:this._i3sOverrides,getAttributeData:t=>this.getAttributeData(t),setAttributeData:(t,i,r)=>{this._setAttributeData(t,i);const o=this._nodesAddedToStage.get(t);if(m(r)){const s=this.loadedGraphics.get(r.attributes[e]);m(s)&&this.processor.graphicsCore.recreateGraphics([s])}else m(o)&&this.processor.graphicsCore.recreateGraphics(o.graphics)},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this._nodesAddedToStage.size,core:this.processor.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return{controller:this._controller,numNodes:this._nodesAddedToStage.size,loadedGraphics:this.loadedGraphics}}};p([d()],n.prototype,"processor",void 0),p([d({type:le})],n.prototype,"filter",void 0),p([d()],n.prototype,"loadedGraphics",void 0),p([d()],n.prototype,"i3slayer",null),p([d()],n.prototype,"_controller",void 0),p([d()],n.prototype,"updating",void 0),p([d()],n.prototype,"suspended",void 0),p([d()],n.prototype,"holeFilling",void 0),p([d(ae)],n.prototype,"updatingProgress",void 0),p([d()],n.prototype,"updatingProgressValue",null),p([d(q.requiredFields)],n.prototype,"requiredFields",null),p([d(q.availableFields)],n.prototype,"availableFields",void 0),p([d()],n.prototype,"_fieldsHelper",void 0),p([d({type:Number})],n.prototype,"maximumNumberOfFeatures",null),p([d({readOnly:!0})],n.prototype,"maximumNumberOfFeaturesExceeded",null),p([d()],n.prototype,"_excludeObjectIdsSorted",null),p([d({readOnly:!0})],n.prototype,"lodFactor",null),p([d({readOnly:!0})],n.prototype,"hasM",null),p([d({readOnly:!0})],n.prototype,"hasZ",null),n=p([W("esri.views.3d.layers.SceneLayerGraphicsView3D")],n);const da=n;function U(e){return"pointData"in e}function Q(e){return"geometryBuffer"in e&&e.geometryBuffer!==null}function k(e){const t=e.attributeInfo;for(let i=0;i<e.graphics.length;i++){const r=e.graphics[i];if(r.attributes||(r.attributes={}),m(t)&&m(t.loadedAttributes))for(const{name:o}of t.loadedAttributes)t.attributeData[o]&&(r.attributes[o]=Se(t.attributeData[o],i))}}function Fe(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.hasZ&&(e.zmin-=t,e.zmax+=t),e.hasM&&(e.mmin-=t,e.mmax+=t),e}const Ne={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},v=ee(),c={graphic:null,property:null,oldValue:null,newValue:null};export{da as default};
