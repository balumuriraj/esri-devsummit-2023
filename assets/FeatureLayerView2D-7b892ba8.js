import{e as l,y as h,n as q,m as K}from"./cast-fcb46737.js";import{g as N}from"./Graphic-f0e54e86.js";import{e as O,r as d,o as k,t as Y}from"./typedArrayUtil-4d7bb04c.js";import"./ArrayPool-a8ee9378.js";import"./geometry-b7901087.js";import{j as Z}from"./Collection-910b6f71.js";import{a as V,s as x}from"./Error-ec6249b9.js";import{h as R,y as ee}from"./string-a318751c.js";import{D as te,g as b,b as ie,x as re,j as E}from"./promiseUtils-1e54421e.js";import{l as A,w as se,h as oe,j as ae}from"./reactiveUtils-4dabbb80.js";import{a as z}from"./utils-317368cb.js";import{f as ne,b as le,m as ue,g as pe,d as he,y as ce}from"./FeatureReductionLayer-d69dae71.js";import{o as de,k as me,a as ye}from"./Extent-da876e26.js";import P from"./FeatureSet-d32b0eb8.js";import{x as Q}from"./Query-b96bcde0.js";import{a8 as ge}from"./enums-2658a65c.js";import{y as fe}from"./LayerView2D-4c855e4b.js";import{F as _e}from"./schemaUtils-9c08f5e8.js";import{_ as j}from"./preload-helper-3bce6601.js";import{h as ve}from"./rendererUtils-0bcb63a1.js";import{l as we,a as be}from"./TileStore-00ac650f.js";import{_ as Re}from"./Promise-376ab9f6.js";import{u as Se}from"./workers-6e30d081.js";import{e as qe}from"./util-4239daf3.js";import{e as M}from"./TileKey-5aef17b6.js";import{A as xe}from"./FeatureLayerView-e9178bab.js";import{u as Ee}from"./LayerView-bd9a2316.js";import{i as Ce}from"./RefreshableLayerView-7c1c2c75.js";import{l as Oe}from"./capabilities-302cf20d.js";import"./nextTick-3ee5a785.js";import"./PopupTemplate-40f3c9aa.js";import"./Clonable-545593ce.js";import"./fieldUtils-7f54c4b1.js";import"./arcadeOnDemand-281a01eb.js";import"./jsonMap-7b8332c9.js";import"./enumeration-3a03bd31.js";import"./number-27cf8195.js";import"./locale-30120714.js";import"./Identifiable-bfe1ff30.js";import"./symbols-f8232671.js";import"./CIMSymbol-539bd447.js";import"./Symbol-f93ed9fd.js";import"./Color-fb64d77d.js";import"./colorUtils-639f4d25.js";import"./mathUtils-b4bb77e2.js";import"./vec3-e93e648f.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-1f7f5126.js";import"./symbolLayerUtils3D-76acc268.js";import"./aaBoundingBox-657a9b82.js";import"./aaBoundingRect-193543b5.js";import"./request-6fc81c4c.js";import"./persistableUrlUtils-5f719c3b.js";import"./Symbol3DAnchorPosition2D-5726d999.js";import"./collectionUtils-803d9ba8.js";import"./Portal-2bb189b3.js";import"./Loadable-268c900a.js";import"./PortalGroup-8e41557a.js";import"./PortalUser-659cc1d2.js";import"./Ellipsoid-89682c5e.js";import"./jsonUtils-229211af.js";import"./Polyline-ff2d7c6b.js";import"./typeUtils-35750739.js";import"./Evented-a45c8b0f.js";import"./SimpleObservable-23231131.js";import"./mat3f32-d3d088e8.js";import"./parser-498c8be0.js";import"./mat4f32-77b3d8ac.js";import"./mat4-44a0988f.js";import"./DefaultVertexAttributeLayouts-2bcf3941.js";import"./mat3-3fc68e72.js";import"./vec2f64-30dc1443.js";import"./context-util-a4ce3a7b.js";import"./enums-64ab819c.js";import"./Texture-243be4d7.js";import"./VertexElementDescriptor-2925c6af.js";import"./enums-4ca4641f.js";import"./MaterialKey-0093a242.js";import"./alignmentUtils-ae955d28.js";import"./Utils-69cc114d.js";import"./number-954e4ab6.js";import"./heatmapUtils-aaea3f32.js";import"./vec4f64-e407da96.js";import"./BlendLayer-20d0571b.js";import"./TimeExtent-23e282b9.js";import"./UniqueValueRenderer-08f8851c.js";import"./LegendOptions-010d0873.js";import"./diffUtils-68b89c71.js";import"./colorRamps-9dac42c1.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-18d58939.js";import"./lengthUtils-fa751420.js";import"./unitUtils-45d1147c.js";import"./jsonUtils-0ff4ff96.js";import"./styleUtils-22b14a8b.js";import"./jsonUtils-f5674613.js";import"./DictionaryLoader-1cbfea53.js";import"./LRUCache-64ec42ee.js";import"./MemCache-18a255ed.js";import"./deprecate-035b199e.js";import"./OperationalLayer-97084f13.js";import"./ElevationInfo-215614d8.js";import"./labelingInfo-607e66b8.js";import"./labelUtils-3108e8d7.js";import"./defaultsJSON-59981e75.js";import"./Field-61ec9870.js";import"./fieldType-f31285f7.js";import"./index-38ff5066.js";import"./Cyclical-151bcc41.js";import"./CollectionFlattener-8f4d518b.js";import"./projection-290b739f.js";import"./assets-8d3e737a.js";import"./zscale-89472cba.js";import"./TileInfo-b0eb8c90.js";import"./widget-fb292a2f.js";import"./intl-65a3e389.js";import"./messages-2289086c.js";import"./uuid-73213768.js";import"./HandleOwner-9b396af1.js";import"./byteSizeEstimations-f0cab514.js";import"./executeQueryJSON-2fe748db.js";import"./normalizeUtils-27e29a72.js";import"./query-694f7287.js";import"./pbfQueryUtils-4adda2cc.js";import"./pbf-0e99a620.js";import"./OptimizedFeature-4ab8d380.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-1481fa99.js";import"./RelationshipQuery-0dda77ad.js";import"./utils-6786b611.js";import"./asyncUtils-437defc4.js";import"./ItemCache-fd3aceaf.js";import"./featureConversionUtils-03a03f40.js";import"./TopFeaturesQuery-cad97c37.js";import"./FeatureLayer-041050b6.js";import"./MultiOriginJSONSupport-aae3bc0c.js";import"./LayerFloorInfo-54b916a2.js";import"./FeatureLayerBase-ad5cfa1a.js";import"./HeightModelInfo-5d01231e.js";import"./arcgisLayerUrl-c09f09b4.js";import"./Layer-5ffe0eda.js";import"./editsZScale-6a661299.js";import"./APIKeyMixin-a0a8917a.js";import"./ArcGISService-21dc1d06.js";import"./CustomParametersMixin-47aab0a6.js";import"./EditBusLayer-e750b15b.js";import"./OrderedLayer-af7a6030.js";import"./PortalLayer-b2643f87.js";import"./PortalItem-bb7e98a6.js";import"./RefreshableLayer-7f154951.js";import"./ScaleRangeLayer-4be07229.js";import"./TemporalLayer-61549309.js";import"./TimeInfo-1d30dc7c.js";import"./FeatureTemplate-c1d0bb70.js";import"./FeatureType-34d71ade.js";import"./fieldProperties-e2eeb1d5.js";import"./FieldsIndex-f104cc5f.js";import"./versionUtils-fd91f55f.js";import"./styleUtils-a989c0af.js";import"./popupUtils-86dc6b94.js";import"./Connection-9a1cf8da.js";import"./Queue-b7d3cd48.js";import"./mat2d-2bbb5feb.js";import"./Scheduler-540208b6.js";import"./Basemap-af7f62f8.js";import"./loadAll-b5bfa7ab.js";import"./writeUtils-e686bd33.js";import"./layerUtils-f4d08f94.js";import"./TablesMixin-bc97d131.js";import"./GraphicsCollection-c37a9ffd.js";import"./ViewingMode-5d7d590b.js";import"./enums-0fc02184.js";import"./vec2-528adfe4.js";import"./vec2f32-461e65a9.js";import"./TileStrategy-a90cd1af.js";import"./BoundsStore-b9fa27cc.js";import"./PooledRBush-3e149119.js";import"./quickselect-322ec8e1.js";import"./mat3f64-c6305894.js";import"./sphere-2af0d852.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./lineSegment-10422ca0.js";import"./plane-b575face.js";import"./scaleUtils-93ad8d0c.js";import"./ElevationSamplerData-b87e0e50.js";import"./PhysicallyBasedRendering.glsl-d457fff5.js";import"./View.glsl-3ce196d4.js";import"./ShaderBuilder-a7d0da4e.js";import"./FloatPassUniform-68d54f51.js";import"./Float4PassUniform-d7bdbc81.js";import"./RgbaFloatEncoding.glsl-52af7fcf.js";import"./Texture2DPassUniform-753de459.js";import"./vec3f32-c9aa289f.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-053796dc.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-db6418ee.js";import"./ReadLinearDepth.glsl-9c87a54a.js";import"./WaterSurface.glsl-c64cb8f1.js";import"./ForwardLinearDepth.glsl-56affafd.js";import"./Matrix3PassUniform-ad9f953b.js";import"./Slice.glsl-3b39b1f7.js";import"./Transform.glsl-6d2e2fd9.js";import"./OutputHighlight.glsl-fbac199a.js";import"./MultipassTerrainTest.glsl-bb236672.js";import"./NormalUtils.glsl-c12729bf.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-a11868d2.js";import"./EvaluateSceneLighting.glsl-189abc15.js";import"./VisualVariablePassParameters-d460182b.js";import"./FramebufferObject-a3b9c52c.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-8bf33b65.js";import"./ScreenSpacePass-d5e48a9b.js";import"./SSAO.glsl-980b3771.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-d3a072ad.js";import"./VerticalOffset.glsl-87cbb2e3.js";import"./objectResourceUtils-d556a033.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-903d1848.js";import"./vec33-e98769e8.js";import"./DefaultMaterial_COLOR_GAMMA-fe26fda8.js";import"./types-e1c0a5bf.js";import"./Version-2946cc03.js";import"./quat-3d5eec2d.js";import"./Texture-46c8c2cb.js";import"./TextureOnly.glsl-1ec9a9ef.js";import"./InterleavedLayout-984d67b2.js";import"./MixExternalColor.glsl-ab0706f7.js";import"./symbolColorUtils-b2b55883.js";import"./ObjectAndLayerIdColor.glsl-ad468647.js";import"./OutputDepth.glsl-470c8e2a.js";import"./VisualVariables.glsl-2b937327.js";import"./DiscardOrAdjustAlphaBlend.glsl-73258f38.js";import"./Normals.glsl-76f97814.js";import"./DefaultMaterial.glsl-885671b3.js";import"./VertexColor.glsl-8c022fa8.js";import"./DefaultTechniqueConfiguration-588e5ab2.js";import"./RealisticTree.glsl-b6cc03f2.js";import"./edgeProcessing-f733ce76.js";import"./deduplicate-03981d62.js";import"./projection-a69d43d0.js";import"./Octree-0a267ea2.js";import"./HUDMaterial.glsl-32cf019c.js";import"./sdfPrimitives-9858c36d.js";import"./floatRGBA-9ad35d39.js";import"./dehydratedFeatures-0557137d.js";import"./quantizationUtils-4dd81f85.js";import"./labelFormatUtils-d25d1d9e.js";import"./I3SUtil-f31a4571.js";import"./I3SBinaryReader-f4829435.js";import"./LineCallout.glsl-358ef89b.js";import"./earcut-58237617.js";import"./SnappingCandidate-970faec6.js";import"./MeshComponent-a43522cc.js";import"./MarkerSizing.glsl-566261cc.js";import"./RibbonLine.glsl-0f7c2bbc.js";import"./LineStipple.glsl-ed22a88b.js";import"./callExpressionWithFeature-55effb7b.js";import"./LineMarker.glsl-8166d610.js";import"./NativeLine.glsl-742e9e29.js";import"./Path.glsl-9f6bab44.js";import"./ColorMaterial.glsl-3a70e4a7.js";import"./Pattern.glsl-67f4595b.js";import"./LercDecoder-4c9b29b3.js";import"./config-1337d16e.js";import"./workerHelper-e756ac3a.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./portalItemUtils-2ccd793f.js";import"./rbush-8e36784a.js";import"./visualVariablesUtils-ecd70012.js";import"./createSymbolSchema-36503ad8.js";import"./cimAnalyzer-38842966.js";import"./BidiEngine-836b7ef6.js";import"./Rect-ea14f53a.js";import"./GeometryUtils-eebff0a0.js";import"./ExpandedCIM-b7ed8ce5.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-af06d391.js";let F=class extends N{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.sourceLayer&&this.sourceLayer.featureReduction;return t&&"popupTemplate"in t&&t.popupEnabled?t.popupTemplate:null}getObjectId(){return this.attributes.aggregateId}};l([h({type:Boolean})],F.prototype,"isAggregate",void 0),F=l([q("esri.AggregateGraphic")],F);const J=F;let y=class extends K{constructor(e){super(e),this._filter=null,this.duration=R("mapview-transitions-duration"),this._excludedEffectView=new z(e),this._includedEffectView=new z(e)}get excludedEffects(){return this._excludedEffectView.effects}set featureEffect(e){this._get("featureEffect")!==e&&this._transitionTo(e)}get filter(){var e;return this._filter||((e=O(this.featureEffect))==null?void 0:e.filter)||null}get hasEffects(){return this._excludedEffectView.hasEffects||this._includedEffectView.hasEffects}get includedEffects(){return this._includedEffectView.effects}set scale(e){this._set("scale",e),this._excludedEffectView.scale=e,this._includedEffectView.scale=e}get transitioning(){return this._excludedEffectView.transitioning||this._includedEffectView.transitioning}transitionStep(e,t){this._set("scale",t),this.transitioning?(this._includedEffectView.transitionStep(e,t),this._excludedEffectView.transitionStep(e,t),this.transitioning||(this._filter=null)):(this._excludedEffectView.scale=t,this._includedEffectView.scale=t)}endTransitions(){this._includedEffectView.endTransitions(),this._excludedEffectView.endTransitions(),this._filter=null}_transitionTo(e){const t=this._get("featureEffect"),i=O(e),r=O(i==null?void 0:i.includedEffect),s=O(i==null?void 0:i.excludedEffect),a=this._includedEffectView.canTransitionTo(r)&&this._excludedEffectView.canTransitionTo(s);this._includedEffectView.effect=r,this._excludedEffectView.effect=s,this._set("featureEffect",i),this._filter=(i==null?void 0:i.filter)||(t==null?void 0:t.filter)||null,a||this.endTransitions()}};l([h()],y.prototype,"_filter",void 0),l([h()],y.prototype,"_excludedEffectView",void 0),l([h()],y.prototype,"_includedEffectView",void 0),l([h()],y.prototype,"duration",void 0),l([h()],y.prototype,"excludedEffects",null),l([h()],y.prototype,"featureEffect",null),l([h()],y.prototype,"filter",null),l([h()],y.prototype,"hasEffects",null),l([h()],y.prototype,"includedEffects",null),l([h({value:0})],y.prototype,"scale",null),l([h()],y.prototype,"transitioning",null),y=l([q("esri.layers.effects.FeatureEffectView")],y);const Ie=y;let I=class extends P{constructor(){super(...arguments),this.features=[]}readFeatures(e,t){var s;const i=me.fromJSON(t.spatialReference),r=[];for(let a=0;a<e.length;a++){const o=e[a],u=J.fromJSON(o),n=o.geometry&&o.geometry.spatialReference;d(u.geometry)&&!n&&(u.geometry.spatialReference=i);const c=o.aggregateGeometries,p=u.aggregateGeometries;if(c&&d(p))for(const f in p){const _=p[f],g=(s=c[f])==null?void 0:s.spatialReference;d(_)&&!g&&(_.spatialReference=i)}r.push(u)}return r}};l([h({type:[J],json:{write:!0}})],I.prototype,"features",void 0),l([de("features")],I.prototype,"readFeatures",null),I=l([q("esri.rest.support.AggregateFeatureSet")],I);const Te=I;async function Fe(e,t){if(!e)return null;switch(e.type){case"symbol":return new(await j(()=>import("./SymbolTileRenderer-7505cc53.js"),["assets/SymbolTileRenderer-7505cc53.js","assets/cast-fcb46737.js","assets/typedArrayUtil-4d7bb04c.js","assets/string-a318751c.js","assets/Error-ec6249b9.js","assets/ArrayPool-a8ee9378.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-1e54421e.js","assets/aaBoundingRect-193543b5.js","assets/mathUtils-b4bb77e2.js","assets/vec3-e93e648f.js","assets/vec3f64-2f9cef06.js","assets/common-c186b691.js","assets/vec4-790471c0.js","assets/Extent-da876e26.js","assets/Ellipsoid-89682c5e.js","assets/CircularArray-f4b6cd92.js","assets/mat2d-2bbb5feb.js","assets/enums-4ca4641f.js","assets/Utils-69cc114d.js","assets/number-954e4ab6.js","assets/enums-2658a65c.js","assets/enums-64ab819c.js","assets/Texture-243be4d7.js","assets/context-util-a4ce3a7b.js","assets/VertexElementDescriptor-2925c6af.js","assets/FeatureContainer-934cc4cc.js","assets/mat3-3fc68e72.js","assets/mat3f32-d3d088e8.js","assets/DefaultVertexAttributeLayouts-2bcf3941.js","assets/Evented-a45c8b0f.js","assets/TileKey-5aef17b6.js","assets/vec2f64-30dc1443.js","assets/Queue-b7d3cd48.js","assets/visualVariablesUtils-0d4b5279.js","assets/screenUtils-410d12c0.js","assets/visualVariablesUtils-ecd70012.js","assets/FramebufferObject-a3b9c52c.js","assets/TileContainer-21007653.js","assets/WGLContainer-8a3733a0.js","assets/WGLBrushVTLSymbol-d778c554.js","assets/StyleDefinition-ff072275.js","assets/vec2f32-461e65a9.js","assets/config-1337d16e.js","assets/GeometryUtils-c093d234.js","assets/pixelUtils-d9cd2e49.js","assets/ShaderCompiler-77d0dcb6.js","assets/ProgramTemplate-cc7f8b69.js","assets/MaterialKey-0093a242.js","assets/alignmentUtils-ae955d28.js","assets/utils-317368cb.js","assets/parser-498c8be0.js","assets/colorUtils-639f4d25.js","assets/mat4f32-77b3d8ac.js","assets/mat4-44a0988f.js","assets/heatmapUtils-aaea3f32.js","assets/vec4f64-e407da96.js","assets/Color-fb64d77d.js","assets/heatmapTextureUtils-2627384f.js","assets/reactiveUtils-4dabbb80.js","assets/earcut-58237617.js","assets/vec2-528adfe4.js","assets/featureConversionUtils-03a03f40.js","assets/jsonUtils-229211af.js","assets/Polyline-ff2d7c6b.js","assets/OptimizedFeature-4ab8d380.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/unitUtils-45d1147c.js","assets/jsonMap-7b8332c9.js","assets/lengthUtils-fa751420.js","assets/capabilities-302cf20d.js","assets/BufferPool-b74ae6cb.js","assets/rendererUtils-0bcb63a1.js","assets/BaseTileRenderer-1f7bc6ca.js","assets/HandleOwner-9b396af1.js"])).default(t);case"heatmap":return new(await j(()=>import("./HeatmapTileRenderer-deb60e43.js"),["assets/HeatmapTileRenderer-deb60e43.js","assets/cast-fcb46737.js","assets/typedArrayUtil-4d7bb04c.js","assets/string-a318751c.js","assets/Error-ec6249b9.js","assets/ArrayPool-a8ee9378.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-1e54421e.js","assets/heatmapUtils-aaea3f32.js","assets/mathUtils-b4bb77e2.js","assets/vec3-e93e648f.js","assets/vec3f64-2f9cef06.js","assets/common-c186b691.js","assets/vec4-790471c0.js","assets/screenUtils-410d12c0.js","assets/vec4f64-e407da96.js","assets/BitmapTileContainer-d91c0937.js","assets/aaBoundingRect-193543b5.js","assets/Extent-da876e26.js","assets/Ellipsoid-89682c5e.js","assets/mat3f32-d3d088e8.js","assets/Bitmap-479ee434.js","assets/mat3-3fc68e72.js","assets/vec2f32-461e65a9.js","assets/DefaultVertexAttributeLayouts-2bcf3941.js","assets/Evented-a45c8b0f.js","assets/TileKey-5aef17b6.js","assets/vec2f64-30dc1443.js","assets/context-util-a4ce3a7b.js","assets/enums-64ab819c.js","assets/Texture-243be4d7.js","assets/VertexElementDescriptor-2925c6af.js","assets/WGLContainer-8a3733a0.js","assets/WGLBrushVTLSymbol-d778c554.js","assets/enums-2658a65c.js","assets/enums-4ca4641f.js","assets/number-954e4ab6.js","assets/FramebufferObject-a3b9c52c.js","assets/StyleDefinition-ff072275.js","assets/config-1337d16e.js","assets/GeometryUtils-c093d234.js","assets/pixelUtils-d9cd2e49.js","assets/Utils-69cc114d.js","assets/ShaderCompiler-77d0dcb6.js","assets/ProgramTemplate-cc7f8b69.js","assets/MaterialKey-0093a242.js","assets/alignmentUtils-ae955d28.js","assets/utils-317368cb.js","assets/parser-498c8be0.js","assets/colorUtils-639f4d25.js","assets/mat4f32-77b3d8ac.js","assets/mat4-44a0988f.js","assets/Color-fb64d77d.js","assets/heatmapTextureUtils-2627384f.js","assets/reactiveUtils-4dabbb80.js","assets/earcut-58237617.js","assets/vec2-528adfe4.js","assets/featureConversionUtils-03a03f40.js","assets/jsonUtils-229211af.js","assets/Polyline-ff2d7c6b.js","assets/OptimizedFeature-4ab8d380.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/TileContainer-21007653.js","assets/BaseTileRenderer-1f7bc6ca.js","assets/HandleOwner-9b396af1.js"])).default(t)}}function $(e){return e.some(t=>t.globalId)}function C(e){return e.filter(t=>!t.error).map(t=>t.objectId??t.globalId)}function B(e,t){const i=new Set(e);for(const r of t.values())i.add(r);return i}function D(e,t){const i=new Set(e);for(const r of t.values())i.delete(r);return i}let U=class extends K{constructor(t){super(t),this._hasGlobalIds=!1}normalizeCtorArgs(t){return this._queueProcessor=new we({concurrency:1,process:t.process}),{}}destroy(){this.clear()}get updating(){return this._queueProcessor.length>0}clear(){this._queueProcessor.clear()}push(t){const i=this._queueProcessor,r=i.last();switch(t.type){case"update":case"refresh":if((r==null?void 0:r.type)===t.type)return;i.push(t).finally(()=>this.notifyChange("updating"));break;case"edit":{const s=(r==null?void 0:r.type)==="processed-edit"?r:null;s&&i.popLast();const a=this._mergeEdits(s,t);for(const o of a)i.push(o).finally(()=>this.notifyChange("updating"));break}}this.notifyChange("updating")}_mergeEdits(t,i){const{addedFeatures:r,deletedFeatures:s,updatedFeatures:a}=i.edits;if(this._hasGlobalIds=this._hasGlobalIds||$(r)||$(a)||$(s),this._hasGlobalIds)return[t,{type:"processed-edit",edits:{addOrModified:[...r,...a],removed:s}}];const o=new Set(C((t==null?void 0:t.edits.addOrModified)??[])),u=new Set(C((t==null?void 0:t.edits.removed)??[])),n=new Set([...C(r),...C(a)]),c=new Set(C(s));return[{type:"processed-edit",edits:{addOrModified:Array.from(B(D(o,c),n)).map(p=>({objectId:p})),removed:Array.from(B(D(u,n),c)).map(p=>({objectId:p}))}}]}};l([h({readOnly:!0})],U.prototype,"updating",null),U=l([q("esri.views.2d.layers.support.FeatureCommandQueue")],U);const Ue=U;function ke(e){return Array.isArray(e)}let S=class extends Re{constructor(e){super(e),this._startupResolver=te(),this.isReady=!1}initialize(){this._controller=new AbortController,this.addResolvingPromise(this._startWorker(this._controller.signal))}destroy(){this._controller.abort(),this._connection&&this._connection.close()}set tileRenderer(e){this.client.tileRenderer=e}get closed(){return this._connection.closed}async startup(e,t,i,r){await this.when();const s=this._controller.signal,a=ke(i.source)?{transferList:i.source,signal:s}:void 0,o={service:i,config:t,tileInfo:e.tileInfo.toJSON(),tiles:r};await this._connection.invoke("startup",o,a),this._startupResolver.resolve(),this._set("isReady",!0)}async updateTiles(e){return await this._startupResolver.promise,b(this._connection.invoke("updateTiles",e))}async update(e){const t={config:e};return await this._startupResolver.promise,this._connection.invoke("update",t)}async applyUpdate(e){return await this._startupResolver.promise,this._connection.invoke("applyUpdate",e)}async setHighlight(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.setHighlight",e))}async stop(){if(await this._startupResolver.promise,!this.closed)return b(this._connection.invoke("stop"))}async refresh(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.refresh",e))}async querySummaryStatistics(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.querySummaryStatistics",{query:e.toJSON(),params:t},i)}async queryAggregateSummaryStatistics(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateSummaryStatistics",{query:e.toJSON(),params:t},i)}async queryUniqueValues(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryUniqueValues",{query:e.toJSON(),params:t},i)}async queryAggregateUniqueValues(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateUniqueValues",{query:e.toJSON(),params:t},i)}async queryClassBreaks(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryClassBreaks",{query:e.toJSON(),params:t},i)}async queryAggregateClassBreaks(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateClassBreaks",{query:e.toJSON(),params:t},i)}async queryHistogram(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryHistogram",{query:e.toJSON(),params:t},i)}async queryAggregateHistogram(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateHistogram",{query:e.toJSON(),params:t},i)}async queryFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatures",e.toJSON(),t)}async queryVisibleFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryVisibleFeatures",e.toJSON(),t)}async queryObjectIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryObjectIds",e.toJSON(),t)}async queryFeatureCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatureCount",e.toJSON(),t)}async queryExtent(e,t){return this._connection.invoke("controller.queryExtent",e.toJSON(),t)}async queryLatestObservations(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryLatestObservations",e.toJSON(),t)}async queryStatistics(e){return await this._startupResolver.promise,this._connection.invoke("controller.queryStatistics",e)}async queryAggregates(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregates",e.toJSON(),t)}async queryAggregateCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateCount",e.toJSON(),t)}async queryAggregateIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateIds",e.toJSON(),t)}async getObjectId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getObjectId",e)}async getDisplayId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getDisplayId",e)}async getFeatures(e){return await this._startupResolver.promise,this._connection.invoke("controller.getFeatures",e)}async getAggregates(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregates")}async getAggregateValueRanges(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregateValueRanges")}async mapValidDisplayIds(e){return await this._startupResolver.promise,this._connection.invoke("controller.mapValidDisplayIds",e)}async onEdits(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.onEdits",e))}async enableEvent(e,t){return await this._startupResolver.promise,b(this._connection.invoke("controller.enableEvent",{name:e,value:t}))}pauseStream(){return b(this._connection.invoke("controller.pauseStream"))}resumeStream(){return b(this._connection.invoke("controller.resumeStream"))}async _startWorker(e){try{this._connection=await Se("Pipeline",{client:this.client,strategy:"dedicated",signal:e})}catch(t){ie(t)}}};l([h()],S.prototype,"isReady",void 0),l([h({constructOnly:!0})],S.prototype,"client",void 0),l([h()],S.prototype,"tileRenderer",null),S=l([q("esri.views.2d.layers.support.FeatureLayerProxy")],S);const Ve=S,Ae=1e-6;class $e{constructor(t){this._tiles=new Map,this.buffer=0,this.acquireTile=t.acquireTile,this.releaseTile=t.releaseTile,this.tileInfoView=t.tileInfoView,this.buffer=t.buffer}destroy(){}clear(){this._tiles.forEach(t=>this._releaseTile(t))}tileKeys(){const t=[];return this._tiles.forEach((i,r)=>t.push(r)),t}update(t){const i=this.tileInfoView.getTileCoverage(t.state,this.buffer,"closest"),{spans:r,lodInfo:s}=i,{level:a}=s,o=[],u=[],n=new Set,c=new Set;for(const{row:p,colFrom:f,colTo:_}of r)for(let g=f;g<=_;g++){const w=M.getId(a,p,s.normalizeCol(g),s.getWorldForColumn(g)),v=this._getOrAcquireTile(o,w);n.add(w),v.isReady?v.visible=!0:c.add(v.key)}return c.forEach(p=>this._addPlaceholders(n,p)),this._tiles.forEach(p=>{n.has(p.key.id)||(u.push(p.key.id),this._releaseTile(p))}),be.pool.release(i),{hasMissingTiles:c.size>0,added:o,removed:u}}_getOrAcquireTile(t,i){if(!this._tiles.has(i)){const r=this.acquireTile(new M(i));t.push(i),this._tiles.set(i,r),r.visible=!1}return this._tiles.get(i)}_getTile(t){return this._tiles.get(t)}_releaseTile(t){this._tiles.delete(t.key.id),this.releaseTile(t)}_addPlaceholders(t,i){const r=this._addPlaceholderChildren(t,i);Math.abs(1-r)<Ae||this._addPlaceholderParent(t,i)||(this._getTile(i.id).visible=!0)}_addPlaceholderChildren(t,i){let r=0;return this._tiles.forEach(s=>{r+=this._addPlaceholderChild(t,s,i)}),r}_addPlaceholderChild(t,i,r){return i.key.level<=r.level||!i.hasData||!r.contains(i.key)?0:(i.visible=!0,t.add(i.key.id),1/(1<<2*(i.key.level-r.level)))}_addPlaceholderParent(t,i){let r=i.getParentKey(),s=0,a=null;for(;d(r);){if(t.has(r.id))return!0;const o=this._getTile(r.id);if(o!=null&&o.isReady){for(const u of t){const n=this._getTile(u);r.contains(n.key)&&(n.visible=!1)}return o.visible=!0,t.add(o.key.id),!0}o!=null&&o.hasData&&o.patchCount>s&&(s=o.patchCount,a=o),r=r.getParentKey()}return!!a&&(a.visible=!0,t.add(a.key.id),!0)}}function G(e){return e&&"openPorts"in e}let m=class extends xe(Ce(fe(Ee))){constructor(){super(...arguments),this._pipelineIsUpdating=!0,this._commandsQueue=new Ue({process:e=>{switch(e.type){case"processed-edit":return this._doEdit(e);case"refresh":return this._doRefresh(e.dataChanged);case"update":return this._doUpdate()}}}),this._visibilityOverrides=new Set,this._highlightIds=new Map,this._updateHighlight=re(async()=>this._proxy.setHighlight(Array.from(this._highlightIds.keys()))),this._uploadsLocked=!1,this._needsClusterSizeUpdate=!1,this.featureEffectView=new Ie,this._lastDefinitionExpression=null}destroy(){var e;k(this._updateClusterSizeTask,t=>t.remove()),(e=this._proxy)==null||e.destroy(),this._commandsQueue.destroy()}initialize(){this.addResolvingPromise(Promise.all([this._initProxy(),this._initServiceOptions()])),this.handles.add([this.on("valueRangesChanged",e=>{this._set("_aggregateValueRanges",e.valueRanges)}),A(()=>this.featureEffect,e=>{this.featureEffectView.featureEffect=e},se)]),this.featureEffectView.endTransitions()}async _initProxy(){const e=this.layer;if("isTable"in e&&e.isTable)throw new V("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:this.layer});const t=e.type==="feature"||e.type==="subtype-group",i="capabilities"in e&&e.capabilities.operations.supportsQuery;if(t&&!i)throw new V("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e});this._proxy&&this._proxy.destroy();const r=this._createClientOptions();return this._set("_proxy",new Ve({client:r})),this._proxy.when()}async _initServiceOptions(){return this._set("_serviceOptions",await this._createServiceOptions()),this._serviceOptions}get orderByFields(){return this._serviceOptions.type!=="stream"&&this._serviceOptions.orderByFields}get labelsVisible(){const e=this.layer.type==="subtype-group"?this.layer.sublayers.items:[this.layer];return!this.suspended&&e.some(t=>t.labelingInfo&&t.labelsVisible)}get queryMode(){return this._serviceOptions.type}get renderingConfigHash(){var H,L;if(!this.layer)return null;const e=this.availableFields,t=this.layer,i=this.view.floors,{definitionExpression:r}=t,s=this.layer.type!=="subtype-group"&&this.layer.labelsVisible&&this.layer.labelingInfo,a="renderer"in t&&t.renderer,o="gdbVersion"in t?t.gdbVersion:void 0,u="historicMoment"in t?(H=t.historicMoment)==null?void 0:H.getTime():void 0,{timeExtent:n}=this,c="customParameters"in t?JSON.stringify(t.customParameters):void 0,p="apiKey"in t?t.apiKey:void 0,f=t.type==="stream"?`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`:null,_=JSON.stringify(this.clips),g="featureReduction"in t?(L=t.featureReduction)==null?void 0:L.toJSON():null,w="orderBy"in this.layer&&JSON.stringify(this.layer.orderBy),v="sublayers"in this.layer&&this.layer.sublayers.items.reduce((X,T)=>X+`${T.visible?1:0}.${JSON.stringify(T.renderer)}.${T.labelsVisible}
.${JSON.stringify(T.labelingInfo)}`,""),W="subtypeCode"in this.layer&&this.layer.subtypeCode;return JSON.stringify({orderBy:w,sublayerHash:v,subtypeCode:W,filterHash:d(this.filter)&&this.filter.toJSON(),effectHash:d(this.featureEffect)&&this.featureEffect.toJSON(),streamFilter:f,gdbVersion:o,definitionExpression:r,historicMoment:u,availableFields:e,renderer:a,labelingInfo:s,timeExtent:n,floors:i,clipsHash:_,featureReduction:g,customParameters:c,apiKey:p})}highlight(e){let t;return e instanceof N?t=[e.getObjectId()]:typeof e=="number"||typeof e=="string"?t=[e]:Z.isCollection(e)&&e.length>0?t=e.map(i=>i==null?void 0:i.getObjectId()).toArray():Array.isArray(e)&&e.length>0&&(t=typeof e[0]=="number"||typeof e[0]=="string"?e:e.map(i=>i==null?void 0:i.getObjectId())),t=t==null?void 0:t.filter(i=>i!=null),t&&t.length?(this._addHighlight(t),{remove:()=>this._removeHighlight(t)}):{remove:()=>{}}}hasHighlight(){return!!this._highlightIds.size}async hitTest(e,t){if(!this.tileRenderer)return null;const i=await this.tileRenderer.hitTest(t);if(i.length===0)return null;const{features:r,aggregates:s}=await this._proxy.getFeatures(i);return[...s.map(a=>this._createGraphicHit(e,J.fromJSON(a))),...r.map(a=>this._createGraphicHit(e,N.fromJSON(a)))]}queryStatistics(){return this._proxy.queryStatistics()}async querySummaryStatistics(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.querySummaryStatistics(this._cleanUpQuery(e),r,i)}async queryAggregateSummaryStatistics(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryAggregateSummaryStatistics(this._cleanUpAggregateQuery(e),r,i)}async queryUniqueValues(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryUniqueValues(this._cleanUpQuery(e),r,i)}async queryAggregateUniqueValues(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryAggregateUniqueValues(this._cleanUpAggregateQuery(e),r,i)}async queryClassBreaks(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryClassBreaks(this._cleanUpQuery(e),r,i)}async queryAggregateClassBreaks(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryAggregateClassBreaks(this._cleanUpAggregateQuery(e),r,i)}async queryHistogram(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryHistogram(this._cleanUpQuery(e),r,i)}async queryAggregateHistogram(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryAggregateHistogram(this._cleanUpAggregateQuery(e),r,i)}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then(i=>{const r=P.fromJSON(i);return r.features.forEach(s=>this._setLayersForFeature(s)),r})}queryVisibleFeatures(e,t){return this._proxy.queryVisibleFeatures(this._cleanUpQuery(e),t).then(i=>{const r=P.fromJSON(i);return r.features.forEach(s=>this._setLayersForFeature(s)),r})}async queryAggregates(e,t){const i=await this._proxy.queryAggregates(this._cleanUpAggregateQuery(e),t),r=Te.fromJSON(i);return r.features.forEach(s=>this._setLayersForFeature(s)),r}queryAggregateIds(e,t){return this._proxy.queryAggregateIds(this._cleanUpAggregateQuery(e),t)}queryAggregateCount(e,t){return this._proxy.queryAggregateCount(this._cleanUpAggregateQuery(e),t)}queryAggregateJSON(e,t){return this._proxy.queryAggregates(this._cleanUpAggregateQuery(e),t)}queryFeaturesJSON(e,t){return this._proxy.queryFeatures(this._cleanUpQuery(e),t)}queryObjectIds(e,t){return this._proxy.queryObjectIds(this._cleanUpQuery(e),t)}queryFeatureCount(e,t){return this._proxy.queryFeatureCount(this._cleanUpQuery(e),t)}queryExtent(e,t){return this._proxy.queryExtent(this._cleanUpQuery(e),t).then(i=>({count:i.count,extent:ye.fromJSON(i.extent)}))}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._tileStrategy||!this.tileRenderer)return;const{hasMissingTiles:t,added:i,removed:r}=this._tileStrategy.update(e);(i.length||r.length)&&this._proxy.updateTiles({added:i,removed:r}),t&&this.requestUpdate(),this.notifyChange("updating")}attach(){this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._tileStrategy=new $e({acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme,buffer:0}),this.handles.add(A(()=>this.renderingConfigHash,()=>this._update(),oe),"attach"),this.layer.type!=="stream"&&this.handles.add(this.layer.on("edits",e=>this._edit(e)),"attach")}detach(){var e;this._commandsQueue.clear(),(e=this._proxy)==null||e.stop(),this.container.removeAllChildren(),this.handles.remove("attach"),this.tileRenderer&&(this.tileRenderer.uninstall(this.container),this.tileRenderer=null),this._tileStrategy&&(this._tileStrategy.destroy(),this._tileStrategy=null),this._tileRendererHash=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){var u;const e="renderer"in this.layer&&this.layer.renderer!=null,t=this._commandsQueue.updating,i=this._updatingRequiredFieldsPromise!=null,r=!this._proxy||!this._proxy.isReady,s=this._pipelineIsUpdating,a=this.tileRenderer==null||((u=this.tileRenderer)==null?void 0:u.updating),o=e&&(t||i||r||s||a);return R("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${o}
  -> hasRenderer ${e}
  -> hasPendingCommand ${t}
  -> updatingRequiredFields ${i}
  -> updatingProxy ${r}
  -> updatingPipeline ${s}
  -> updatingTileRenderer ${a}
`),o}_createClientOptions(){return{setUpdating:e=>{this._set("_pipelineIsUpdating",e)},emitEvent:e=>{this.emit(e.name,e.event)}}}async _detectQueryMode(e){var a;const t="path"in e,i="editingInfo"in this.layer&&((a=this.layer.editingInfo)==null?void 0:a.lastEditDate),r=!!this.layer.refreshInterval,s=!i&&r;if(t&&(this.layer.type==="feature"||this.layer.type==="subtype-group")&&this.layer.geometryType==="point"&&this.layer.capabilities.query.supportsPagination&&!this.layer.capabilities.operations.supportsEditing&&!s&&R("featurelayer-snapshot-enabled"))try{const o=await this.layer.queryFeatureCount();if(o<=R("featurelayer-snapshot-point-min-threshold"))return{mode:"snapshot",featureCount:o};const u=R("featurelayer-snapshot-point-max-threshold"),n=R("featurelayer-snapshot-point-coverage"),c=this.view.extent,p=O(this.layer.fullExtent),f=p==null?void 0:p.clone().intersection(c),_=d(f)?f.width*f.height:0,g=(p==null?void 0:p.width)*(p==null?void 0:p.height),w=g===0?0:_/g;if(o<=u&&w>=n)return{mode:"snapshot",featureCount:o}}catch(o){x.getLogger(this.declaredClass).warn("mapview-feature-layer","Encountered an error when querying for featureCount",{error:o})}return{mode:"on-demand"}}async _createServiceOptions(){const e=this.layer;if(e.type==="stream")return null;const{capabilities:t,objectIdField:i}=e,r=e.fields.map(v=>v.toJSON()),s=d(e.fullExtent)&&e.fullExtent.toJSON(),a=qe(e.geometryType),o=e.timeInfo&&e.timeInfo.toJSON()||null,u=e.spatialReference?e.spatialReference.toJSON():null,n=e.type==="feature"?e.globalIdField:null;let c;e.type==="ogc-feature"?c=e.source.getSource():G(e.source)?c=await e.source.openPorts():e.parsedUrl&&(c=ee(e.parsedUrl),"dynamicDataSource"in e&&e.dynamicDataSource&&(c.query={layer:JSON.stringify({source:e.dynamicDataSource})}));const p="datesInUnknownTimezone"in this.layer&&this.layer.datesInUnknownTimezone,f=("subtypeField"in this.layer&&this.layer.subtypeField)??null,{mode:_,featureCount:g}=await this._detectQueryMode(c);let w=this.layer.objectIdField;if(this.layer.type==="feature"&&d(this.layer.orderBy)&&this.layer.orderBy.length){const v=!this.layer.orderBy[0].valueExpression&&this.layer.orderBy[0].field;v&&(w=v)}return{type:_,timeReferenceUnknownClient:p,subtypeField:f,featureCount:g,globalIdField:n,maxRecordCount:t.query.maxRecordCount,tileMaxRecordCount:t.query.tileMaxRecordCount,capabilities:t,fields:r,fullExtent:s,geometryType:a,objectIdField:i,source:c,timeInfo:o,spatialReference:u,orderByFields:w}}async _createMemoryServiceOptions(e){const t=await e.openPorts();return{...this._createServiceOptions(),type:"memory",source:t}}_cleanUpQuery(e){const t=Q.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}_cleanUpAggregateQuery(e){const t=Q.from(e)||this.createAggregateQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(e){return this.suspended?void this._clearTiles():this._validateEdit(e)?this._commandsQueue.push({type:"edit",edits:e}):void 0}async doRefresh(e){if(this.attached&&this._tileStrategy.tileKeys().length)return this.suspended&&e?void this._clearTiles():this._commandsQueue.push({type:"refresh",dataChanged:e})}_clearTiles(){this._tileStrategy.tileKeys().length&&(this._proxy.updateTiles({added:[],removed:this._tileStrategy.tileKeys()}),this._tileStrategy.clear(),this.requestUpdate(),this._commandsQueue.clear(),this._update())}_validateEdit(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,i=e.deletedFeatures.some(s=>s.objectId===-1||!s.objectId),r=t&&this.availableFields.includes(t);return i&&!r?(x.getLogger(this.declaredClass).error(new V("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e}async _doUpdate(){try{if(this.destroyed||!this._hasRequiredSupport(this.layer)||!this._tileStrategy)return;const{featureEffectView:e,filter:t}=this;await this._updateRequiredFields();const{renderer:i}=this._getEffectiveRenderer();this._set("_effectiveRenderer",i);const r=this._createSchemaConfig(),s=this._createConfiguration(r,t,e.filter),a=this._lastDefinitionExpression!==s.schema.source.definitionExpression;this._lastDefinitionExpression=s.schema.source.definitionExpression;const o=s.schema.tileRenderer,u=this._createTileRendererHash(o);if(this._serviceOptions.type==="snapshot"&&(s.schema.source.initialFeatureCount=this._serviceOptions.featureCount),u!==this._tileRendererHash){await this._initTileRenderer(o,i);const n=this.layer,c=n.type==="stream"?await this._initServiceOptions():this._serviceOptions;this.tileRenderer.onConfigUpdate(i),n.type!=="stream"&&G(n.source)&&(c.source=await n.source.openPorts());const p={added:this._tileStrategy.tileKeys(),removed:[]};await this._proxy.startup(this.view.featuresTilingScheme,s,c,p),this.hasHighlight()&&await this._proxy.setHighlight(Array.from(this._highlightIds.keys())),await this._onceTilesUpdated(),this.tileRenderer.onConfigUpdate(i)}else{this._serviceOptions.type==="snapshot"&&a&&(s.schema.source.changedFeatureCount=await this.layer.queryFeatureCount());const n=await this._proxy.update(s);(n.mesh||n.targets.aggregate)&&this._lockGPUUploads();try{await this._proxy.applyUpdate(n)}catch(c){E(c)||x.getLogger(this.declaredClass).error(c)}(n.mesh||n.targets.aggregate)&&this._unlockGPUUploads(),this.tileRenderer.onConfigUpdate(i),this._updateClusterSizeVariable(),this._forceAttributeTextureUpload()}this._tileRendererHash=u,this.tileRenderer.invalidateLabels(),this.requestUpdate()}catch{}}async _doEdit(e){try{await this._proxy.onEdits(e)}catch(t){E(t)}}async _doRefresh(e){this._lockGPUUploads();try{let i;e&&this.queryMode==="snapshot"&&"queryFeatureCount"in this.layer&&(i=await this.layer.queryFeatureCount()),await this._proxy.refresh({dataChanged:e,featureCount:i})}catch(i){E(i)}this._unlockGPUUploads();const t=this.layer;t&&"featureReduction"in t&&t.featureReduction&&this._updateClusterSizeVariable()}_updateClusterSizeVariable(){this._needsClusterSizeUpdate&&(this.tileRenderer.onConfigUpdate(this._effectiveRenderer),this._needsClusterSizeUpdate=!1)}_createUpdateClusterSizeTask(e,t){return A(()=>this._aggregateValueRanges,i=>{this._updateClusterEffectiveRendererSizeVariable(e,t,i),this._needsClusterSizeUpdate=!0,this._uploadsLocked||this._updateClusterSizeVariable()})}async _updateClusterEffectiveRendererSizeVariable(e,t,i){if(e.dynamicClusterSize&&"visualVariables"in e&&e.visualVariables){const r=ne(e.visualVariables);if(d(r)&&r.field==="cluster_count"){const s=e.visualVariables.indexOf(r);e.visualVariables[s]=le(t,i);const a=e.clone();a.dynamicClusterSize=!0,this._set("_effectiveRenderer",a)}}}_getEffectiveRenderer(){var r;const e=this.layer,t="renderer"in e?e.renderer:null,i="featureReduction"in e?e.featureReduction:null;if(d(this._updateClusterSizeTask)&&(this._updateClusterSizeTask.remove(),this._updateClusterSizeTask=null),i&&"renderer"in i&&i.renderer&&!((r=i.renderer.authoringInfo)!=null&&r.isAutoGenerated)){const s=i.fields;if(i.type==="cluster"){const{renderer:a,didInject:o}=ue(i.renderer,i,this._aggregateValueRanges);return o&&(k(this._updateClusterSizeTask,u=>u.remove()),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(a,i)),{renderer:a,aggregateFields:s,featureReduction:i}}return{renderer:i.renderer,aggregateFields:s,featureReduction:i}}if(i&&i.type==="cluster"&&pe(t)){const s=i,a=[],o=he(a,t,s,this._aggregateValueRanges,!0);return k(this._updateClusterSizeTask,u=>u.remove()),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(o,s),{renderer:o,aggregateFields:a,featureReduction:i}}return{renderer:t,aggregateFields:[],featureReduction:null}}_acquireTile(e){const t=this.tileRenderer.acquireTile(e);return t.once("attach",()=>{this.requestUpdate()}),t}_releaseTile(e){this.tileRenderer.releaseTile(e)}async _initTileRenderer(e,t){const i=await Fe(e,{layerView:this,tileInfoView:this.view.featuresTilingScheme,layer:this.layer});return this.tileRenderer&&(this._tileStrategy.clear(),this.tileRenderer.uninstall(this.container),this.tileRenderer.destroy(),this.tileRenderer=null),this.destroyed?null:(this._proxy.tileRenderer=i,this._set("tileRenderer",i),this.tileRenderer.install(this.container),this.tileRenderer.onConfigUpdate(t),this.requestUpdate(),this.tileRenderer)}_createTileRendererHash(e){return`${e.type}`}get hasFilter(){const e=!!("floorInfo"in this.layer&&this.layer.floorInfo&&this.view.floors&&this.view.floors.length);return!!this.filter||e||!!this._visibilityOverrides.size||!!this.timeExtent}_injectOverrides(e){const t=d(e)?e.timeExtent:null,i=d(this.timeExtent)&&d(t)?this.timeExtent.intersection(t):this.timeExtent||t;let r=null;const s="floorInfo"in this.layer&&this.layer.floorInfo;if(s){const o=d(e)&&e.where;r=this._addFloorFilterClause(o)}if(!this._visibilityOverrides.size&&!i&&!s)return d(e)?e.toJSON():null;(e=d(e)&&e.clone()||new ce).timeExtent=i,r&&(e.where=r);const a=e.toJSON();return a.hiddenIds=Array.from(this._visibilityOverrides),a}_addFloorFilterClause(e){var r;const t=this.layer;let i=e||"";if("floorInfo"in t&&t.floorInfo){let s=this.view.floors;if(!s||!s.length)return i;(r=t.floorInfo.viewAllLevelIds)!=null&&r.length&&(s=t.floorInfo.viewAllLevelIds);const a=s.filter(n=>n!=="").map(n=>"'"+n+"'");a.push("''");const o=t.floorInfo.floorField;let u="("+o+" IN ({ids}) OR "+o+" IS NULL)";if(u=u.replace("{ids}",a.join(", ")),d(i)&&i.includes(o)){let n=new RegExp("AND \\("+o+".*NULL\\)","g");i=i.replace(n,""),n=new RegExp("\\("+o+".*NULL\\)","g"),i=i.replace(n,""),i=i.replace(/\s+/g," ").trim()}i=i!==""?"("+i+") AND "+u:u}return i!==""?i:null}_createConfiguration(e,t,i){const r=this.layer.type==="feature"&&this.layer.historicMoment?this.layer.historicMoment.getTime():void 0,s=this.layer.type==="feature"?this.layer.gdbVersion:void 0,a=new Array(ge),o=this._injectOverrides(t);a[0]=o,a[1]=d(i)?i.toJSON():null;const u=_e(e);if(Y(u))return null;const n=Oe("2d");return{availableFields:this.availableFields,gdbVersion:s,historicMoment:r,devicePixelRatio:window.devicePixelRatio||1,filters:a,schema:u,supportsTextureFloat:n.supportsTextureFloat,maxTextureSize:n.maxTextureSize}}_hasRequiredSupport(e){return!("renderer"in e)||ve(e.renderer)}_onceTilesUpdated(){return this.requestUpdate(),ae(()=>!this._pipelineIsUpdating)}_lockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!0,this.tileRenderer.lockGPUUploads())}_unlockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!1,this.tileRenderer.unlockGPUUploads())}_forceAttributeTextureUpload(){this.tileRenderer&&this.tileRenderer.forceAttributeTextureUpload()}_createSchemaConfig(){const e=this.layer;return{renderer:"renderer"in e?e.renderer:null,spatialReference:e.spatialReference,timeExtent:e.timeExtent,definitionExpression:e.definitionExpression,featureReduction:"featureReduction"in e?e.featureReduction:null,fields:e.fields,geometryType:e.geometryType,historicMoment:"historicMoment"in e?e.historicMoment:null,labelsVisible:"labelsVisible"in e&&e.labelsVisible,labelingInfo:"labelingInfo"in e&&e.labelingInfo,availableFields:this.availableFields,featureEffect:this.featureEffect,filter:this.filter,gdbVersion:"gdbVersion"in e?e.gdbVersion:null,pixelBuffer:0,orderBy:"orderBy"in e&&e.orderBy?e.orderBy:null,customParameters:{..."customParameters"in e?e.customParameters:void 0,token:"apiKey"in e?e.apiKey:void 0},subtypeCode:"subtypeCode"in e?e.subtypeCode:void 0,subtypeField:"subtypeField"in e?e.subtypeField:void 0}}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const i=this._highlightIds.get(t);this._highlightIds.set(t,i+1)}else this._highlightIds.set(t,1);this._updateHighlight().catch(t=>{E(t)||x.getLogger(this.declaredClass).error(t)})}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const i=this._highlightIds.get(t)-1;i===0?this._highlightIds.delete(t):this._highlightIds.set(t,i)}this._updateHighlight().catch(t=>{E(t)||x.getLogger(this.declaredClass).error(t)})}_setLayersForFeature(e){const t=this.layer;e.layer=t,e.sourceLayer=t}_createGraphicHit(e,t){return this._setLayersForFeature(t),d(t.geometry)&&(t.geometry.spatialReference=this.view.spatialReference),{type:"graphic",graphic:t,layer:this.layer,mapPoint:e}}};l([h()],m.prototype,"_serviceOptions",void 0),l([h()],m.prototype,"_proxy",void 0),l([h()],m.prototype,"_pipelineIsUpdating",void 0),l([h()],m.prototype,"_effectiveRenderer",void 0),l([h()],m.prototype,"_aggregateValueRanges",void 0),l([h()],m.prototype,"_commandsQueue",void 0),l([h()],m.prototype,"featureEffectView",void 0),l([h()],m.prototype,"labelsVisible",null),l([h({readOnly:!0})],m.prototype,"queryMode",null),l([h()],m.prototype,"renderingConfigHash",null),l([h()],m.prototype,"tileRenderer",void 0),l([h()],m.prototype,"updating",void 0),m=l([q("esri.views.2d.layers.FeatureLayerView2D")],m);const ea=m;export{ea as default};
