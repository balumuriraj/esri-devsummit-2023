import{e as f,y as u,l as S,n as j}from"./cast-fcb46737.js";import{i as F}from"./geometry-b7901087.js";import{g as T}from"./Graphic-f0e54e86.js";import{s as P}from"./jsonMap-7b8332c9.js";import{y as q}from"./string-a318751c.js";import{r as h,e as J}from"./typedArrayUtil-4d7bb04c.js";import"./ArrayPool-a8ee9378.js";import{o as w,r as G,k as x}from"./Extent-da876e26.js";import{v as O,y as d}from"./jsonUtils-229211af.js";import{y as $}from"./Field-61ec9870.js";import"./Error-ec6249b9.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-1e54421e.js";import"./Polyline-ff2d7c6b.js";import"./typeUtils-35750739.js";import"./PopupTemplate-40f3c9aa.js";import"./Clonable-545593ce.js";import"./Collection-910b6f71.js";import"./Evented-a45c8b0f.js";import"./SimpleObservable-23231131.js";import"./fieldUtils-7f54c4b1.js";import"./preload-helper-3bce6601.js";import"./arcadeOnDemand-281a01eb.js";import"./enumeration-3a03bd31.js";import"./number-27cf8195.js";import"./locale-30120714.js";import"./Identifiable-bfe1ff30.js";import"./symbols-f8232671.js";import"./CIMSymbol-539bd447.js";import"./Symbol-f93ed9fd.js";import"./Color-fb64d77d.js";import"./colorUtils-639f4d25.js";import"./mathUtils-b4bb77e2.js";import"./vec3-e93e648f.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-1f7f5126.js";import"./symbolLayerUtils3D-76acc268.js";import"./aaBoundingBox-657a9b82.js";import"./aaBoundingRect-193543b5.js";import"./request-6fc81c4c.js";import"./persistableUrlUtils-5f719c3b.js";import"./Symbol3DAnchorPosition2D-5726d999.js";import"./collectionUtils-803d9ba8.js";import"./Portal-2bb189b3.js";import"./Loadable-268c900a.js";import"./Promise-376ab9f6.js";import"./PortalGroup-8e41557a.js";import"./PortalUser-659cc1d2.js";import"./Ellipsoid-89682c5e.js";import"./fieldType-f31285f7.js";var v;const R=new P({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let y=v=class extends S{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,o){var n;const r=x.fromJSON(o.spatialReference),t=[];for(let s=0;s<e.length;s++){const p=e[s],a=T.fromJSON(p),m=p.geometry&&p.geometry.spatialReference;h(a.geometry)&&!m&&(a.geometry.spatialReference=r);const i=p.aggregateGeometries,l=a.aggregateGeometries;if(i&&h(l))for(const g in l){const c=l[g],N=(n=i[g])==null?void 0:n.spatialReference;h(c)&&!N&&(c.spatialReference=r)}t.push(a)}return t}writeGeometryType(e,o,r,t){if(e)return void R.write(e,o,r,t);const{features:n}=this;if(n){for(const s of n)if(s&&h(s.geometry))return void R.write(s.geometry.type,o,r,t)}}readQueryGeometry(e,o){if(!e)return null;const r=!!e.spatialReference,t=O(e);return t&&!r&&o.spatialReference&&(t.spatialReference=x.fromJSON(o.spatialReference)),t}writeSpatialReference(e,o){if(e)return void(o.spatialReference=e.toJSON());const{features:r}=this;if(r){for(const t of r)if(t&&h(t.geometry)&&t.geometry.spatialReference)return void(o.spatialReference=t.geometry.spatialReference.toJSON())}}clone(){return new v(this.cloneProperties())}cloneProperties(){return q({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const o=this.write();if(o.features&&Array.isArray(e)&&e.length>0)for(let r=0;r<o.features.length;r++){const t=o.features[r];if(t.geometry){const n=e&&e[r];t.geometry=n&&n.toJSON()||t.geometry}}return o}quantize(e){const{scale:[o,r],translate:[t,n]}=e,s=i=>Math.round((i-t)/o),p=i=>Math.round((n-i)/r),a=this.features,m=this._getQuantizationFunction(this.geometryType,s,p);for(let i=0,l=a.length;i<l;i++)m!=null&&m(J(a[i].geometry))||(a.splice(i,1),i--,l--);return this.transform=e,this}unquantize(){const{geometryType:e,features:o,transform:r}=this;if(!r)return this;const{translate:[t,n],scale:[s,p]}=r,a=l=>l*s+t,m=l=>n-l*p,i=this._getHydrationFunction(e,a,m);for(const{geometry:l}of o)h(l)&&i&&i(l);return this.transform=null,this}_quantizePoints(e,o,r){let t,n;const s=[];for(let p=0,a=e.length;p<a;p++){const m=e[p];if(p>0){const i=o(m[0]),l=r(m[1]);i===t&&l===n||(s.push([i-t,l-n]),t=i,n=l)}else t=o(m[0]),n=r(m[1]),s.push([t,n])}return s.length>0?s:null}_getQuantizationFunction(e,o,r){return e==="point"?t=>(t.x=o(t.x),t.y=r(t.y),t):e==="polyline"||e==="polygon"?t=>{const n=d(t)?t.rings:t.paths,s=[];for(let p=0,a=n.length;p<a;p++){const m=n[p],i=this._quantizePoints(m,o,r);i&&s.push(i)}return s.length>0?(d(t)?t.rings=s:t.paths=s,t):null}:e==="multipoint"?t=>{const n=this._quantizePoints(t.points,o,r);return n&&n.length>0?(t.points=n,t):null}:e==="extent"?t=>t:null}_getHydrationFunction(e,o,r){return e==="point"?t=>{t.x=o(t.x),t.y=r(t.y)}:e==="polyline"||e==="polygon"?t=>{const n=d(t)?t.rings:t.paths;let s,p;for(let a=0,m=n.length;a<m;a++){const i=n[a];for(let l=0,g=i.length;l<g;l++){const c=i[l];l>0?(s+=c[0],p+=c[1]):(s=c[0],p=c[1]),c[0]=o(s),c[1]=r(p)}}}:e==="extent"?t=>{t.xmin=o(t.xmin),t.ymin=r(t.ymin),t.xmax=o(t.xmax),t.ymax=r(t.ymax)}:e==="multipoint"?t=>{const n=t.points;let s,p;for(let a=0,m=n.length;a<m;a++){const i=n[a];a>0?(s+=i[0],p+=i[1]):(s=i[0],p=i[1]),i[0]=o(s),i[1]=r(p)}}:null}};f([u({type:String,json:{write:!0}})],y.prototype,"displayFieldName",void 0),f([u({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],y.prototype,"exceededTransferLimit",void 0),f([u({type:[T],json:{write:!0}})],y.prototype,"features",void 0),f([w("features")],y.prototype,"readFeatures",null),f([u({type:[$],json:{write:!0}})],y.prototype,"fields",void 0),f([u({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:R.read}}})],y.prototype,"geometryType",void 0),f([G("geometryType")],y.prototype,"writeGeometryType",null),f([u({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],y.prototype,"hasM",void 0),f([u({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],y.prototype,"hasZ",void 0),f([u({types:F,json:{write:!0}})],y.prototype,"queryGeometry",void 0),f([w("queryGeometry")],y.prototype,"readQueryGeometry",null),f([u({type:x,json:{write:!0}})],y.prototype,"spatialReference",void 0),f([G("spatialReference")],y.prototype,"writeSpatialReference",null),f([u({json:{write:!0}})],y.prototype,"transform",void 0),y=v=f([j("esri.rest.support.FeatureSet")],y),y.prototype.toJSON.isDefaultToJSON=!0;const $t=y;export{$t as default};
