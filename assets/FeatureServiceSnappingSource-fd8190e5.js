import{o as z,aB as M,e as o,y as n,a as _,v as H,R as u,mH as N,$ as k,l as w,ac as E,i6 as $,ad as R,h as S,aa as x,eA as U,dc as A,a7 as j,ey as V,jh as D,eh as J,K as q,M as Z,N as L,hn as W,cU as T,hO as f,dV as G,bn as B,b as K,n$ as Q,nq as C,qa as X,qb as Y}from"./calcite-8912bd40.js";import{y as ee}from"./elevationInfoUtils-551ce894.js";import{aR as te,bT as ie,bU as re,bV as oe}from"./MediaLayerVideo-42e60ea8.js";import{i as ne,p as se}from"./queryEngineUtils-7ee0448f.js";import{b as ae}from"./TileTreeDebugger-1592735f.js";import{h as le}from"./LercDecoder-65586d50.js";import{M as pe}from"./dehydratedFeatures-3a140d03.js";import"./index-00759e4a.js";import"./sphere-d0e5285d.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quatf64-f8f1c132.js";import"./Util-6d3f024a.js";import"./plane-5e2b046c.js";import"./spatialReferenceEllipsoidUtils-afb35af9.js";import"./scaleUtils-d13015f2.js";import"./ElevationSamplerData-e3118b17.js";import"./objectResourceUtils-782953c3.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-379a78a4.js";import"./vec33-69c9e93b.js";import"./DefaultMaterial_COLOR_GAMMA-6ed76d86.js";import"./types-e1c0a5bf.js";import"./enums-e2e92c86.js";import"./Version-aa0a1d91.js";import"./quat-7b70e9a8.js";import"./resourceUtils-527631ac.js";import"./basicInterfaces-7449a8bf.js";import"./Indices-d8bff7b2.js";import"./NestedMap-1b5db22e.js";import"./requestImageUtils-d1ba3b36.js";import"./symbolColorUtils-c9d24716.js";import"./VertexAttribute-15d1866a.js";import"./doublePrecisionUtils-e3c3d0d8.js";import"./OrderIndependentTransparency-5f7257d7.js";import"./Texture-563cf5e5.js";import"./FramebufferObject-8b18fc0c.js";import"./VertexElementDescriptor-2925c6af.js";import"./InterleavedLayout-d57c91d0.js";import"./vec3f32-01c06d8d.js";import"./Octree-499541ed.js";import"./edgeProcessing-20e12367.js";import"./deduplicate-769a6f51.js";import"./MeshComponent-788e605a.js";import"./earcut-61f7b102.js";import"./imageUtils-c2d0d1ae.js";import"./projection-5969b753.js";import"./ZoomMomentumEstimator-ef57e6a4.js";import"./floatRGBA-ca2b39ca.js";import"./labelFormatUtils-71e1f841.js";import"./orientedBoundingBox-a14b97b5.js";import"./quatf32-51a323b8.js";import"./SnappingCandidate-970faec6.js";import"./callExpressionWithFeature-df1a8f01.js";import"./quantizationUtils-b3b2ae2a.js";import"./DefaultVertexAttributeLayouts-5f20d8dd.js";import"./geometryServiceUtils-a536bb19.js";import"./project-909a4219.js";import"./VectorTile-d41a1f0f.js";import"./enums-fb086c25.js";import"./config-1337d16e.js";import"./TiledDisplayObject-419c008b.js";import"./DisplayObject-87c37b69.js";import"./rasterUtils-7694cc98.js";import"./resources-7587d8f4.js";import"./workerHelper-6131d203.js";import"./webgl-debug-7f880832.js";import"./RenderingContext-0f21aa0e.js";import"./ProgramCache-f29c900e.js";import"./Program-77209250.js";import"./MediaLayer-4c42fc2f.js";import"./MediaElementView-06baa4d4.js";import"./normalizeUtilsSync-3ea564a9.js";import"./resourceExtension-f31d9f10.js";import"./BoundsStore-00da37da.js";import"./PooledRBush-5a11bc7e.js";import"./prism-line-numbers-eff41b13.js";import"./label2-a2f37e65.js";import"./interactive-1de2e238.js";import"./loadable-6afd516d.js";import"./t9n-81df3a71.js";import"./observers-c89705b8.js";import"./icon-8e47fbec.js";import"./loader-c773e800.js";import"./guid-51402ee7.js";import"./DimensionAnalysisView3D-96b9bbd9.js";import"./LineVisualElement-b0e5ebeb.js";import"./LengthDimension-ebecad1f.js";import"./Segment-499df512.js";import"./analysisViewUtils-1aeb817c.js";import"./ImageMaterial-e77d3ec9.js";import"./Factory-befbd753.js";import"./RightAngleQuadVisualElement-10d61437.js";import"./VisualElementResources-b14774ca.js";import"./PointVisualElement-18444051.js";import"./colorUtils-c0f43caf.js";import"./EditGeometryOperations-f7a23176.js";import"./QueryEngineResult-dfcfeac3.js";import"./WhereClause-8339ee75.js";import"./executionError-fb3f283a.js";import"./utils-e5a50699.js";import"./generateRendererUtils-5b0c1ef7.js";import"./projectionSupport-d23d7a2d.js";import"./json-48e3ea08.js";import"./utils-046b23b4.js";import"./dehydratedFeatureComparison-409d2bff.js";import"./RenderTexture-6105e069.js";import"./VertexSnappingCandidate-afa006d0.js";function I(e,t){return ie(t.extent,F),re(F,z(de,e.x,e.y,0))}const F=te(),de=M();let c=class extends H{get tiles(){const t=this.tilesCoveringView,i=u(this.pointOfInterest)?this.pointOfInterest:this.view.center;return t.sort((s,r)=>I(i,s)-I(i,r)),t}_scaleEnabled(){return N(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||k(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:t,lodInfo:i}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:s}=i,r=[];for(const{row:l,colFrom:a,colTo:p}of t)for(let y=a;y<=p;y++){const v=i.normalizeCol(y),b=new $(null,s,l,v);this.tileInfo.updateTileInfo(b),r.push(b)}return r}get tileInfo(){var t;return((t=this.view.featuresTilingScheme)==null?void 0:t.tileInfo)??null}get tileSize(){return u(this.tileInfo)?this.tileInfo.size[0]:256}constructor(t){super(t),this.pointOfInterest=null}initialize(){this.addHandles(w(()=>{var t,i;return(i=(t=this.view)==null?void 0:t.state)==null?void 0:i.viewpoint},()=>this.notifyChange("tilesCoveringView"),E))}};o([n({readOnly:!0})],c.prototype,"tiles",null),o([n({readOnly:!0})],c.prototype,"_scaleEnabled",null),o([n({readOnly:!0})],c.prototype,"tilesCoveringView",null),o([n({readOnly:!0})],c.prototype,"tileInfo",null),o([n({readOnly:!0})],c.prototype,"tileSize",null),o([n({constructOnly:!0})],c.prototype,"view",void 0),o([n({constructOnly:!0})],c.prototype,"layer",void 0),o([n()],c.prototype,"pointOfInterest",void 0),c=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],c);let m=class extends R{get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(u(t)){const i=e.map(s=>I(t,s));for(let s=1;s<i.length;s++)if(i[s-1]>i[s])return e.sort((r,l)=>I(t,r)-I(t,l)),e.slice()}return e}get tilesCoveringView(){var e,t;return this._filterTiles((t=(e=this.view.featureTiles)==null?void 0:e.tiles)==null?void 0:t.toArray()).map(ue)}get tileInfo(){var e;return((e=this.view.featureTiles)==null?void 0:e.tilingScheme.toTileInfo())??null}get tileSize(){var e;return((e=this.view.featureTiles)==null?void 0:e.tileSize)??256}get _effectivePointOfInterest(){var t;const e=this.pointOfInterest;return u(e)?e:(t=this.view.pointsOfInterest)==null?void 0:t.focus.location}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.handles.add(w(()=>this.view.featureTiles,e=>{this.handles.remove(P),e&&this.handles.add(e.addClient(),P)},S))}_filterTiles(e){return k(e)?[]:e.filter(t=>Math.abs(t.measures.screenRect[3]-t.measures.screenRect[1])>he&&t.measures.visibility===oe.VISIBLE_ON_SURFACE)}};function ue({lij:[e,t,i],extent:s}){return new $(`${e}/${t}/${i}`,e,t,i,s)}o([n({readOnly:!0})],m.prototype,"tiles",null),o([n({readOnly:!0})],m.prototype,"tilesCoveringView",null),o([n({readOnly:!0})],m.prototype,"tileInfo",null),o([n({readOnly:!0})],m.prototype,"tileSize",null),o([n({constructOnly:!0})],m.prototype,"view",void 0),o([n()],m.prototype,"pointOfInterest",void 0),o([n()],m.prototype,"_effectivePointOfInterest",null),m=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],m);const he=50,P="feature-tiles";let O=class extends ae{constructor(e){super(e),this._handles=new x}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this._handles.add(U(()=>clearInterval(e)))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(r=>{e.set(r.data.id,r.featureCount)}),this._debugInfo.pendingTiles.forEach(r=>{e.set(r.data.id,r.featureCount),t.set(r.data.id,r.state)});const i=r=>{const l=t.get(r),a=e.get(r)??"?";return l?`${l}:${a}
${r}`:`store:${a}
${r}`},s=new Map;return this._debugInfo.storedTiles.forEach(r=>{s.set(r.data.id,r.data)}),this._debugInfo.pendingTiles.forEach(r=>{s.set(r.data.id,r.data)}),Array.from(s.values()).map(r=>({lij:[r.level,r.row,r.col],geometry:A.fromExtent(j(r.extent,this.view.spatialReference)),label:i(r.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};o([n({constructOnly:!0})],O.prototype,"handle",void 0),O=o([_("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],O);let d=class extends R{get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:s}of t)for(const{z:r}of s)i.push(r);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new ce(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var r;const i=this._serviceInfoFromLayer(e.layer);if(k(i))return;const s={configuration:this._convertConfiguration(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(r=e.layer.elevationInfo)==null?void 0:r.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",s,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const i=e.point,s={distance:e.distance,mode:e.mode,point:pe(i[0],i[1],i[2],e.coordinateHelper.spatialReference.toJSON()),types:e.types,filter:u(e.filter)?e.filter.toJSON():null};return this._workerHandle.invoke(s,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:u(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){var a,p,y;const i=this._editId++,s={id:i};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",s,t));const r=await this.updatingHandles.addPromise(V(e.result,t)),l={id:i,edits:{addedFeatures:((a=r.addedFeatures)==null?void 0:a.map(({objectId:v})=>v).filter(u))??[],deletedFeatures:((p=r.deletedFeatures)==null?void 0:p.map(({objectId:v,globalId:b})=>({objectId:v,globalId:b})))??[],updatedFeatures:((y=r.updatedFeatures)==null?void 0:y.map(({objectId:v})=>v).filter(u))??[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",l,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}_convertConfiguration(e){return{filter:u(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){var t,i;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:((t=e.parsedUrl)==null?void 0:t.path)??"",fields:e.fields.map(s=>s.toJSON()),geometryType:D.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(i=e.timeInfo)==null?void 0:i.toJSON()}}};o([n({constructOnly:!0})],d.prototype,"schedule",void 0),o([n({constructOnly:!0})],d.prototype,"hasZ",void 0),o([n({constructOnly:!0})],d.prototype,"elevationAlignPointsInFeatures",void 0),o([n({constructOnly:!0})],d.prototype,"queryForSymbologySnapping",void 0),o([n({readOnly:!0})],d.prototype,"updating",null),o([n({readOnly:!0})],d.prototype,"availability",void 0),o([n()],d.prototype,"_workerHandleUpdating",void 0),d=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],d);class ce extends le{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let g=class extends H{get tiles(){return[new $("0/0/0",0,0,0,J(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new q({origin:new Z({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new L({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};o([n({readOnly:!0})],g.prototype,"tiles",null),o([n({readOnly:!0})],g.prototype,"tileInfo",null),o([n({readOnly:!0})],g.prototype,"tileSize",null),o([n({constructOnly:!0})],g.prototype,"layer",void 0),o([n()],g.prototype,"pointOfInterest",void 0),g=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],g);let h=class extends W(H){get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){var e;return((e=this._workerHandle)==null?void 0:e.updating)||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=u(e)?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){var e;return((e=this._workerHandle)==null?void 0:e.availability)??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._workerHandle=null,this._debug=null}initialize(){let e;const t=this.view;if(u(t))switch(t.type){case"2d":this._tilesOfInterest=new c({view:t,layer:this._layer}),e=this._workerHandle=new d;break;case"3d":{const{resourceController:i}=t,s=this._layer,r=t.whenLayerView(s);this._tilesOfInterest=new m({view:t}),e=this._workerHandle=new d({schedule:a=>i.immediate.schedule(a),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(a,p)=>{const y=await r;return T(p),y.elevationAlignPointsInFeatures(a,p)},queryForSymbologySnapping:async(a,p)=>{const y=await r;return T(p),y.queryForSymbologySnapping(a,p)}});const l=new Y(null);r.then(a=>l.set(a)),this.addHandles([t.elevationProvider.on("elevation-change",({context:a})=>{const{elevationInfo:p}=s;ee(a,p)&&f(e.notifyElevationSourceChange())}),w(()=>s.elevationInfo,()=>f(e.notifyElevationSourceChange()),S),w(()=>G(l.get(),({processor:a})=>a==null?void 0:a.renderer),()=>f(e.notifySymbologyChange()),S),w(()=>B(l.get(),!1,a=>a.symbologySnappingSupported),a=>f(e.setSymbologySnappingSupported(a)),S),K(()=>{var a;return(a=Q(l.get()))==null?void 0:a.layer},["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}else this._tilesOfInterest=new g({layer:this._layer}),e=this._workerHandle=new d;this.handles.add([C(e)]),f(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this.updatingHandles.add(()=>this._updateTilesParameters,()=>f(e.updateTiles(this._updateTilesParameters,null)),S),this.handles.add([w(()=>this.configuration,i=>f(e.configure(i,null)),E)]),u(t)&&this.handles.add(w(()=>X.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new O({view:t,handle:e}),this.handles.add(C(this._debug),"debug")):!i&&this._debug&&this.handles.remove("debug")},S)),this.handles.add(this.layerSource.layer.on("apply-edits",i=>{f(e.applyEdits(i,null))}))}refresh(){var e;(e=this._workerHandle)==null||e.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:s}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(s);const r=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(l=>ne(l,r))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return se(this.view)}};o([n({constructOnly:!0})],h.prototype,"spatialReference",void 0),o([n({constructOnly:!0})],h.prototype,"layerSource",void 0),o([n({constructOnly:!0})],h.prototype,"view",void 0),o([n()],h.prototype,"_tilesOfInterest",void 0),o([n({readOnly:!0})],h.prototype,"_updateTilesParameters",null),o([n({readOnly:!0})],h.prototype,"updating",null),o([n({readOnly:!0})],h.prototype,"configuration",null),o([n({readOnly:!0})],h.prototype,"availability",null),o([n()],h.prototype,"_getGroundElevation",null),h=o([_("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],h);export{h as FeatureServiceSnappingSource};
