import{gZ as z,R as _,cU as B,Q as N,dw as A,iS as G,aI as k,$ as U,a1 as F,cb as j,ak as W,aj as Q,ai as $,e as f,y as v,a as K}from"./calcite-c5ae4991.js";import{r as Y,i as Z,l as J,n as X,t as ee}from"./TileInfoViewPOT-db0efe58.js";import{i as te,s as ie,m as re}from"./VectorTile-ade0a955.js";import{i as x,a as g}from"./StyleDefinition-7d58136b.js";import{d as se,m as oe,c as le,a as ae,M as ne}from"./WGLBrushVTLSymbol-67363b39.js";import{o as he}from"./VTLMaterialManager-18d63fe3.js";import{I as me,R as C}from"./enums-e2e92c86.js";import{l as P}from"./StyleRepository-994d8183.js";import{n as pe}from"./LayerView3D-1f5cccf1.js";import{c as ce}from"./TiledLayerView3D-480fa133.js";import{ae as de,af as ue}from"./MediaLayerVideo-b25b4fca.js";import{u as ge}from"./LayerView-d2d47806.js";import"./index-9a6385f7.js";import"./Rect-ea14f53a.js";import"./Texture-3d2bcec7.js";import"./rasterizingUtils-5fc2770c.js";import"./floatRGBA-2dd25736.js";import"./config-1337d16e.js";import"./TileInfoView-c5645cd8.js";import"./enums-fb086c25.js";import"./FramebufferObject-d9042b3f.js";import"./TiledDisplayObject-0268aa47.js";import"./DisplayObject-b5071d0a.js";import"./enums-4b2a86a0.js";import"./DefaultVertexAttributeLayouts-5f20d8dd.js";import"./VertexElementDescriptor-2925c6af.js";import"./definitions-3ddd14a8.js";import"./enums-b1d611e3.js";import"./number-b10bd8f5.js";import"./GeometryUtils-dd03fc25.js";import"./ShaderCompiler-77d0dcb6.js";import"./programUtils-f035fe8a.js";import"./colorUtils-c0f43caf.js";import"./GeometryUtils-53652037.js";import"./unitBezier-881ac1eb.js";import"./sphere-5ce3b13c.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quatf64-f8f1c132.js";import"./Util-2b929b00.js";import"./plane-6ecad71b.js";import"./spatialReferenceEllipsoidUtils-87122df3.js";import"./scaleUtils-a8d07219.js";import"./ElevationSamplerData-41a54d7d.js";import"./objectResourceUtils-8fb711c9.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-bc307796.js";import"./vec33-164586fc.js";import"./DefaultMaterial_COLOR_GAMMA-941dbf6c.js";import"./types-e1c0a5bf.js";import"./Version-e2fa8281.js";import"./quat-8dcd84de.js";import"./resourceUtils-527631ac.js";import"./basicInterfaces-7449a8bf.js";import"./Indices-84de656e.js";import"./NestedMap-1b5db22e.js";import"./requestImageUtils-67552ee5.js";import"./symbolColorUtils-14fb8f64.js";import"./VertexAttribute-15d1866a.js";import"./doublePrecisionUtils-e3c3d0d8.js";import"./OrderIndependentTransparency-5f7257d7.js";import"./InterleavedLayout-45bbbdfe.js";import"./vec3f32-01c06d8d.js";import"./Octree-65a3a6a2.js";import"./edgeProcessing-fca251f2.js";import"./deduplicate-54cc928a.js";import"./MeshComponent-9e26db57.js";import"./earcut-61f7b102.js";import"./imageUtils-c2d0d1ae.js";import"./projection-425e8064.js";import"./ZoomMomentumEstimator-f0d7cb62.js";import"./dehydratedFeatures-ce9ee959.js";import"./quantizationUtils-a15bd53f.js";import"./labelFormatUtils-2486d06e.js";import"./orientedBoundingBox-d2c06194.js";import"./quatf32-51a323b8.js";import"./SnappingCandidate-970faec6.js";import"./callExpressionWithFeature-94cb1131.js";import"./geometryServiceUtils-b1997a16.js";import"./project-0e0370f9.js";import"./LercDecoder-25ed2639.js";import"./rasterUtils-0aabb0e8.js";import"./resources-4ce48b80.js";import"./workerHelper-33dafb63.js";import"./webgl-debug-7f880832.js";import"./RenderingContext-f0258ff2.js";import"./ProgramCache-ddf14e3e.js";import"./Program-2221c2b1.js";import"./MediaLayer-faedb24a.js";import"./MediaElementView-92573d58.js";import"./normalizeUtilsSync-f9670301.js";import"./resourceExtension-a1892050.js";import"./BoundsStore-32c0ea98.js";import"./PooledRBush-52d39e88.js";import"./prism-line-numbers-713161a8.js";import"./label2-e5a29f4c.js";import"./interactive-1de2e238.js";import"./loadable-6afd516d.js";import"./t9n-b59ffad1.js";import"./observers-c89705b8.js";import"./icon-179b3e31.js";import"./loader-dc9b20b1.js";import"./guid-51402ee7.js";class _e{constructor(e,t){this._lockedSchemaPixelSize=e,this._isGCS=t}getLevelRowColumn(e){return this._isGCS?[e[0],e[1]>>1,e[2]>>1]:this._lockedSchemaPixelSize===256&&e[0]>0?[e[0]-1,e[1]>>1,e[2]>>1]:e}adjustLevel(e){return this._isGCS?e:this._lockedSchemaPixelSize===256?e>0?e-1:0:e}getShift(e,t){let r=0,o=0;return(this._lockedSchemaPixelSize===256||this._isGCS)&&(e[2]%2&&(r=t),e[1]%2&&(o=t)),[r,o]}getScale(e){if(this._isGCS){if(this._lockedSchemaPixelSize===512)return 4}else if(this._lockedSchemaPixelSize===256&&e===0)return 1;return 2}}function ye(l,e){const t=[],r=new Y(4096,t,()=>{const s=new ie;return s.show=!1,s.parts.push({startTime:0,startOpacity:0,targetOpacity:0,show:!1}),s.parts.push({startTime:0,startOpacity:0,targetOpacity:0,show:!1}),s}),o=new Z(t,r,(s,i,n)=>new J(s,i,n,l.styleRepository,l.key.level,0),(s,i)=>{te(s,i,!1)},()=>0,s=>{const i=e.getStyleLayerByUID(s).getLayoutProperty("visibility");return!i||i.getValue()!==x.NONE});t.push(l),r.add(l),o.setScreenSize(512,512),o.continue(1/0)}class H extends X{constructor(e,t,r,o,s){super(e,t,r),this._memCache=o,this._loader=s,this._ongoingTileRequests=new Map,this._ongoingRequestToController=new Map,this._tileInfoView=new ee(e.tileInfo,e.fullExtent)}destroy(){super.destroy(),this._ongoingRequestToController.forEach(e=>e.abort()),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}async getVectorTile(e,t,r,o){const s=new z(e,t,r,0);let i=this._memCache.get(s.id);if(_(i))return i.retain(),i;const n=await this._getVectorTileData(s);if(B(o),!this._layer)return null;if(i=this._memCache.get(s.id),_(i))return i.retain(),i;const h=this._layer.tileInfo.getTileBounds(N(),s),y=this._tileInfoView.getTileResolution(e);return i=new re(s,y,h[0],h[3],512,512,this._styleRepository,this._memCache),_(n)?(i.setData(n),i.retain(),this._memCache.put(s.id,i,i.memoryUsage*i.referenced,A)):i.setData(null),i.neededForCoverage=!0,i.transforms.tileUnitsToPixels=G(1/8,0,0,0,1/8,0,0,0,1),ye(i,this._styleRepository),i}_getVectorTileData(e){const t=e.id;if(this._ongoingTileRequests.has(t))return this._ongoingTileRequests.get(t);const r=new AbortController,o={signal:r.signal},s=this._getParsedVectorTileData(e,o).then(i=>(this._ongoingTileRequests.delete(t),this._ongoingRequestToController.delete(t),i)).catch(()=>(this._ongoingTileRequests.delete(t),this._ongoingRequestToController.delete(t),null));return this._ongoingTileRequests.set(t,s),this._ongoingRequestToController.set(t,r),s}_getParsedVectorTileData(e,t){return this.fetchTileData(e,t).then(r=>this.parseTileData({key:e,data:r},t))}request(e,t){return this._loader.request(e,"binary",t)}}const fe={vtlBackground:se,vtlFill:oe,vtlLine:le,vtlCircle:ae,vtlSymbol:ne},M=1e-6;class E{constructor(e,t){this.spriteMosaic=e,this.glyphMosaic=t,this._brushCache=new Map,this._vtlMaterialManager=new he}dispose(){this._brushCache&&(this._brushCache.forEach(e=>e.dispose()),this._brushCache=null),this._vtlMaterialManager=k(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}get vectorTilesMaterialManager(){return this._vtlMaterialManager}drawTile(e,t,r){const{context:o}=e,s=r.layers;r.backgroundBucketIds.length>0&&(e.renderPass="background",r.backgroundBucketIds.forEach(i=>this._renderStyleLayer(r.getLayerById(i),e,t,!0))),o.setBlendingEnabled(!1),o.setDepthTestEnabled(!0),o.setDepthWriteEnabled(!0),o.setDepthFunction(me.LEQUAL),e.renderPass="opaque";for(let i=s.length-1;i>=0;i--)this._renderStyleLayer(s[i],e,t,!1);o.setDepthWriteEnabled(!1),o.setBlendingEnabled(!0),o.setBlendFunctionSeparate(C.ONE,C.ONE_MINUS_SRC_ALPHA,C.ONE,C.ONE_MINUS_SRC_ALPHA),e.renderPass="translucent";for(let i=0;i<s.length;i++)this._renderStyleLayer(s[i],e,t,!1);o.setDepthTestEnabled(!1),o.bindVAO()}_renderStyleLayer(e,t,r,o=!1){if(!(o||e&&r.layerData.has(e.uid)))return;const s=e.getLayoutProperty("visibility");if(s&&s.getValue()===x.NONE)return;const{renderPass:i}=t;let n;switch(e.type){case g.BACKGROUND:if(i!=="background")return;n="vtlBackground";break;case g.FILL:if(i!=="opaque"&&t.renderPass!=="translucent")return;n="vtlFill";break;case g.LINE:if(i!=="translucent")return;n="vtlLine";break;case g.CIRCLE:if(i!=="translucent")return;n="vtlCircle";break;case g.SYMBOL:if(i!=="translucent")return;n="vtlSymbol"}const h=t.displayLevel;e.minzoom!==void 0&&e.minzoom>h+M||e.maxzoom!==void 0&&e.maxzoom<=h-M||(t.styleLayerUID=e.uid,t.styleLayer=e,this._drawWithBrush(t,r,n))}_drawWithBrush(e,t,r){if(!this._brushCache.has(r)){const o=fe[r];this._brushCache.set(r,new o)}this._brushCache.get(r).drawMany(e,[t])}}let d=class extends ce(pe(ge)){constructor(){super(...arguments),this._tileHandlerController=null,this.type="vector-tile-3d"}initialize(){if(U(this.layer.fullExtent))return void this.addResolvingPromise(Promise.reject(new F("vectortilelayerview:full-extent-undefined","This layer view's layer does not define a fullExtent.")));const{basemapTerrain:l,spatialReference:e,state:t,viewingMode:r}=this.view,o=r==="local"&&!de(e)||ue.force512VTL,s=this.layer.tileInfo.spatialReference.isGeographic,i=o?this.layer.tileInfo:this.layer.tileInfo.getOrCreateCompatible(256,s?1:2),n=this._getTileInfoSupportError(i,this.layer.fullExtent);if(_(n))return this.addResolvingPromise(Promise.reject(n));const h=j(()=>{var a,m;return(m=(a=this.view)==null?void 0:a.basemapTerrain)==null?void 0:m.tilingSchemeLocked}).then(()=>{var u;const a=l.tilingScheme,m=a.pixelSize;let c;if(this.schemaHelper=new _e(m,_(l.spatialReference)&&l.spatialReference.isGeographic),m===256){const w=this.layer.tileInfo.spatialReference.isGeographic;c=this.layer.tileInfo.getOrCreateCompatible(256,w?1:2)}else c=(u=this.view.spatialReference)!=null&&u.isGeographic?this.layer.tileInfo.getOrCreateCompatible(512,.5):this.layer.tileInfo;const p=this._getTileInfoCompatibilityError(c,a);if(p)throw p;this.tileInfo=c});this._tileHandlerController=new AbortController;const y=this.view.resourceController;this._memCache=y.memoryController.newCache(this.layer.uid,a=>{a.release()});const q=new P(this.layer.currentStyleInfo.style),R=l.mapTileRequester;this._tileHandler=new H(this.layer,q,t.contentPixelRatio,this._memCache,R);const S=this._tileHandlerController.signal,b=a=>y.immediate.schedule(a),T=this._tileHandler.start({signal:S,schedule:b}),I=this._tileHandler.spriteMosaic;I.then(a=>{!W(S)&&this._tileHandler&&(this.painter=new E(a,this._tileHandler.glyphMosaic))}),T.then(()=>this._tileHandlerController=null),this.updatingHandles.add(()=>{var a;return{style:this.layer.currentStyleInfo.style,pixelRatio:(a=this.view.state)==null?void 0:a.contentPixelRatio}},({style:a,pixelRatio:m})=>{this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=new AbortController,this._memCache.clear();const c=new P(a),p=new H(this.layer,c,m,this._memCache,R),u=p.start({signal:this._tileHandlerController.signal,schedule:b}),w=p.spriteMosaic;u.then(()=>this._tileHandlerController=null),this.updatingHandles.addPromise(Promise.all([u,w]).then(([,O])=>{const V=this._tileHandler,L=this.painter;this.painter=new E(O,p.glyphMosaic),this._tileHandler=p,this.emit("data-changed"),V.destroy(),L&&L.dispose()}))});const D=Promise.all([h,T,I]);this.addResolvingPromise(D)}destroy(){this.painter=k(this.painter),this._tileHandlerController=Q(this._tileHandlerController),$(this._tileHandler),this._memCache=$(this._memCache),this._tileHandler=null}get dataLevelRange(){const l=this.tileInfo.lods,e=l[0].scale,t=l[l.length-1].scale,r=this.levelRangeFromScaleRange(e,t);return r.minLevel===1&&this.tileInfo.size[0]===256&&(r.minLevel=0),r}async fetchTile(l,e,t,r){return this._tileHandler.getVectorTile(l,e,t,r)}};f([v()],d.prototype,"layer",void 0),f([v()],d.prototype,"dataLevelRange",null),f([v()],d.prototype,"updatingProgressValue",void 0),d=f([K("esri.views.3d.layers.VectorTileLayerView3D")],d);const ui=d;export{ui as default};
