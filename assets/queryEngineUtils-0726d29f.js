import{r}from"./typedArrayUtil-4d7bb04c.js";import{n as i,N as a,s as d,l as c,e as s}from"./DimensionAnalysisView3D-252f755c.js";import{o as p}from"./VertexSnappingCandidate-57064a33.js";let g=class extends i{constructor(e){super({...e,constraint:new a(e.coordinateHelper,e.edgeStart,e.edgeEnd,e.getGroundElevation)})}get hints(){return[new d(c.REFERENCE,this.constraint.start,this.constraint.end,this.elevationInfo,this.domain)]}};function E(t,e,o,n){switch(t.type){case"edge":return t.draped?new g({coordinateHelper:e,edgeStart:e.pointToVector(t.start),edgeEnd:e.pointToVector(t.end),targetPoint:e.pointToVector(t.target),objectId:t.objectId,getGroundElevation:n,elevationInfo:o}):new s({coordinateHelper:e,edgeStart:e.pointToVector(t.start),edgeEnd:e.pointToVector(t.end),targetPoint:e.pointToVector(t.target),objectId:t.objectId,elevationInfo:o});case"vertex":return new p({coordinateHelper:e,targetPoint:e.pointToVector(t.target),objectId:t.objectId,elevationInfo:o})}}function I(t){return r(t)&&t.type==="3d"?(e,o,n)=>t.elevationProvider.getElevation(e,o,n,t.spatialReference,"ground"):()=>null}export{I as a,E as r};
