import{gY as w,l as y,da as I,bd as a,gZ as c,p as V,e as l,y as g,a as v}from"./calcite-8912bd40.js";import"./Rasterizer-76d04c43.js";import"./Container-0797c889.js";import"./DisplayObject-87c37b69.js";import"./BufferPool-c2abe131.js";import"./enums-b1d611e3.js";import"./WGLContainer-9a32a1e6.js";import"./DefaultVertexAttributeLayouts-5f20d8dd.js";import"./color-e324e445.js";import"./enums-e2e92c86.js";import"./Texture-563cf5e5.js";import"./Program-77209250.js";import"./MaterialKey-2c87dd06.js";import"./utils-8b171ac3.js";import"./FramebufferObject-8b18fc0c.js";import"./number-b10bd8f5.js";import"./StyleDefinition-7d58136b.js";import"./enums-fb086c25.js";import"./MagnifierPrograms-8114656e.js";import"./OrderIndependentTransparency-5f7257d7.js";import"./floatRGBA-ca2b39ca.js";import"./webgl-debug-7f880832.js";import{a as H}from"./GraphicsView2D-685c4cd4.js";import"./AttributeStoreView-b58ac101.js";import"./earcut-61f7b102.js";import"./vec3f32-01c06d8d.js";import{t as T,o as f,n as d}from"./imageUtils-4b176025.js";import{f as q}from"./LayerView2D-638c55c1.js";import{n as U}from"./HighlightGraphicContainer-ac5d0f85.js";import{h as Q}from"./TileInfoView-9dfc6c79.js";import{y as b,r as S}from"./TileStrategy-90354c21.js";import{u as C}from"./LayerView-abbb3570.js";import{i as k}from"./RefreshableLayerView-e4d9e9c9.js";import{P as F,S as P}from"./MapServiceLayerViewHelper-ee55984a.js";import{a as G}from"./drapedUtils-08d2401b.js";import"./index-00759e4a.js";import"./_commonjsHelpers-2f3e7994.js";import"./cimAnalyzer-96bde6b1.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./enums-4b2a86a0.js";import"./alignmentUtils-ae955d28.js";import"./definitions-3ddd14a8.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-df1a8f01.js";import"./quantizationUtils-b3b2ae2a.js";import"./rasterizingUtils-c992e204.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLBrushVTLSymbol-a588e1a9.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-646e3fe5.js";import"./heatmapTextureUtils-56fc7bff.js";import"./imageutils-68b5fcaa.js";import"./Matcher-6c362377.js";import"./visualVariablesUtils-b968e7b0.js";import"./visualVariablesUtils-a5773450.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-1fd8939a.js";import"./ExpandedCIM-be73cc27.js";import"./devEnvironmentUtils-5002a058.js";import"./TileStore-9a3ccc75.js";import"./CircularArray-edd903b3.js";import"./ComputedAttributeStorage-1643f27d.js";import"./arcadeTimeUtils-c565fdc8.js";import"./executionError-fb3f283a.js";import"./centroid-bf48eee6.js";import"./ZoomMomentumEstimator-ef57e6a4.js";import"./basicInterfaces-7449a8bf.js";import"./normalizeUtilsSync-3ea564a9.js";import"./projectionSupport-d23d7a2d.js";import"./json-48e3ea08.js";import"./schemaUtils-595294e3.js";import"./util-2ff47657.js";import"./GraphicsView-d1a40b68.js";import"./TiledDisplayObject-419c008b.js";import"./BitmapTileContainer-2aeebe21.js";import"./Bitmap-b524c69a.js";import"./TileContainer-13a45e9d.js";import"./MapView-ee19e5d5.js";import"./unitBezier-881ac1eb.js";import"./ClipRect-59ab066a.js";import"./BaseGraphicContainer-cbc6f003.js";import"./FeatureContainer-6da0f2bb.js";import"./scaleUtils-d13015f2.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-43bc6a74.js";import"./popupUtils-54bd9deb.js";const R=[0,0];let s=class extends k(T(q(C))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null;if(this._tileInfoView=new Q(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new b({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(i,e)=>this.fetchTile(i,e)}),this._tileStrategy=new S({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),F(this,this.layer)){const i=this._highlightView=new H({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new P({createFetchPopupFeaturesQueryGeometry:(e,r)=>G(e,r,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(e,r)=>{i.graphicUpdateHandler({graphic:e,property:r})},layerView:this,updatingHandles:this.updatingHandles})}this.requestUpdate(),this.addAttachHandles(y(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):{remove(){}}}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return I((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){!this.attached||this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(t=>this._enqueueTileFetch(t)))}isUpdating(){var t;return((t=this._fetchQueue)==null?void 0:t.updating)??!1}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(R,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(i),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:m=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(h){if(!a(h)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(m<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const u=new c(n),_=await this.fetchTile(u,{...i,resamplingLevel:m+1});return d(this._tileInfoView,_,u,t)}}throw h}const p=new c(0,0,0,0);let o;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,p,{signal:r}),p.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);o=await this._fetchImage(p,r)}catch(h){if(a(h))throw h;o=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,o,p,t):o}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){a(i)||V.getLogger(this.declaredClass).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};l([g()],s.prototype,"_fetchQueue",void 0),l([g()],s.prototype,"resampling",null),s=l([v("esri.views.2d.layers.TileLayerView2D")],s);const _i=s;export{_i as default};
