import{e as p,y as m,n as _}from"./cast-fcb46737.js";import{g as F}from"./Graphic-f0e54e86.js";import{s as I}from"./Error-ec6249b9.js";import{t as l,r as o,s as v}from"./typedArrayUtil-4d7bb04c.js";import{h as d}from"./reactiveUtils-4dabbb80.js";import"./ArrayPool-a8ee9378.js";import{WhereClause as b}from"./WhereClause-d4b8b019.js";import{y as w}from"./FeatureReductionLayer-d69dae71.js";import{o as E}from"./floorFilterUtils-080a7cd2.js";import{x as a}from"./Query-b96bcde0.js";import{t as u}from"./styleUtils-22b14a8b.js";import{y as x,u as C,L as S,I as h}from"./I3SMeshView3D-59ddde13.js";import{n as Q}from"./LayerView3D-4202d4f4.js";import{c as j,i as A,a as q,u as O,b as $,E as H}from"./SceneLayerView-e17bd758.js";import{L as c,d as L,f as R,n as D}from"./I3SQueryFeatureStore-788a3a0d.js";import{n as g}from"./I3SNode-941d6d9e.js";import{w as N,q as P}from"./I3SUtil-f31a4571.js";import{t as U}from"./DefinitionExpressionSceneLayerView-9802dbb8.js";import{c as G}from"./PopupSceneLayerView-56a29af9.js";import{a9 as V}from"./index-a864af46.js";import{I as M}from"./Scheduler-540208b6.js";import"./string-a318751c.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-1e54421e.js";import"./geometry-b7901087.js";import"./Extent-da876e26.js";import"./Ellipsoid-89682c5e.js";import"./Polyline-ff2d7c6b.js";import"./typeUtils-35750739.js";import"./jsonMap-7b8332c9.js";import"./PopupTemplate-40f3c9aa.js";import"./Clonable-545593ce.js";import"./Collection-910b6f71.js";import"./Evented-a45c8b0f.js";import"./SimpleObservable-23231131.js";import"./fieldUtils-7f54c4b1.js";import"./preload-helper-3bce6601.js";import"./arcadeOnDemand-281a01eb.js";import"./enumeration-3a03bd31.js";import"./number-27cf8195.js";import"./locale-30120714.js";import"./Identifiable-bfe1ff30.js";import"./symbols-f8232671.js";import"./CIMSymbol-539bd447.js";import"./Symbol-f93ed9fd.js";import"./Color-fb64d77d.js";import"./colorUtils-639f4d25.js";import"./mathUtils-b4bb77e2.js";import"./vec3-e93e648f.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-1f7f5126.js";import"./symbolLayerUtils3D-76acc268.js";import"./aaBoundingBox-657a9b82.js";import"./aaBoundingRect-193543b5.js";import"./request-6fc81c4c.js";import"./persistableUrlUtils-5f719c3b.js";import"./Symbol3DAnchorPosition2D-5726d999.js";import"./collectionUtils-803d9ba8.js";import"./Portal-2bb189b3.js";import"./Loadable-268c900a.js";import"./Promise-376ab9f6.js";import"./PortalGroup-8e41557a.js";import"./PortalUser-659cc1d2.js";import"./jsonUtils-229211af.js";import"./BlendLayer-20d0571b.js";import"./parser-498c8be0.js";import"./mat4f32-77b3d8ac.js";import"./mat4-44a0988f.js";import"./TimeExtent-23e282b9.js";import"./UniqueValueRenderer-08f8851c.js";import"./LegendOptions-010d0873.js";import"./diffUtils-68b89c71.js";import"./colorRamps-9dac42c1.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-18d58939.js";import"./lengthUtils-fa751420.js";import"./unitUtils-45d1147c.js";import"./jsonUtils-0ff4ff96.js";import"./jsonUtils-f5674613.js";import"./DictionaryLoader-1cbfea53.js";import"./LRUCache-64ec42ee.js";import"./MemCache-18a255ed.js";import"./deprecate-035b199e.js";import"./heatmapUtils-aaea3f32.js";import"./vec4f64-e407da96.js";import"./OperationalLayer-97084f13.js";import"./ElevationInfo-215614d8.js";import"./labelingInfo-607e66b8.js";import"./labelUtils-3108e8d7.js";import"./defaultsJSON-59981e75.js";import"./Field-61ec9870.js";import"./fieldType-f31285f7.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./mat4f64-1e28eae0.js";import"./projection-290b739f.js";import"./assets-8d3e737a.js";import"./zscale-89472cba.js";import"./I3SOverrides-35972e34.js";import"./dehydratedFeatures-0557137d.js";import"./quantizationUtils-4dd81f85.js";import"./ViewingMode-5d7d590b.js";import"./asyncUtils-437defc4.js";import"./I3SBinaryReader-f4829435.js";import"./VertexAttribute-9c5c630d.js";import"./RenderTexture-a15e38d0.js";import"./PhysicallyBasedRendering.glsl-d457fff5.js";import"./View.glsl-3ce196d4.js";import"./ShaderBuilder-a7d0da4e.js";import"./FloatPassUniform-68d54f51.js";import"./Float4PassUniform-d7bdbc81.js";import"./RgbaFloatEncoding.glsl-52af7fcf.js";import"./Texture2DPassUniform-753de459.js";import"./vec2-528adfe4.js";import"./vec2f64-30dc1443.js";import"./vec3f32-c9aa289f.js";import"./Texture2DDrawUniform-053796dc.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-db6418ee.js";import"./AlphaCutoff-96178e0d.js";import"./Texture-46c8c2cb.js";import"./VisualVariablePassParameters-d460182b.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./FramebufferObject-a3b9c52c.js";import"./Texture-243be4d7.js";import"./context-util-a4ce3a7b.js";import"./mat3f64-c6305894.js";import"./Util-a48361c6.js";import"./TextureOnly.glsl-1ec9a9ef.js";import"./ScreenSpacePass-d5e48a9b.js";import"./Octree-0a267ea2.js";import"./sphere-2af0d852.js";import"./quatf64-7fd38d64.js";import"./plane-b575face.js";import"./FeatureLayerView3D-3975b454.js";import"./FeatureLayerViewBase3D-fb4beaaf.js";import"./FeatureLikeLayerView3D-fcaec06e.js";import"./HandleOwner-9b396af1.js";import"./arcgisLayerUrl-c09f09b4.js";import"./dehydratedFeatureComparison-59868945.js";import"./utils-6786b611.js";import"./ItemCache-fd3aceaf.js";import"./queryForSymbologySnapping-45d6d1c3.js";import"./elevationInfoUtils-36e5dd0f.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-56cfe062.js";import"./Layer-5ffe0eda.js";import"./OptimizedFeature-4ab8d380.js";import"./optimizedFeatureQueryEngineAdapter-d72f082e.js";import"./centroid-5c988df3.js";import"./PooledRBush-3e149119.js";import"./quickselect-322ec8e1.js";import"./QueryEngine-cdb0ba2c.js";import"./normalizeUtils-27e29a72.js";import"./featureConversionUtils-03a03f40.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./QueryEngineResult-8f90b8dc.js";import"./utils-b34fcd9d.js";import"./generateRendererUtils-7252b5e6.js";import"./projectionSupport-aa5eaa0d.js";import"./json-48e3ea08.js";import"./SnappingCandidate-970faec6.js";import"./utils-511aa5f5.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-3de56d7f.js";import"./FieldsIndex-f104cc5f.js";import"./FeatureSet-d32b0eb8.js";import"./scaleUtils-93ad8d0c.js";import"./FeatureStore-3cfbdfa3.js";import"./BoundsStore-b9fa27cc.js";import"./EvaluateSceneLighting.glsl-189abc15.js";import"./SSAOBlur.glsl-8bf33b65.js";import"./ReadLinearDepth.glsl-9c87a54a.js";import"./SSAO.glsl-980b3771.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./objectResourceUtils-d556a033.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-903d1848.js";import"./vec33-e98769e8.js";import"./DefaultMaterial_COLOR_GAMMA-fe26fda8.js";import"./types-e1c0a5bf.js";import"./Version-2946cc03.js";import"./quat-3d5eec2d.js";import"./vec2f32-461e65a9.js";import"./lineSegment-10422ca0.js";import"./InterleavedLayout-984d67b2.js";import"./Matrix3PassUniform-ad9f953b.js";import"./MixExternalColor.glsl-ab0706f7.js";import"./ForwardLinearDepth.glsl-56affafd.js";import"./symbolColorUtils-b2b55883.js";import"./Slice.glsl-3b39b1f7.js";import"./Transform.glsl-6d2e2fd9.js";import"./ObjectAndLayerIdColor.glsl-ad468647.js";import"./OutputDepth.glsl-470c8e2a.js";import"./OutputHighlight.glsl-fbac199a.js";import"./VisualVariables.glsl-2b937327.js";import"./DiscardOrAdjustAlphaBlend.glsl-73258f38.js";import"./TransparencyPassType-a11868d2.js";import"./Normals.glsl-76f97814.js";import"./DefaultMaterial.glsl-885671b3.js";import"./VertexColor.glsl-8c022fa8.js";import"./VerticalOffset.glsl-87cbb2e3.js";import"./MultipassTerrainTest.glsl-bb236672.js";import"./DefaultTechniqueConfiguration-588e5ab2.js";import"./RealisticTree.glsl-b6cc03f2.js";import"./Heatmap.glsl-388d8513.js";import"./HeatmapDensity.glsl-92a06674.js";import"./heatmapTextureUtils-2627384f.js";import"./projectExtentUtils-79348579.js";import"./query-694f7287.js";import"./pbfQueryUtils-4adda2cc.js";import"./pbf-0e99a620.js";import"./queryZScale-1481fa99.js";import"./LercDecoder-4c9b29b3.js";import"./workers-6e30d081.js";import"./Connection-9a1cf8da.js";import"./Queue-b7d3cd48.js";import"./intl-65a3e389.js";import"./messages-2289086c.js";import"./EventedSet-be3adf97.js";import"./FeatureLayerView-e9178bab.js";import"./popupUtils-af06d391.js";import"./LayerView-bd9a2316.js";import"./RefreshableLayerView-7c1c2c75.js";import"./Cyclical-151bcc41.js";import"./CollectionFlattener-8f4d518b.js";import"./TileInfo-b0eb8c90.js";import"./widget-fb292a2f.js";import"./uuid-73213768.js";import"./executeQueryJSON-2fe748db.js";import"./RelationshipQuery-0dda77ad.js";import"./TopFeaturesQuery-cad97c37.js";import"./FeatureLayer-041050b6.js";import"./MultiOriginJSONSupport-aae3bc0c.js";import"./LayerFloorInfo-54b916a2.js";import"./FeatureLayerBase-ad5cfa1a.js";import"./HeightModelInfo-5d01231e.js";import"./editsZScale-6a661299.js";import"./APIKeyMixin-a0a8917a.js";import"./ArcGISService-21dc1d06.js";import"./CustomParametersMixin-47aab0a6.js";import"./EditBusLayer-e750b15b.js";import"./OrderedLayer-af7a6030.js";import"./PortalLayer-b2643f87.js";import"./PortalItem-bb7e98a6.js";import"./RefreshableLayer-7f154951.js";import"./ScaleRangeLayer-4be07229.js";import"./TemporalLayer-61549309.js";import"./TimeInfo-1d30dc7c.js";import"./FeatureTemplate-c1d0bb70.js";import"./FeatureType-34d71ade.js";import"./fieldProperties-e2eeb1d5.js";import"./versionUtils-fd91f55f.js";import"./styleUtils-a989c0af.js";import"./popupUtils-86dc6b94.js";import"./mat2d-2bbb5feb.js";import"./Basemap-af7f62f8.js";import"./loadAll-b5bfa7ab.js";import"./writeUtils-e686bd33.js";import"./layerUtils-f4d08f94.js";import"./TablesMixin-bc97d131.js";import"./GraphicsCollection-c37a9ffd.js";import"./enums-0fc02184.js";import"./TileStrategy-a90cd1af.js";import"./TileStore-00ac650f.js";import"./TileKey-5aef17b6.js";import"./rbush-8e36784a.js";import"./capabilities-302cf20d.js";import"./ElevationSamplerData-b87e0e50.js";import"./WaterSurface.glsl-c64cb8f1.js";import"./NormalUtils.glsl-c12729bf.js";import"./HUD.glsl-d3a072ad.js";import"./edgeProcessing-f733ce76.js";import"./deduplicate-03981d62.js";import"./projection-a69d43d0.js";import"./HUDMaterial.glsl-32cf019c.js";import"./sdfPrimitives-9858c36d.js";import"./floatRGBA-9ad35d39.js";import"./labelFormatUtils-d25d1d9e.js";import"./LineCallout.glsl-358ef89b.js";import"./earcut-58237617.js";import"./MeshComponent-a43522cc.js";import"./MarkerSizing.glsl-566261cc.js";import"./RibbonLine.glsl-0f7c2bbc.js";import"./LineStipple.glsl-ed22a88b.js";import"./callExpressionWithFeature-55effb7b.js";import"./LineMarker.glsl-8166d610.js";import"./NativeLine.glsl-742e9e29.js";import"./Path.glsl-9f6bab44.js";import"./ColorMaterial.glsl-3a70e4a7.js";import"./Pattern.glsl-67f4595b.js";import"./DefaultVertexAttributeLayouts-2bcf3941.js";import"./config-1337d16e.js";import"./workerHelper-e756ac3a.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./portalItemUtils-2ccd793f.js";import"./SceneModification-3462a3f4.js";import"./persistable-ad5d84e1.js";import"./SceneLayerWorker-02654016.js";const y=$();let e=class extends x(U(G(Q(H)))){constructor(){super(...arguments),this.type="scene-layer-3d",this.progressiveLoadFactor=1,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!0,this._interactiveEditingSessions=new Map,this._queryEngine=null}get i3slayer(){return this.layer}get layerPopupEnabled(){return this.layer.popupEnabled}get filter(){return this._get("filter")}set filter(t){this._set("filter",c.checkSupport(t)?t:null)}get viewFilter(){const t=this.filter,r=this.layerFilter;if(l(t)&&l(r))return null;const i=this._get("viewFilter");return l(i)?new c({layerFilter:r,viewFilter:t,layerFieldsIndex:this.layer.fieldsIndex,loadAsyncModule:s=>this._loadAsyncModule(s),addSqlFilter:(s,n)=>this.addSqlFilter(s,n,this.logError)}):(i.viewFilter=t,i.layerFilter=r,i)}get requiredFields(){var t;return((t=this._fieldsHelper)==null?void 0:t.requiredFields)??[]}get _floorFilterClause(){const t=E(this);return o(t)?b.create(t,this.layer.fieldsIndex):null}get _excludeObjectIdsSorted(){let t=this.layer.excludeObjectIds.toArray();return u()&&this.i3sOverrides.geometryChangedObjectIds.length>0&&(t=t.concat(this.i3sOverrides.geometryChangedObjectIds)),t.length?t.sort((r,i)=>r-i):null}get _objectQualitySettings(){var t,r,i;return(i=(r=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:r.sceneService)==null?void 0:i.object}get lodFactor(){var t;return((t=this._objectQualitySettings)==null?void 0:t.lodFactor)??1}get lodCrossfadeinDuration(){return this._objectQualitySettings.lodCrossfadeinDuration??0}get lodCrossfadeoutDuration(){return this._objectQualitySettings.lodCrossfadeoutDuration??0}get lodCrossfadeUncoveredDuration(){return this._objectQualitySettings.lodCrossfadeUncoveredDuration??0}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}initialize(){this._fieldsHelper=new j({layerView:this}),this.updatingHandles.add(()=>this.layer.rangeInfos,r=>this._rangeInfosChanged(r),d),this.updatingHandles.add(()=>this.layer.renderer,r=>this.updatingHandles.addPromise(this._rendererChange(r)),d);const t=()=>this._filterChange();this.updatingHandles.add(()=>this.parsedDefinitionExpression,t),this.updatingHandles.add(()=>this.filter,t),this.updatingHandles.add(()=>this._floorFilterClause,t),this.updatingHandles.add(()=>this._excludeObjectIdsSorted,t),this.updatingHandles.add(()=>o(this.viewFilter)?this.viewFilter.sortedObjectIds:null,t),this.updatingHandles.add(()=>o(this.viewFilter)?this.viewFilter.parsedWhereClause:null,t),this.updatingHandles.add(()=>[o(this.viewFilter)?this.viewFilter.parsedGeometry:null,o(this.filter)?this.filter.spatialRelationship:null,o(this.layer.filter)?this.layer.filter.spatialRelationship:null],()=>this._geometryFilterChange()),this.handles.add(this.layer.on("apply-edits",r=>this.updatingHandles.addPromise(r.result))),this.handles.add(this.layer.on("edits",r=>this._handleEdits(r)))}destroy(){this._fieldsHelper=v(this._fieldsHelper)}_rangeInfosChanged(t){t!=null&&t.length>0&&I.getLogger(this.declaredClass).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}createQuery(){const t={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return o(this.filter)?this.filter.createQuery(t):new a(t)}queryExtent(t,r){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(t),r==null?void 0:r.signal)}queryFeatureCount(t,r){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(t),r==null?void 0:r.signal)}queryFeatures(t,r){return this._ensureQueryEngine().executeQuery(this._ensureQuery(t),r==null?void 0:r.signal).then(i=>{if(!(i!=null&&i.features))return i;const s=this.layer;for(const n of i.features)n.layer=s,n.sourceLayer=s;return i})}queryObjectIds(t,r){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(t),r==null?void 0:r.signal)}_ensureQueryEngine(){return this._queryEngine||(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const t=C(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new L({layerView:this,priority:M.FEATURE_QUERY_ENGINE,spatialIndex:new R({featureAdapter:new D({objectIdField:this.layer.objectIdField,attributeStorageInfo:this.layer.attributeStorageInfo,getFeatureExtent:t}),toArray:()=>{const r=new Array;return this._forAllFeatures((i,s,n)=>(r.push({id:i,index:s,meta:n}),S.CONTINUE),null,h.ALL_IN_CLIPPING_AREA),r},forAllFeatures:(r,i)=>this._forAllFeatures((s,n,f)=>r({id:s,index:n,meta:f}),i,h.ALL_IN_CLIPPING_AREA),getFeatureExtent:t,sourceSpatialReference:N(this.layer),viewSpatialReference:this.view.spatialReference})})}highlight(t){const r=this._highlights;if(t instanceof a){const{set:i,handle:s}=r.acquireSet();return this.queryObjectIds(t).then(n=>r.setFeatureIds(i,n)),s}return super.highlight(t)}createInteractiveEditSession(t){return A(this._attributeEditingContext,t)}_createLayerGraphic(t){const r=new F(null,null,t);return r.layer=this.layer,r.sourceLayer=this.layer,r}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}getFilters(){const t=super.getFilters(),r=this._excludeObjectIdsSorted;return o(r)&&t.push(i=>P(r,!1,i)),this._floorFilterClause&&this.addSqlFilter(t,this._floorFilterClause,this.logError),this.addSqlFilter(t,this.parsedDefinitionExpression,this.logError),o(this.viewFilter)&&this.viewFilter.addFilters(t,this.view,this._controller.crsIndex,this._collection),t}isUpdating(){return super.isUpdating()||this.layerFilterUpdating||o(this.viewFilter)&&this.viewFilter.updating||o(this.i3sOverrides)&&this.i3sOverrides.updating}_ensureQuery(t){return this._addDefinitionExpressionToQuery(l(t)?this.createQuery():a.from(t))}get _attributeEditingContext(){return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:this._getObjectIdField(),forEachNode:t=>this._forAllNodes(r=>o(r)?t(r.node,r.featureIds):null),attributeStorageInfo:this.i3slayer.attributeStorageInfo,i3sOverrides:this.i3sOverrides,getAttributeData:t=>this.getAttributeData(t),setAttributeData:(t,r)=>this.setAttributeData(t,r),clearMemCache:()=>this.clearMemCache()}}_handleEdits(t){u()&&q(this._attributeEditingContext,t),O(this._attributeEditingContext,t)}get hasGeometryFilter(){const t=this.viewFilter;return o(t)&&o(t.parsedGeometry)}computeNodeFiltering(t){const r=this.viewFilter;return l(r)||r.isMBSGeometryVisible(t,this.view.spatialReference,this._controller.crsIndex)?g.Unmodified:g.Culled}};p([m()],e.prototype,"i3slayer",null),p([m(V)],e.prototype,"updatingProgress",void 0),p([m({type:w})],e.prototype,"filter",null),p([m({readOnly:!0})],e.prototype,"viewFilter",null),p([m(y.requiredFields)],e.prototype,"requiredFields",null),p([m(y.availableFields)],e.prototype,"availableFields",void 0),p([m()],e.prototype,"_fieldsHelper",void 0),p([m()],e.prototype,"_floorFilterClause",null),p([m()],e.prototype,"_excludeObjectIdsSorted",null),p([m()],e.prototype,"_objectQualitySettings",null),p([m()],e.prototype,"lodFactor",null),p([m()],e.prototype,"updatingProgressValue",null),e=p([_("esri.views.3d.layers.SceneLayerView3D")],e);const Cp=e;export{Cp as default};
