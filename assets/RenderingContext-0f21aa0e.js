import{aI as X,R as S,cz as b,aJ as Y,$ as T,r as K,p as nt,dV as at,a8 as q,bp as lt,bv as ot}from"./calcite-8912bd40.js";import{E as z,a as m}from"./Texture-563cf5e5.js";import{R as C,T as H,N as x,S as rt,I as k,O as v,t as P,Y as N,V as y,M as R,D as O,P as g,G as p,L as A,F as D,A as a,E,C as W,U as ht,_ as U,X as $,n as d,W as _t,r as Z,f as ut}from"./enums-e2e92c86.js";import{s as ct}from"./ProgramCache-f29c900e.js";import{o as Q,W as ft,i as dt,M as Et}from"./OrderIndependentTransparency-5f7257d7.js";import{x as w,E as G,f as V,i as J}from"./FramebufferObject-8b18fc0c.js";import{r as gt}from"./floatRGBA-ca2b39ca.js";import{t as tt}from"./doublePrecisionUtils-e3c3d0d8.js";import{t as j}from"./VertexElementDescriptor-2925c6af.js";import{r as pt,n as B,T as Ft}from"./webgl-debug-7f880832.js";import{m as Tt}from"./DefaultVertexAttributeLayouts-5f20d8dd.js";let et=class{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:C.ONE,dstRGB:C.ZERO,srcAlpha:C.ONE,dstAlpha:C.ZERO},this.blendEquation={mode:H.ADD,modeAlpha:H.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=x.BACK,this.frontFace=rt.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=k.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:x.FRONT_AND_BACK,func:k.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:x.FRONT_AND_BACK,fail:v.KEEP,zFail:v.KEEP,zPass:v.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.uniformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}};class bt{constructor(e){this._allocations=new Map,e?Error.stackTraceLimit=1/0:(this.add=()=>{},this.remove=()=>{})}add(e){this._allocations.set(e,new Error().stack)}remove(e){this._allocations.delete(e)}get information(){let e="";if(this._allocations.size>0){e+=`${this._allocations.size} live object allocations:
`;const s=new Map;this._allocations.forEach(i=>{s.set(i,(s.get(i)??0)+1)}),s.forEach((i,r)=>{const n=r.split(`
`);n.shift(),n.shift(),e+=`${i}: ${n.shift()}
`,n.forEach(h=>e+=`   ${h}
`)})}return e}}const Rt={RECORD_ALLOCATIONS:!1};class Bt{constructor(){for(this._current=new Array,this._max=new Array,this._allocations=new bt(Rt.RECORD_ALLOCATIONS);this._current.length<P.COUNT;)this._current.push(0),this._max.push(0)}resetMax(){for(this._max.length=0;this._max.length<this._current.length;)this._max.push(0)}increment(e,s){const i=++this._current[e];this._max[e]=Math.max(i,this._max[e]),this._allocations.add(s)}decrement(e,s){--this._current[e],this._allocations.remove(s)}get max(){return this._max}get current(){return this._current}get total(){return this.current.reduce((e,s)=>e+s,0)}get resourceInformation(){let e="";if(this.total>0){e+=`Live objects:
`;for(let s=0;s<P.COUNT;++s){const i=this._current[s];i>0&&(e+=`${P[s]}: ${i}
`)}}return e+=this._allocations.information,e}}let I=class{constructor(){this._result=!1}dispose(){this._program=X(this._program)}get result(){return S(this._program)&&(this._result=this._test(this._program),this.dispose()),this._result}};class mt extends I{constructor(e){super(),this._rctx=e,this._dummyProgram=null,this._rctx.type===b.WEBGL2&&Y("mac")&&Y("chrome")&&(this._program=this._prepareProgram(),this._dummyProgram=this._prepareDummyProgram())}dispose(){var e;super.dispose(),(e=this._dummyProgram)==null||e.dispose(),this._dummyProgram=null}_test(e){const s=this._rctx;s.resetState();const i=new w(s,{colorTarget:N.TEXTURE,depthStencilTarget:y.NONE},{target:R.TEXTURE_2D,wrapMode:O.CLAMP_TO_EDGE,pixelFormat:g.RGBA,dataType:p.UNSIGNED_BYTE,samplingMode:A.NEAREST,width:1,height:1}),r=G.createIndex(this._rctx,D.STATIC_DRAW,new Uint8Array([0]));s.bindFramebuffer(i),s.setViewport(0,0,1,1),s.useProgram(this._dummyProgram),s.bindBuffer(r,a.ELEMENT_ARRAY_BUFFER),s.drawElements(E.POINTS,1,W.UNSIGNED_BYTE,0),s.useProgram(e),s.bindVAO(null),s.drawArrays(E.TRIANGLES,0,258);const n=new Uint8Array(4);return i.readPixels(0,0,1,1,g.RGBA,p.UNSIGNED_BYTE,n),i.dispose(),r.dispose(),n[0]===255}_prepareProgram(){const s=`
    precision highp float;

    varying float triangleId;

    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));

    void main(void) {
      triangleId = floor(float(gl_VertexID)/3.0);

      vec3 position = triangleVertices[gl_VertexID % 3];
      float offset = triangleId / ${Q.float(85)};
      position.z = 0.5 - offset;

      gl_Position = vec4(position, 1.0);
    }
    `,i=`
    precision highp float;

    varying float triangleId;

    void main(void) {
      gl_FragColor = triangleId == ${Q.float(85)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
    }
    `;return this._rctx.programCache.acquire(s,i,new Map([]))}_prepareDummyProgram(){const e=`
    void main(void) {
      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);
    }`,s=`
    void main(void) {
      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
    }`;return this._rctx.programCache.acquire(e,s,new Map([]))}}class At extends I{constructor(e){super(),this._rctx=e,this._program=st(this._rctx,!1),this._obfuscated=st(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=X(this._obfuscated)}_test(e){if(Y("force-double-precision-obfuscation"))return!0;if(T(this._obfuscated))return!1;const s=this._runProgram(e),i=this._runProgram(this._obfuscated);return s!==0&&(i===0||s/i>5)}_runProgram(e){const s=this._rctx;s.resetState();const i=new w(s,{colorTarget:N.TEXTURE,depthStencilTarget:y.NONE},{target:R.TEXTURE_2D,wrapMode:O.CLAMP_TO_EDGE,pixelFormat:g.RGBA,dataType:p.UNSIGNED_BYTE,samplingMode:A.NEAREST,width:1,height:1}),r=G.createVertex(s,D.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),n=new V(s,new Map([["position",0]]),{geometry:[new j("position",2,W.UNSIGNED_SHORT,0,4)]},{geometry:r}),h=K(5633261287538229e-9,2626832878767164e-9,1.4349880495278358e6),l=K(563327146742708e-8,2.6268736381334523e6,1434963231608387e-9),o=new Float32Array(6);tt(h,o,3);const _=new Float32Array(6);tt(l,_,3),s.useProgram(e),e.setUniform3f("u_highA",o[0],o[2],o[4]),e.setUniform3f("u_lowA",o[1],o[3],o[5]),e.setUniform3f("u_highB",_[0],_[2],_[4]),e.setUniform3f("u_lowB",_[1],_[3],_[5]),s.bindFramebuffer(i),s.setViewport(0,0,1,1),s.bindVAO(n),s.drawArrays(E.TRIANGLE_STRIP,0,4);const u=new Uint8Array(4);i.readPixels(0,0,1,1,g.RGBA,p.UNSIGNED_BYTE,u),n.dispose(!1),r.dispose(),i.dispose();const c=(h[2]-l[2])/25,F=gt(u);return Math.abs(c-F)}}function st(t,e){const s=`

  precision highp float;

  attribute vec2 position;

  uniform vec3 u_highA;
  uniform vec3 u_lowA;
  uniform vec3 u_highB;
  uniform vec3 u_lowB;

  varying vec4 v_color;

  ${e?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}

  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION

  vec3 dpPlusFrc(vec3 a, vec3 b) {
    return mix(a, a + b, vec3(notEqual(b, vec3(0))));
  }

  vec3 dpMinusFrc(vec3 a, vec3 b) {
    return mix(vec3(0), a - b, vec3(notEqual(a, b)));
  }

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = dpPlusFrc(hiA, hiB);
    vec3 e = dpMinusFrc(t1, hiA);
    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;
    return t1 + t2;
  }

  #else

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = hiA + hiB;
    vec3 e = t1 - hiA;
    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;
    return t1 + t2;
  }

  #endif

  const float MAX_RGBA_FLOAT =
    255.0 / 256.0 +
    255.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 / 256.0;

  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);

  vec4 float2rgba(const float value) {
    // Make sure value is in the domain we can represent
    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);

    // Decompose value in 32bit fixed point parts represented as
    // uint8 rgba components. Decomposition uses the fractional part after multiplying
    // by a power of 256 (this removes the bits that are represented in the previous
    // component) and then converts the fractional part to 8bits.
    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);

    // Convert uint8 values (from 0 to 255) to floating point representation for
    // the shader
    const float toU8AsFloat = 1.0 / 255.0;

    return fixedPointU8 * toU8AsFloat;
  }

  void main() {
    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);

    v_color = float2rgba(val.z / 25.0);

    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);
  }
  `,i=`
  precision highp float;

  varying vec4 v_color;

  void main() {
    gl_FragColor = v_color;
  }
  `;return t.programCache.acquire(s,i,new Map([["position",0]]))}let xt=class extends I{constructor(e){var r,n,h,l,o;if(super(),this._rctx=e,!e.gl)return;if(e.type===b.WEBGL1)return void(this._result=!(!((r=e.capabilities.textureFloat)!=null&&r.textureFloat)||!((n=e.capabilities.colorBufferFloat)!=null&&n.textureFloat)));if(!((h=e.capabilities.textureFloat)!=null&&h.textureFloat&&((l=e.capabilities.colorBufferFloat)!=null&&l.textureFloat)&&((o=e.capabilities.colorBufferFloat)!=null&&o.floatBlend)))return;const s=`
    precision highp float;
    attribute vec2 a_pos;

    void main() {
      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
    }
    `,i=`
     precision highp float;

     void main() {
      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);
     }
    `;this._program=e.programCache.acquire(s,i,new Map([["a_pos",0]]))}_test(e){const s=this._rctx,i=new w(s,{colorTarget:N.TEXTURE,depthStencilTarget:y.NONE},{target:R.TEXTURE_2D,wrapMode:O.CLAMP_TO_EDGE,pixelFormat:g.RGBA,dataType:p.FLOAT,internalFormat:ht.RGBA32F,samplingMode:A.NEAREST,width:1,height:1}),r=G.createVertex(s,D.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),n=new V(s,new Map([["a_pos",0]]),{geometry:[new j("a_pos",2,W.UNSIGNED_SHORT,0,4)]},{geometry:r});s.useProgram(e);const h=s.getBoundFramebufferObject(),{x:l,y:o,width:_,height:u}=s.getViewport();s.bindFramebuffer(i),s.setViewport(0,0,1,1),s.bindVAO(n),s.drawArrays(E.TRIANGLE_STRIP,0,4);const c=ft({blending:dt});s.setPipelineState(c),s.drawArrays(E.TRIANGLE_STRIP,0,4),pt.init(s);const F=s.gl.getError();return s.setViewport(l,o,_,u),s.bindFramebuffer(h),n.dispose(!1),r.dispose(),i.dispose(),F!==1282||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}};class Ot extends I{constructor(e){super(),this._rctx=e;const s=`
      precision highp float;
      attribute vec2 a_pos;
      uniform highp sampler2D u_texture;
      varying vec4 v_color;

      float getBit(in float bitset, in int bitIndex) {
        float offset = pow(2.0, float(bitIndex));
        return mod(floor(bitset / offset), 2.0);
      }

      void main() {
        vec4 value = texture2D(u_texture, vec2(0.0));
        float bit = getBit(value.x * 255.0, 1);

        v_color = bit * vec4(1.0);
        gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
      }
      `,i=`
      precision highp float;
      varying vec4 v_color;

      void main() {
        gl_FragColor = v_color;
      }
      `;this._program=e.programCache.acquire(s,i,new Map([["a_pos",0]]))}_test(e){const s=this._rctx,i=new w(s,{colorTarget:N.TEXTURE,depthStencilTarget:y.NONE},{target:R.TEXTURE_2D,wrapMode:O.CLAMP_TO_EDGE,pixelFormat:g.RGBA,dataType:p.UNSIGNED_BYTE,samplingMode:A.NEAREST,width:1,height:1}),r=new Uint8Array(4),n=G.createVertex(s,D.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),h=new V(s,new Map([["a_position",0]]),{geometry:[new j("a_position",2,W.SHORT,0,4)]},{geometry:n});s.useProgram(e);const l=new z(s,{target:R.TEXTURE_2D,wrapMode:O.CLAMP_TO_EDGE,pixelFormat:g.RGBA,dataType:p.UNSIGNED_BYTE,samplingMode:A.NEAREST,width:1,height:1},new Uint8Array([2,255,0,0]));e.setUniform1i("u_texture",0),s.bindTexture(l,0);const o=s.getBoundFramebufferObject();s.bindFramebuffer(i),s.useProgram(e);const{x:_,y:u,width:c,height:F}=s.getViewport();s.setViewport(0,0,1,1),s.bindVAO(h),s.drawArrays(E.TRIANGLE_STRIP,0,4),s.setViewport(_,u,c,F),i.readPixels(0,0,1,1,g.RGBA,p.UNSIGNED_BYTE,r),h.dispose(!1),n.dispose(),i.dispose();const L=r[0]!==255||r[1]!==255||r[2]!==255||r[3]!==255;return L&&nt.getLogger("esri.views.webgl.testSamplerPrecision").warn(`A problem was detected with your graphics driver. Your driver does not appear to honor sampler precision specifiers, which may result in rendering issues due to numerical instability. We recommend ensuring that your drivers have been updated to the latest version. Applying lowp sampler workaround. [${r[0]}.${r[1]}.${r[2]}.${r[3]}]`),s.bindFramebuffer(o),L}}let St=class extends I{constructor(e){super(),this._rctx=e,this._image=new Image,this._image.src="data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='5' height='5' version='1.1' viewBox='0 0 5 5' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='5' height='5' fill='%23f00' fill-opacity='.5'/%3E%3C/svg%3E%0A",this._image.width=5,this._image.height=5,this._image.decode();const s=`
    precision highp float;

    attribute vec2 a_pos;
    varying vec2 v_uv;

    void main() {
      v_uv = a_pos;
      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
    }
    `,i=`
    precision highp float;

    varying vec2 v_uv;
    uniform sampler2D u_texture;

    void main() {
      gl_FragColor = texture2D(u_texture, v_uv);
    }
    `;this._program=e.programCache.acquire(s,i,new Map([["a_pos",0]]))}dispose(){super.dispose(),this._image.src=""}_test(e){const s=this._rctx;if(!s.gl)return e.dispose(),!0;const i=new w(s,{colorTarget:N.TEXTURE,depthStencilTarget:y.NONE},{target:R.TEXTURE_2D,wrapMode:O.CLAMP_TO_EDGE,pixelFormat:g.RGBA,dataType:p.UNSIGNED_BYTE,samplingMode:A.NEAREST,width:1,height:1}),r=G.createVertex(s,D.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),n=new V(s,new Map([["a_pos",0]]),Tt,{geometry:r}),h=new z(s,{dataType:p.UNSIGNED_BYTE,pixelFormat:g.RGBA,preMultiplyAlpha:!1,wrapMode:O.CLAMP_TO_EDGE,samplingMode:A.LINEAR},this._image);s.useProgram(e),s.bindTexture(h,0),e.setUniform1i("u_texture",0);const l=s.getBoundFramebufferObject(),{x:o,y:_,width:u,height:c}=s.getViewport();s.bindFramebuffer(i),s.setViewport(0,0,1,1),s.setClearColor(0,0,0,0),s.setBlendingEnabled(!1),s.clearSafe(U.COLOR_BUFFER_BIT),s.bindVAO(n),s.drawArrays(E.TRIANGLE_STRIP,0,4);const F=new Uint8Array(4);return i.readPixels(0,0,1,1,g.RGBA,p.UNSIGNED_BYTE,F),n.dispose(!1),r.dispose(),i.dispose(),h.dispose(),s.setViewport(o,_,u,c),s.bindFramebuffer(l),F[0]!==255}},Ct=class{constructor(e){this.rctx=e,this.floatBufferBlend=new xt(e),this.svgPremultipliesAlpha=new St(e),this.doublePrecisionRequiresObfuscation=new At(e),this.ignoresSamplerPrecision=new Ot(e),this.drawArraysRequiresIndicesTypeReset=new mt(e)}dispose(){this.ignoresSamplerPrecision.dispose(),this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}};function vt(t,e){if(e.disjointTimerQuery)return null;if(B(t))return{drawBuffers:t.drawBuffers.bind(t),MAX_DRAW_BUFFERS:t.MAX_DRAW_BUFFERS,MAX_COLOR_ATTACHMENTS:t.MAX_COLOR_ATTACHMENTS};if(e.drawBuffers)return null;const s=t.getExtension("WEBGL_draw_buffers");return s?{drawBuffers:s.drawBuffersWEBGL.bind(s),MAX_DRAW_BUFFERS:s.MAX_DRAW_BUFFERS_WEBGL,MAX_COLOR_ATTACHMENTS:s.MAX_COLOR_ATTACHMENTS_WEBGL}:null}function Mt(t){if(B(t))return t;const e=t.getExtension("ANGLE_instanced_arrays");return e?{drawArraysInstanced:e.drawArraysInstancedANGLE.bind(e),drawElementsInstanced:e.drawElementsInstancedANGLE.bind(e),vertexAttribDivisor:e.vertexAttribDivisorANGLE.bind(e)}:null}function Ut(t,e){if(e.compressedTextureETC)return null;const s=t.getExtension("WEBGL_compressed_texture_etc");return s?{COMPRESSED_R11_EAC:s.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:s.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:s.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:s.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:s.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:s.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}function Pt(t,e){if(e.compressedTextureS3TC)return null;const s=t.getExtension("WEBGL_compressed_texture_s3tc");return s?{COMPRESSED_RGB_S3TC_DXT1:s.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:s.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:s.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:s.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}function Nt(t,e){if(B(t))return{MIN:t.MIN,MAX:t.MAX};if(e.blendMinMax)return null;{const s=t.getExtension("EXT_blend_minmax");return s?{MIN:s.MIN_EXT,MAX:s.MAX_EXT}:null}}function yt(t,e){if(e.textureFilterAnisotropic)return null;const s=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return s?{MAX_TEXTURE_MAX_ANISOTROPY:s.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:s.TEXTURE_MAX_ANISOTROPY_EXT}:null}function Dt(t,e){if(B(t))return{textureFloat:!0,textureFloatLinear:!e.textureFloatLinear&&!!t.getExtension("OES_texture_float_linear"),textureHalfFloat:!0,textureHalfFloatLinear:!0,HALF_FLOAT:t.HALF_FLOAT,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F};if(t instanceof WebGLRenderingContext){const s=!e.textureHalfFloat&&t.getExtension("OES_texture_half_float");return{textureFloat:!e.textureFloat&&!!t.getExtension("OES_texture_float"),textureFloatLinear:!e.textureFloatLinear&&!!t.getExtension("OES_texture_float_linear"),textureHalfFloat:!!s,textureHalfFloatLinear:!e.textureHalfFloatLinear&&!!t.getExtension("OES_texture_half_float_linear"),HALF_FLOAT:s?s.HALF_FLOAT_OES:void 0}}return null}function wt(t,e){if(B(t)){const s=!e.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float")||!e.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),i=!e.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),r=!e.floatBlend&&!e.colorBufferFloat&&t.getExtension("EXT_float_blend");return s||i||r?{textureFloat:!!i,textureHalfFloat:!!s,floatBlend:!!r,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F}:null}if(t instanceof WebGLRenderingContext){const s=!e.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float"),i=!e.colorBufferFloat&&t.getExtension("WEBGL_color_buffer_float"),r=!e.floatBlend&&!e.colorBufferFloat&&t.getExtension("EXT_float_blend");return s||i||r?{textureFloat:!!i,textureHalfFloat:!!s,floatBlend:!!r,RGBA16F:s?s.RGBA16F_EXT:void 0,RGB16F:s?s.RGB16F_EXT:void 0,RGBA32F:i?i.RGBA32F_EXT:void 0}:null}return null}function M(t,e,s,i,r){if(i&&B(t))return!0;if(e[s])return!1;for(const n of r)if(t.getExtension(n))return!0;return!1}function Gt(t,e){if(!B(t)||e.textureNorm16)return null;const s=t.getExtension("EXT_texture_norm16");return s?{R16:s.R16_EXT,RG16:s.RG16_EXT,RGB16:s.RGB16_EXT,RGBA16:s.RGBA16_EXT,R16_SNORM:s.R16_SNORM_EXT,RG16_SNORM:s.RG16_SNORM_EXT,RGB16_SNORM:s.RGB16_SNORM_EXT,RGBA16_SNORM:s.RGBA16_SNORM_EXT}:null}function It(t,e){const s=e.loseContext&&t.getExtension("WEBGL_lose_context");return s?{loseRenderingContext:()=>s.loseContext()}:null}function Lt(t,e){if(B(t))return{createVertexArray:t.createVertexArray.bind(t),deleteVertexArray:t.deleteVertexArray.bind(t),bindVertexArray:t.bindVertexArray.bind(t)};if(e.vao)return null;const s=t.getExtension("OES_vertex_array_object")||t.getExtension("MOZ_OES_vertex_array_object")||t.getExtension("WEBKIT_OES_vertex_array_object");return s?{createVertexArray:s.createVertexArrayOES.bind(s),deleteVertexArray:s.deleteVertexArrayOES.bind(s),bindVertexArray:s.bindVertexArrayOES.bind(s)}:null}class Xt{constructor(e,s){this._gl=e,this._instancing=null,this._vertexArrayObject=null,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._textureFloat=null,this._colorBufferFloat=null,this._minMaxBlending=null,this._loseContext=null,this._drawBuffers=null,this._textureNorm16=null,this._depthTexture=null,this._standardDerivatives=null,this._shaderTextureLOD=null,this._fragDepth=null,this._textureFloatLinear=null,this._disabledExtensions=s.disabledExtensions||{},this._debugWebGLExtensions=s.debugWebGLExtensions||{}}get drawBuffers(){return this._drawBuffers||(this._drawBuffers=vt(this._gl,this._disabledExtensions)),this._drawBuffers}get instancing(){return this._instancing||(this._instancing=Mt(this._gl)),this._instancing}get vao(){return this._vertexArrayObject||(this._vertexArrayObject=Lt(this._gl,this._disabledExtensions)),this._vertexArrayObject}get compressedTextureETC(){return this._compressedTextureETC||(this._compressedTextureETC=Ut(this._gl,this._disabledExtensions)),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC||(this._compressedTextureS3TC=Pt(this._gl,this._disabledExtensions)),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic||(this._textureFilterAnisotropic=yt(this._gl,this._disabledExtensions)),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery||(this._disjointTimerQuery=Ft(this._gl,this._disabledExtensions)),this._disjointTimerQuery}get textureFloat(){return this._textureFloat||(this._textureFloat=Dt(this._gl,this._disabledExtensions)),this._textureFloat}get colorBufferFloat(){return this._colorBufferFloat||(this._colorBufferFloat=wt(this._gl,this._disabledExtensions)),this._colorBufferFloat}get blendMinMax(){return this._minMaxBlending||(this._minMaxBlending=Nt(this._gl,this._disabledExtensions)),this._minMaxBlending}get depthTexture(){return this._depthTexture===null&&(this._depthTexture=M(this._gl,this._disabledExtensions,"depthTexture",!0,["WEBGL_depth_texture","MOZ_WEBGL_depth_texture","WEBKIT_WEBGL_depth_texture"])),this._depthTexture}get standardDerivatives(){return this._standardDerivatives===null&&(this._standardDerivatives=M(this._gl,this._disabledExtensions,"standardDerivatives",!0,["OES_standard_derivatives"])),this._standardDerivatives}get shaderTextureLOD(){return this._shaderTextureLOD===null&&(this._shaderTextureLOD=M(this._gl,this._disabledExtensions,"shaderTextureLOD",!0,["EXT_shader_texture_lod"])),this._shaderTextureLOD}get fragDepth(){return this._fragDepth===null&&(this._fragDepth=M(this._gl,this._disabledExtensions,"fragDepth",!0,["EXT_frag_depth"])),this._fragDepth}get loseContext(){return this._loseContext||(this._loseContext=It(this._gl,this._debugWebGLExtensions)),this._loseContext}get textureNorm16(){return this._textureNorm16||(this._textureNorm16=Gt(this._gl,this._disabledExtensions)),this._textureNorm16}get textureFloatLinear(){return this._textureFloatLinear===null&&(this._textureFloatLinear=M(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"])),this._textureFloatLinear}enable(e){return this[e]}}let ie=class{constructor(t,e){this.gl=t,this.instanceCounter=new Bt,this.programCache=new ct(this),this._state=new et,this._numOfDrawCalls=0,this._numOfTriangles=0,this.type=B(t)?b.WEBGL2:b.WEBGL1,this._loadExtensions(),this.configure(e)}get gl2(){return this.type===b.WEBGL1?null:this.gl}configure(t){this._capabilities=new Xt(this.gl,t),this._parameters=this._loadParameters(t);const e=this.gl.getParameter(this.gl.VIEWPORT);this._state=new et,this._state.viewport={x:e[0],y:e[1],width:e[2],height:e[3]},this._stateTracker=new Et({setBlending:s=>{if(s){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(s.opRgb,s.opAlpha),this.setBlendFunctionSeparate(s.srcRgb,s.dstRgb,s.srcAlpha,s.dstAlpha);const i=s.color;this.setBlendColor(i.r,i.g,i.b,i.a)}else this.setBlendingEnabled(!1)},setCulling:s=>{s?(this.setFaceCullingEnabled(!0),this.setCullFace(s.face),this.setFrontFace(s.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:s=>{s?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(s.factor,s.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:s=>{s?(this.setDepthTestEnabled(!0),this.setDepthFunction(s.func)):this.setDepthTestEnabled(!1)},setStencilTest:s=>{if(s){this.setStencilTestEnabled(!0);const i=s.function;this.setStencilFunction(i.func,i.ref,i.mask);const r=s.operation;this.setStencilOp(r.fail,r.zFail,r.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:s=>{s?(this.setDepthWriteEnabled(!0),this.setDepthRange(s.zNear,s.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:s=>{s?this.setColorMask(s.r,s.g,s.b,s.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:s=>{s?this.setStencilWriteMask(s.mask):this.setStencilWriteMask(0)}}),this.enforceState(),X(this._driverTest),this._driverTest=new Ct(this)}dispose(){X(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(a.ARRAY_BUFFER),this.unbindBuffer(a.ELEMENT_ARRAY_BUFFER),this.type===b.WEBGL2&&(this.unbindBuffer(a.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(a.PIXEL_PACK_BUFFER),this.unbindBuffer(a.PIXEL_UNPACK_BUFFER),this.unbindBuffer(a.COPY_READ_BUFFER),this.unbindBuffer(a.COPY_WRITE_BUFFER)),this._state.textureUnitMap.length=0,m()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(t===!0?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){var t;(t=this._state.program)==null||t.stop(),this._state.program=null}externalTextureUnitUpdate(t,e){for(let s=0;s<t.length;++s)this._state.textureUnitMap[t[s]]=null;e>=0&&(this._state.activeTexture=e)}externalVertexArrayObjectUpdate(){const t=this.capabilities.vao;t&&(t.bindVertexArray(null),this._state.vertexArrayObject=null),this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,e,s,i){t===this._state.blendColor.r&&e===this._state.blendColor.g&&s===this._state.blendColor.b&&i===this._state.blendColor.a||(this.gl.blendColor(t,e,s,i),this._state.blendColor.r=t,this._state.blendColor.g=e,this._state.blendColor.b=s,this._state.blendColor.a=i,this._stateTracker.invalidateBlending())}setBlendFunction(t,e){t===this._state.blendFunction.srcRGB&&e===this._state.blendFunction.dstRGB||(this.gl.blendFunc(t,e),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=e,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,e,s,i){this._state.blendFunction.srcRGB===t&&this._state.blendFunction.srcAlpha===s&&this._state.blendFunction.dstRGB===e&&this._state.blendFunction.dstAlpha===i||(this.gl.blendFuncSeparate(t,e,s,i),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=s,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=i,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,e){this._state.blendEquation.mode===t&&this._state.blendEquation.modeAlpha===e||(this.gl.blendEquationSeparate(t,e),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=e,this._stateTracker.invalidateBlending())}setColorMask(t,e,s,i){this._state.colorMask.r===t&&this._state.colorMask.g===e&&this._state.colorMask.b===s&&this._state.colorMask.a===i||(this.gl.colorMask(t,e,s,i),this._state.colorMask.r=t,this._state.colorMask.g=e,this._state.colorMask.b=s,this._state.colorMask.a=i,this._stateTracker.invalidateColorWrite())}setClearColor(t,e,s,i){this._state.clearColor.r===t&&this._state.clearColor.g===e&&this._state.clearColor.b===s&&this._state.clearColor.a===i||(this.gl.clearColor(t,e,s,i),this._state.clearColor.r=t,this._state.clearColor.g=e,this._state.clearColor.b=s,this._state.clearColor.a=i)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(t===!0?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(t===!0?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,e){this._state.polygonOffset[0]===t&&this._state.polygonOffset[1]===e||(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=e,this.gl.polygonOffset(t,e),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(t===!0?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,e,s,i){this._state.scissorRect.x===t&&this._state.scissorRect.y===e&&this._state.scissorRect.width===s&&this._state.scissorRect.height===i||(this.gl.scissor(t,e,s,i),this._state.scissorRect.x=t,this._state.scissorRect.y=e,this._state.scissorRect.width=s,this._state.scissorRect.height=i)}setDepthTestEnabled(t){this._state.depthTest!==t&&(t===!0?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,e){this._state.depthRange.zNear===t&&this._state.depthRange.zFar===e||(this.gl.depthRange(t,e),this._state.depthRange.zNear=t,this._state.depthRange.zFar=e,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(t===!0?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,e,s){this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===e&&this._state.stencilFunction.mask===s||(this.gl.stencilFunc(t,e,s),this._state.stencilFunction.face=x.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=e,this._state.stencilFunction.mask=s,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,e,s,i){this._state.stencilFunction.face===t&&this._state.stencilFunction.func===e&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===i||(this.gl.stencilFuncSeparate(t,e,s,i),this._state.stencilFunction.face=t,this._state.stencilFunction.func=e,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=i,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,e,s){this._state.stencilOperation.face===x.FRONT_AND_BACK&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===e&&this._state.stencilOperation.zPass===s||(this.gl.stencilOp(t,e,s),this._state.stencilOperation.face=x.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=e,this._state.stencilOperation.zPass=s,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,e,s,i){this._state.stencilOperation.face===t&&this._state.stencilOperation.fail===e&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===i||(this.gl.stencilOpSeparate(t,e,s,i),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=e,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=i,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,e=!1){const s=this._state.activeTexture;return t>=0&&(e||t!==this._state.activeTexture)&&(this.gl.activeTexture($+t),this._state.activeTexture=t),s}clear(t){t&&this.gl.clear(t)}clearSafe(t,e=255){t&&(t&U.COLOR_BUFFER_BIT&&this.setColorMask(!0,!0,!0,!0),t&U.DEPTH_BUFFER_BIT&&this.setDepthWriteEnabled(!0),t&U.STENCIL_BUFFER_BIT&&this.setStencilWriteMask(e),this.gl.clear(t))}drawArrays(t,e,s){if(m()&&(this._numOfDrawCalls++,this._numOfTriangles+=it(t,s)),this.gl.drawArrays(t,e,s),m()){const i=J(this);i&&console.error("drawArrays:",i)}}drawElements(t,e,s,i){if(m()&&(this._numOfDrawCalls++,this._numOfTriangles+=it(t,e)),this.gl.drawElements(t,e,s,i),m()){const r=J(this);if(r){const n=this.getBoundVAO(),h=n==null?void 0:n.indexBuffer,l=n==null?void 0:n.vertexBuffers,o={indexBuffer:h,vertexBuffers:l},_={mode:t,count:e,type:s,offset:i},u=at(h,L=>L.size)??0,c=i+e,F=u<c?`. Buffer is too small. Attempted to draw index ${c} of ${u}`:"";console.error(`drawElements: ${r}${F}`,{args:_,vao:o})}}}logInfo(){m()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){m()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,e,s,i){s=Math.max(Math.round(s),1),i=Math.max(Math.round(i),1);const r=this._state.viewport;r.x===t&&r.y===e&&r.width===s&&r.height===i||(r.x=t,r.y=e,r.width=s,r.height=i,this.gl.viewport(t,e,s,i))}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){var e;this._state.program!==t&&((e=this._state.program)==null||e.stop(),this._state.program=t,this.gl.useProgram((t==null?void 0:t.glName)??null))}bindTexture(t,e,s=!1){(e>=this.parameters.maxTextureImageUnits||e<0)&&console.error("Input texture unit is out of range of available units!");const i=this._state.textureUnitMap[e];return T(t)||t.glName==null?(S(i)&&(this.setActiveTexture(e,s),this.gl.bindTexture(i.descriptor.target,null)),this._state.textureUnitMap[e]=null,i):s||i!==t?(this.setActiveTexture(e,s),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[e]=t,i):(t.isDirty&&(this.setActiveTexture(e,s),t.applyChanges()),i)}unbindTexture(t){if(!T(t))for(let e=0;e<this.parameters.maxTextureImageUnits;e++)this._state.textureUnitMap[e]===t&&(this.bindTexture(null,e),this._state.textureUnitMap[e]=null)}bindFramebuffer(t,e=!1){if(e||this._state.readFramebuffer!==t||this._state.drawFramebuffer!==t){if(T(t))return this.gl.bindFramebuffer(d.FRAMEBUFFER,null),this._state.readFramebuffer=null,void(this._state.drawFramebuffer=null);t.initializeAndBind(d.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,e,s=!1){const i=e===d.READ_FRAMEBUFFER,r=i?this._state.readFramebuffer:this._state.drawFramebuffer;(s||r!==t)&&(T(t)?this.gl.bindFramebuffer(e,null):t.initializeAndBind(e),i?this._state.readFramebuffer=q(t,null):this._state.drawFramebuffer=q(t,null))}blitFramebuffer(t,e,s=0,i=0,r=t.width,n=t.height,h=0,l=0,o=e.width,_=e.height,u=U.COLOR_BUFFER_BIT,c=A.NEAREST){this.bindFramebufferSeparate(t,d.READ_FRAMEBUFFER),this.bindFramebufferSeparate(e,d.DRAW_FRAMEBUFFER),this.gl.blitFramebuffer(s,i,r,n,h,l,o,_,u,c)}bindBuffer(t,e){if(t)switch(e??(e=t.bufferType),e){case a.ARRAY_BUFFER:this._state.vertexBuffer=f(this.gl,t,e,this._state.vertexBuffer);break;case a.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=f(this.gl,t,e,this._state.indexBuffer);break;case a.UNIFORM_BUFFER:this._state.uniformBuffer=f(this.gl,t,e,this._state.uniformBuffer);break;case a.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=f(this.gl,t,e,this._state.pixelPackBuffer);break;case a.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=f(this.gl,t,e,this._state.pixelUnpackBuffer);break;case a.COPY_READ_BUFFER:this._state.copyReadBuffer=f(this.gl,t,e,this._state.copyReadBuffer);break;case a.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=f(this.gl,t,e,this._state.copyWriteBuffer)}}bindRenderbuffer(t){const e=this.gl;t||(e.bindRenderbuffer(e.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(e.bindRenderbuffer(e.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,e){if(e>=this.parameters.maxUniformBufferBindings||e<0)return console.error("Uniform buffer binding point is out of range!"),null;const s=this._state.uniformBufferBindingPoints;let i=s[e];return T(i)&&(i={buffer:null,offset:0,size:0},s[e]=i),i}bindBufferBase(t,e,s){const i=this._getBufferBinding(t,e);T(i)||i.buffer===s&&i.offset===0&&i.size===0||(this.gl.bindBufferBase(t,e,s?s.glName:null),i.buffer=s,i.offset=0,i.size=0)}bindBufferRange(t,e,s,i,r){const n=this._getBufferBinding(t,e);if(!T(n)&&!(n.buffer===s&&n.offset===i&&n.size===r)){if(i%this._parameters.uniformBufferOffsetAlignment!=0)return void console.error("Uniform buffer binding offset is not a multiple of the context offset alignment");this.gl.bindBufferRange(t,e,s.glName,i,r),n.buffer=s,n.offset=i,n.size=r}}bindUBO(t,e,s,i){T(e)?this.bindBufferBase(a.UNIFORM_BUFFER,t,null):(m()&&(i??e.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),e.initialize(),s!==void 0&&i!==void 0?this.bindBufferRange(a.UNIFORM_BUFFER,t,e.buffer,s,i):this.bindBufferBase(a.UNIFORM_BUFFER,t,e.buffer))}unbindUBO(t){for(let e=0,s=this._state.uniformBufferBindingPoints.length;e<s;e++){const i=this._state.uniformBufferBindingPoints[e];S(i)&&i.buffer===t.buffer&&this.bindBufferBase(a.UNIFORM_BUFFER,e,null)}}unbindBuffer(t){switch(t){case a.ARRAY_BUFFER:this._state.vertexBuffer=f(this.gl,null,t,this._state.vertexBuffer);break;case a.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=f(this.gl,null,t,this._state.indexBuffer);break;case a.UNIFORM_BUFFER:this._state.uniformBuffer=f(this.gl,null,t,this._state.uniformBuffer);break;case a.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=f(this.gl,null,t,this._state.pixelPackBuffer);break;case a.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=f(this.gl,null,t,this._state.pixelUnpackBuffer);break;case a.COPY_READ_BUFFER:this._state.copyReadBuffer=f(this.gl,null,t,this._state.copyReadBuffer);break;case a.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=f(this.gl,null,t,this._state.copyWriteBuffer)}}bindVAO(t=null){T(t)?this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null):this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t)}async clientWaitAsync(t=ot(10)){const e=this.gl,s=e.fenceSync(_t.SYNC_GPU_COMMANDS_COMPLETE,0);if(!s)throw new Error("Client wait failed, could not create sync object");let i;this.instanceCounter.increment(P.Sync,s),e.flush();do await lt(t),i=e.clientWaitSync(s,0,0);while(i===Z.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(P.Sync,s),e.deleteSync(s),i===Z.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(t=d.FRAMEBUFFER){return t===d.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(a.ARRAY_BUFFER),this.unbindBuffer(a.ELEMENT_ARRAY_BUFFER),this.type===b.WEBGL2&&(this.unbindBuffer(a.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(a.PIXEL_PACK_BUFFER),this.unbindBuffer(a.PIXEL_UNPACK_BUFFER),this.unbindBuffer(a.COPY_READ_BUFFER),this.unbindBuffer(a.COPY_WRITE_BUFFER));for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(C.ONE,C.ZERO),this.setBlendEquation(H.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(x.BACK),this.setFrontFace(rt.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(k.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(k.ALWAYS,0,0),this.setStencilOp(v.KEEP,v.KEEP,v.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){var r,n,h;const t=this.capabilities.vao;t&&t.bindVertexArray(null);const{gl:e,gl2:s}=this;for(let l=0;l<this.parameters.maxVertexAttributes;l++)e.disableVertexAttribArray(l);if(this._state.vertexBuffer?e.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):e.bindBuffer(a.ARRAY_BUFFER,null),this._state.indexBuffer?e.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):e.bindBuffer(a.ELEMENT_ARRAY_BUFFER,null),S(s)){this._state.uniformBuffer?s.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):s.bindBuffer(a.UNIFORM_BUFFER,null);for(let l=0;l<this._parameters.maxUniformBufferBindings;l++){const o=this._state.uniformBufferBindingPoints[l];if(S(o)){const{buffer:_,offset:u,size:c}=o;_!==null?u===0&&c===0?s.bindBufferBase(a.UNIFORM_BUFFER,l,_.glName):s.bindBufferRange(a.UNIFORM_BUFFER,l,_.glName,u,c):s.bindBufferBase(a.UNIFORM_BUFFER,l,null)}}this._state.pixelPackBuffer?s.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):s.bindBuffer(a.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?s.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):s.bindBuffer(a.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?s.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):s.bindBuffer(a.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?s.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):s.bindBuffer(a.COPY_WRITE_BUFFER,null),s.bindFramebuffer(d.READ_FRAMEBUFFER,null),s.readBuffer(s.BACK),this._state.readFramebuffer&&(s.bindFramebuffer(d.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),s.readBuffer(ut.COLOR_ATTACHMENT0)),s.bindFramebuffer(d.DRAW_FRAMEBUFFER,((r=this._state.drawFramebuffer)==null?void 0:r.glName)??null)}else this._state.readFramebuffer=this._state.drawFramebuffer,e.bindFramebuffer(d.FRAMEBUFFER,((n=this._state.drawFramebuffer)==null?void 0:n.glName)??null);if(t&&this._state.vertexArrayObject){const l=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(l)}e.useProgram(((h=this._state.program)==null?void 0:h.glName)??null),e.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),e.bindRenderbuffer(e.RENDERBUFFER,this._state.renderbuffer?this._state.renderbuffer.glName:null),this._state.blend===!0?e.enable(this.gl.BLEND):e.disable(this.gl.BLEND),e.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),e.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),e.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),e.clearDepth(this._state.clearDepth),e.clearStencil(this._state.clearStencil),e.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),e.cullFace(this._state.cullFace),e.depthFunc(this._state.depthFunction),e.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),this._state.depthTest===!0?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthMask(this._state.depthWrite),e.frontFace(this._state.frontFace),e.lineWidth(1),this._state.faceCulling===!0?e.enable(e.CULL_FACE):e.disable(e.CULL_FACE),e.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),this._state.polygonOffsetFill===!0?e.enable(e.POLYGON_OFFSET_FILL):e.disable(e.POLYGON_OFFSET_FILL),e.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),this._state.scissorTest===!0?e.enable(e.SCISSOR_TEST):e.disable(e.SCISSOR_TEST),e.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),e.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),this._state.stencilTest===!0?e.enable(e.STENCIL_TEST):e.disable(e.STENCIL_TEST),e.stencilMask(this._state.stencilWriteMask);for(let l=0;l<this.parameters.maxTextureImageUnits;l++){e.activeTexture($+l),e.bindTexture(R.TEXTURE_2D,null),e.bindTexture(R.TEXTURE_CUBE_MAP,null),this.type===b.WEBGL2&&(e.bindTexture(R.TEXTURE_3D,null),e.bindTexture(R.TEXTURE_2D_ARRAY,null));const o=this._state.textureUnitMap[l];S(o)&&e.bindTexture(o.descriptor.target,o.glName)}e.activeTexture($+this._state.activeTexture);const i=this._state.viewport;e.viewport(i.x,i.y,i.width,i.height),this.resetInfo()}_loadExtensions(){this.type===b.WEBGL1&&this.gl.getExtension("OES_element_index_uint"),this.gl.getExtension("KHR_parallel_shader_compile")}_loadParameters(t){const e=this.capabilities.textureFilterAnisotropic,s=t.maxAnisotropy??1/0,i=this.type===b.WEBGL2,r=this.gl,n={versionString:this.gl.getParameter(this.gl.VERSION),maxVertexTextureImageUnits:this.gl.getParameter(this.gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxVertexAttributes:this.gl.getParameter(this.gl.MAX_VERTEX_ATTRIBS),maxMaxAnisotropy:e?Math.min(this.gl.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY),s):1,maxTextureImageUnits:this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),maxTextureSize:this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE),maxUniformBufferBindings:i?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0,maxVertexUniformBlocks:i?r.getParameter(r.MAX_VERTEX_UNIFORM_BLOCKS):0,maxFragmentUniformBlocks:i?r.getParameter(r.MAX_FRAGMENT_UNIFORM_BLOCKS):0,maxUniformBlockSize:i?r.getParameter(r.MAX_UNIFORM_BLOCK_SIZE):0,uniformBufferOffsetAlignment:i?r.getParameter(r.UNIFORM_BUFFER_OFFSET_ALIGNMENT):1,maxArrayTextureLayers:i?r.getParameter(r.MAX_ARRAY_TEXTURE_LAYERS):1,maxSamples:i?r.getParameter(r.MAX_SAMPLES):1};return z.TEXTURE_UNIT_FOR_UPDATES=n.maxTextureImageUnits-1,n}};function f(t,e,s,i){return e?i!==e&&t.bindBuffer(s,e.glName):t.bindBuffer(s,null),e}function it(t,e){switch(t){case E.POINTS:return 2*e;case E.TRIANGLES:return e/3;case E.TRIANGLE_STRIP:case E.TRIANGLE_FAN:return e-2;default:return 0}}export{ie as I};
