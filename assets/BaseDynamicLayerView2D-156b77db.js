import{bd as p,p as m,e,y as o,a as s}from"./calcite-8912bd40.js";import{a as h}from"./BitmapContainer-ba2ab01d.js";import{f as n}from"./LayerView2D-638c55c1.js";import{v as d}from"./ExportStrategy-cf49dd17.js";import{u as c}from"./LayerView-abbb3570.js";import{i as u}from"./RefreshableLayerView-e4d9e9c9.js";import"./index-00759e4a.js";import"./WGLContainer-9a32a1e6.js";import"./definitions-3ddd14a8.js";import"./FramebufferObject-8b18fc0c.js";import"./enums-e2e92c86.js";import"./Texture-563cf5e5.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLBrushVTLSymbol-a588e1a9.js";import"./DefaultVertexAttributeLayouts-5f20d8dd.js";import"./enums-b1d611e3.js";import"./number-b10bd8f5.js";import"./StyleDefinition-7d58136b.js";import"./enums-4b2a86a0.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./color-e324e445.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-646e3fe5.js";import"./Program-77209250.js";import"./MaterialKey-2c87dd06.js";import"./alignmentUtils-ae955d28.js";import"./utils-8b171ac3.js";import"./heatmapTextureUtils-56fc7bff.js";import"./Container-0797c889.js";import"./DisplayObject-87c37b69.js";import"./earcut-61f7b102.js";import"./MapView-ee19e5d5.js";import"./unitBezier-881ac1eb.js";import"./TileStrategy-90354c21.js";import"./TileStore-9a3ccc75.js";import"./TileInfoView-9dfc6c79.js";import"./ClipRect-59ab066a.js";import"./Bitmap-b524c69a.js";let t=class extends u(n(c)){update(r){this._strategy.update(r).catch(i=>{p(i)||m.getLogger(this.declaredClass).error(i)}),this.notifyChange("updating")}attach(){this._bitmapContainer=new h,this.container.addChild(this._bitmapContainer),this._strategy=new d({container:this._bitmapContainer,fetchSource:this.fetchBitmapData.bind(this),requestUpdate:this.requestUpdate.bind(this)})}detach(){this._strategy.destroy(),this._strategy=null,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}fetchBitmapData(r,i,a){return this.layer.fetchImageBitmap(r,i,a)}async doRefresh(){this.requestUpdate()}isUpdating(){return this._strategy.updating||this.updateRequested}};e([o()],t.prototype,"_strategy",void 0),e([o()],t.prototype,"updating",void 0),t=e([s("esri.views.2d.layers.BaseDynamicLayerView2D")],t);const Z=t;export{Z as default};
