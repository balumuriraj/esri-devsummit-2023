import{e as o,y as n,n as S,m as R,t as Q,B as it,c as zt}from"./cast-fcb46737.js";import{j as Ut}from"./Collection-910b6f71.js";import{n as kt}from"./Evented-a45c8b0f.js";import{T as Bt,g as Wt,t as h,r as p,p as wt,i as Jt,n as qt,s as P,o as xt}from"./typedArrayUtil-4d7bb04c.js";import"./ArrayPool-a8ee9378.js";import{n as y,t as vt,e as k}from"./vec3f64-2f9cef06.js";import{a as Ot,c as ut,b as Zt}from"./LineVisualElement-bec645bc.js";import{l as d}from"./Color-fb64d77d.js";import"./geometry-b7901087.js";import{l as ct,u as Tt,f as It}from"./LineOfSightAnalysisTarget-d9c2124d.js";import{j as Kt}from"./asyncUtils-437defc4.js";import{s as yt}from"./Error-ec6249b9.js";import{g as Qt}from"./promiseUtils-1e54421e.js";import{h as z,l as Xt,w as Yt}from"./reactiveUtils-4dabbb80.js";import{G as te,r as L,z as _t,g as J,u as q,x as ee,e as et,U as W,J as Vt}from"./vec3-e93e648f.js";import{c as Ct}from"./HandleOwner-9b396af1.js";import{u as ot,v as ie}from"./projection-290b739f.js";import{D as oe,F as Pt,j as re}from"./aaBoundingRect-193543b5.js";import{j as ne,d as Ft,t as se,k as ht,h as ft}from"./sphere-2af0d852.js";import{b as Lt,f as ae,g as le}from"./elevationInfoUtils-36e5dd0f.js";import{d as pe}from"./screenUtils-410d12c0.js";import{O as de}from"./dehydratedFeatures-0557137d.js";import{y as rt}from"./string-a318751c.js";import{x as ue,t as dt,bd as ce,bj as he,al as X,bk as me,bl as pt,bm as ge,bn as ve,b4 as Y,b8 as ye,bo as mt,bp as St}from"./index-3b3ee3bc.js";import{y as Rt,I as nt}from"./Scheduler-540208b6.js";import{w as _e}from"./Extent-da876e26.js";import{v as fe,b as be}from"./lineSegment-10422ca0.js";import{x as Et}from"./ElevationInfo-215614d8.js";import{i as Ce,A as we,a as Oe,d as At,s as Te,m as Ie}from"./analysisViewUtils-28eb767a.js";import{d as Ve,S as $t}from"./PointVisualElement-019eaa62.js";import{e as Pe}from"./mat4f64-1e28eae0.js";import"./nextTick-3ee5a785.js";import"./SimpleObservable-23231131.js";import"./Promise-376ab9f6.js";import"./mat4-44a0988f.js";import"./common-c186b691.js";import"./DefaultVertexAttributeLayouts-2bcf3941.js";import"./mat3-3fc68e72.js";import"./TileKey-5aef17b6.js";import"./vec2f64-30dc1443.js";import"./context-util-a4ce3a7b.js";import"./enums-64ab819c.js";import"./Texture-243be4d7.js";import"./mathUtils-b4bb77e2.js";import"./vec4-790471c0.js";import"./VertexElementDescriptor-2925c6af.js";import"./basicInterfaces-19ed850e.js";import"./VisualVariablePassParameters-d460182b.js";import"./VertexAttribute-9c5c630d.js";import"./FramebufferObject-a3b9c52c.js";import"./request-6fc81c4c.js";import"./preload-helper-3bce6601.js";import"./ShaderBuilder-a7d0da4e.js";import"./mat3f64-c6305894.js";import"./aaBoundingBox-657a9b82.js";import"./ViewingMode-5d7d590b.js";import"./Util-a48361c6.js";import"./vec4f64-e407da96.js";import"./colorUtils-639f4d25.js";import"./Polyline-ff2d7c6b.js";import"./typeUtils-35750739.js";import"./jsonMap-7b8332c9.js";import"./Clonable-545593ce.js";import"./persistable-ad5d84e1.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./uuid-73213768.js";import"./persistableUrlUtils-5f719c3b.js";import"./unitUtils-45d1147c.js";import"./Ellipsoid-89682c5e.js";import"./assets-8d3e737a.js";import"./zscale-89472cba.js";import"./byteSizeEstimations-f0cab514.js";import"./quatf64-7fd38d64.js";import"./quantizationUtils-4dd81f85.js";import"./jsonUtils-229211af.js";import"./Field-61ec9870.js";import"./enumeration-3a03bd31.js";import"./fieldType-f31285f7.js";import"./Graphic-f0e54e86.js";import"./PopupTemplate-40f3c9aa.js";import"./fieldUtils-7f54c4b1.js";import"./arcadeOnDemand-281a01eb.js";import"./number-27cf8195.js";import"./locale-30120714.js";import"./Identifiable-bfe1ff30.js";import"./symbols-f8232671.js";import"./CIMSymbol-539bd447.js";import"./Symbol-f93ed9fd.js";import"./opacityUtils-1f7f5126.js";import"./symbolLayerUtils3D-76acc268.js";import"./Symbol3DAnchorPosition2D-5726d999.js";import"./collectionUtils-803d9ba8.js";import"./Portal-2bb189b3.js";import"./Loadable-268c900a.js";import"./PortalGroup-8e41557a.js";import"./PortalUser-659cc1d2.js";import"./Cyclical-151bcc41.js";import"./CollectionFlattener-8f4d518b.js";import"./workers-6e30d081.js";import"./Connection-9a1cf8da.js";import"./Queue-b7d3cd48.js";import"./intl-65a3e389.js";import"./messages-2289086c.js";import"./TileInfo-b0eb8c90.js";import"./widget-fb292a2f.js";import"./executeQueryJSON-2fe748db.js";import"./normalizeUtils-27e29a72.js";import"./query-694f7287.js";import"./pbfQueryUtils-4adda2cc.js";import"./pbf-0e99a620.js";import"./OptimizedFeature-4ab8d380.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-1481fa99.js";import"./FeatureSet-d32b0eb8.js";import"./Query-b96bcde0.js";import"./TimeExtent-23e282b9.js";import"./RelationshipQuery-0dda77ad.js";import"./LegendOptions-010d0873.js";import"./utils-6786b611.js";import"./parser-498c8be0.js";import"./mat4f32-77b3d8ac.js";import"./ItemCache-fd3aceaf.js";import"./MemCache-18a255ed.js";import"./jsonUtils-f5674613.js";import"./UniqueValueRenderer-08f8851c.js";import"./diffUtils-68b89c71.js";import"./colorRamps-9dac42c1.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-18d58939.js";import"./lengthUtils-fa751420.js";import"./jsonUtils-0ff4ff96.js";import"./styleUtils-22b14a8b.js";import"./DictionaryLoader-1cbfea53.js";import"./LRUCache-64ec42ee.js";import"./deprecate-035b199e.js";import"./heatmapUtils-aaea3f32.js";import"./featureConversionUtils-03a03f40.js";import"./TopFeaturesQuery-cad97c37.js";import"./FeatureLayer-041050b6.js";import"./MultiOriginJSONSupport-aae3bc0c.js";import"./LayerFloorInfo-54b916a2.js";import"./FeatureLayerBase-ad5cfa1a.js";import"./HeightModelInfo-5d01231e.js";import"./arcgisLayerUrl-c09f09b4.js";import"./OperationalLayer-97084f13.js";import"./Layer-5ffe0eda.js";import"./editsZScale-6a661299.js";import"./APIKeyMixin-a0a8917a.js";import"./ArcGISService-21dc1d06.js";import"./BlendLayer-20d0571b.js";import"./CustomParametersMixin-47aab0a6.js";import"./EditBusLayer-e750b15b.js";import"./FeatureReductionLayer-d69dae71.js";import"./labelingInfo-607e66b8.js";import"./labelUtils-3108e8d7.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-af7a6030.js";import"./PortalLayer-b2643f87.js";import"./PortalItem-bb7e98a6.js";import"./RefreshableLayer-7f154951.js";import"./ScaleRangeLayer-4be07229.js";import"./TemporalLayer-61549309.js";import"./TimeInfo-1d30dc7c.js";import"./FeatureTemplate-c1d0bb70.js";import"./FeatureType-34d71ade.js";import"./fieldProperties-e2eeb1d5.js";import"./FieldsIndex-f104cc5f.js";import"./versionUtils-fd91f55f.js";import"./styleUtils-a989c0af.js";import"./popupUtils-86dc6b94.js";import"./mat2d-2bbb5feb.js";import"./Basemap-af7f62f8.js";import"./loadAll-b5bfa7ab.js";import"./writeUtils-e686bd33.js";import"./layerUtils-f4d08f94.js";import"./TablesMixin-bc97d131.js";import"./GraphicsCollection-c37a9ffd.js";import"./enums-0fc02184.js";import"./vec2-528adfe4.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./TileStrategy-a90cd1af.js";import"./TileStore-00ac650f.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./capabilities-302cf20d.js";import"./BoundsStore-b9fa27cc.js";import"./PooledRBush-3e149119.js";import"./plane-b575face.js";import"./scaleUtils-93ad8d0c.js";import"./ElevationSamplerData-b87e0e50.js";import"./PhysicallyBasedRendering.glsl-d457fff5.js";import"./View.glsl-3ce196d4.js";import"./FloatPassUniform-68d54f51.js";import"./Float4PassUniform-d7bdbc81.js";import"./RgbaFloatEncoding.glsl-52af7fcf.js";import"./Texture2DPassUniform-753de459.js";import"./vec3f32-c9aa289f.js";import"./Texture2DDrawUniform-053796dc.js";import"./PiUtils.glsl-db6418ee.js";import"./ReadLinearDepth.glsl-9c87a54a.js";import"./WaterSurface.glsl-c64cb8f1.js";import"./ForwardLinearDepth.glsl-56affafd.js";import"./Matrix3PassUniform-ad9f953b.js";import"./Slice.glsl-3b39b1f7.js";import"./Transform.glsl-6d2e2fd9.js";import"./OutputHighlight.glsl-fbac199a.js";import"./MultipassTerrainTest.glsl-bb236672.js";import"./NormalUtils.glsl-c12729bf.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-a11868d2.js";import"./EvaluateSceneLighting.glsl-189abc15.js";import"./SSAOBlur.glsl-8bf33b65.js";import"./ScreenSpacePass-d5e48a9b.js";import"./SSAO.glsl-980b3771.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-d3a072ad.js";import"./VerticalOffset.glsl-87cbb2e3.js";import"./objectResourceUtils-d556a033.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-903d1848.js";import"./vec33-e98769e8.js";import"./DefaultMaterial_COLOR_GAMMA-fe26fda8.js";import"./types-e1c0a5bf.js";import"./Version-2946cc03.js";import"./quat-3d5eec2d.js";import"./Texture-46c8c2cb.js";import"./TextureOnly.glsl-1ec9a9ef.js";import"./InterleavedLayout-984d67b2.js";import"./MixExternalColor.glsl-ab0706f7.js";import"./symbolColorUtils-b2b55883.js";import"./ObjectAndLayerIdColor.glsl-ad468647.js";import"./OutputDepth.glsl-470c8e2a.js";import"./VisualVariables.glsl-2b937327.js";import"./DiscardOrAdjustAlphaBlend.glsl-73258f38.js";import"./Normals.glsl-76f97814.js";import"./DefaultMaterial.glsl-885671b3.js";import"./VertexColor.glsl-8c022fa8.js";import"./DefaultTechniqueConfiguration-588e5ab2.js";import"./RealisticTree.glsl-b6cc03f2.js";import"./edgeProcessing-f733ce76.js";import"./deduplicate-03981d62.js";import"./projection-a69d43d0.js";import"./Octree-0a267ea2.js";import"./HUDMaterial.glsl-32cf019c.js";import"./sdfPrimitives-9858c36d.js";import"./floatRGBA-9ad35d39.js";import"./labelFormatUtils-d25d1d9e.js";import"./I3SUtil-f31a4571.js";import"./I3SBinaryReader-f4829435.js";import"./LineCallout.glsl-358ef89b.js";import"./earcut-58237617.js";import"./SnappingCandidate-970faec6.js";import"./MeshComponent-a43522cc.js";import"./MarkerSizing.glsl-566261cc.js";import"./RibbonLine.glsl-0f7c2bbc.js";import"./LineStipple.glsl-ed22a88b.js";import"./callExpressionWithFeature-55effb7b.js";import"./LineMarker.glsl-8166d610.js";import"./NativeLine.glsl-742e9e29.js";import"./Path.glsl-9f6bab44.js";import"./ColorMaterial.glsl-3a70e4a7.js";import"./Pattern.glsl-67f4595b.js";import"./LercDecoder-4c9b29b3.js";import"./config-1337d16e.js";import"./workerHelper-e756ac3a.js";import"./originUtils-1469eeaf.js";import"./portalItemUtils-2ccd793f.js";import"./ImageMaterial-7583559a.js";import"./ImageMaterial.glsl-befce2a1.js";let $=class extends R{constructor(e){super(e),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new d([3,252,111,1]),this.visibleOuterColor=new d([3,252,111,.15]),this.occludedInnerColor=new d([252,3,69,1]),this.occludedOuterColor=new d([252,3,69,.1]),this.undefinedInnerColor=new d([255,255,255,1]),this.undefinedOuterColor=new d([127,127,127,.2])}};o([n({type:Number})],$.prototype,"innerWidth",void 0),o([n({type:Number})],$.prototype,"outerWidth",void 0),o([n({type:d})],$.prototype,"visibleInnerColor",void 0),o([n({type:d})],$.prototype,"visibleOuterColor",void 0),o([n({type:d})],$.prototype,"occludedInnerColor",void 0),o([n({type:d})],$.prototype,"occludedOuterColor",void 0),o([n({type:d})],$.prototype,"undefinedInnerColor",void 0),o([n({type:d})],$.prototype,"undefinedOuterColor",void 0),$=o([S("esri.views.3d.analysis.LineOfSight.LineOfSightConfiguration")],$);let x=class extends R{constructor(e){super(e),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null,this.visible=void 0}};o([n()],x.prototype,"target",void 0),o([n()],x.prototype,"intersectedGraphic",void 0),o([n()],x.prototype,"intersectedLocation",void 0),o([n()],x.prototype,"elevationAlignedTargetLocation",void 0),o([n({type:Boolean})],x.prototype,"visible",void 0),x=o([S("esri.views.3d.analysis.LineOfSightAnalysisResult")],x);let F=class extends R{constructor(t){super(t),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:y(),observerSurfaceNormal:null,observerFeatureId:null,target:y(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:y(),targetAdjusted:y()},this.computationResult={start:y(),end:y(),intersection:y(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};o([n()],F.prototype,"target",void 0),o([n()],F.prototype,"elevationAlignedTargetLocation",void 0),o([n()],F.prototype,"inputPoints",void 0),o([n()],F.prototype,"computationResult",void 0),o([n()],F.prototype,"result",void 0),F=o([S("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],F);var bt;let A=bt=class extends R{constructor(t){super(t)}clone(){return new bt({type:this.type,id:rt(this.id),mapPoint:rt(this.mapPoint),renderPoint:vt(this.renderPoint),normal:rt(this.normal),ray:rt(this.ray),graphic:this.graphic})}equals(t){return this.type===t.type&&this.id===t.id&&Bt(this.mapPoint,t.mapPoint)&&te(this.renderPoint,t.renderPoint)&&Wt(this.normal,t.normal)&&ne(this.ray,t.ray)&&this.graphic===t.graphic}};o([n()],A.prototype,"type",void 0),o([n({constructOnly:!0})],A.prototype,"id",void 0),o([n({constructOnly:!0})],A.prototype,"mapPoint",void 0),o([n({constructOnly:!0})],A.prototype,"renderPoint",void 0),o([n({constructOnly:!0})],A.prototype,"normal",void 0),o([n({constructOnly:!0})],A.prototype,"graphic",void 0),o([n({constructOnly:!0})],A.prototype,"ray",void 0),A=bt=o([S("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],A);let Z=class extends R{constructor(t){super(t),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=ue(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=dt.MIN}getScreenPointIntersection(t){const e=pe(t,se.get()),i=ce(this.view.state.camera,e,gt);return this._getRayIntersection(i)}_getRayIntersection(t,e){if(h(t)||h(this.view.sceneIntersectionHelper))return null;this.intersector.options.store=dt.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(t,this.intersector,e);const i=this.intersector.results.min,r=y();if(!i.getIntersectionPoint(r))return null;const s=this.view.renderCoordsHelper.fromRenderCoords(r,this.view.spatialReference),l=vt(i.normal);if(he(i))return new A({type:X.OBJECT,id:`${i.target.layerUid}/${i.target.nodeIndex}/${i.target.componentIndex}`,mapPoint:s,renderPoint:r,normal:l,ray:ht(t),graphic:null});if(me(i))return new A({type:X.TERRAIN,id:i.target.lij.slice(),mapPoint:s,renderPoint:r,normal:l,ray:ht(t),graphic:null});const a=pt(i,this.view);if(p(a)){const g=a.layer,m=a.sourceLayer;let c;return m&&m.type==="scene"?c=de(a,m.objectIdField):c=a.uid,new A({type:X.OBJECT,id:`${g.uid}/${c}`,mapPoint:s,renderPoint:r,normal:l,ray:ht(t),graphic:a})}return null}updateFromGroundIntersection(t,e,i){const r=Le,s=Se,l=Re,a=Ee;L(s,t),this.view.renderCoordsHelper.worldUpAtPosition(s,l),_t(l,l);const g=this.view.basemapTerrain.visibleElevationBounds,m=g?Math.abs(g.max-g.min):100,c=e>=0?1:-1;J(a,l,c*(m+Math.abs(e))),q(r,s,a),ft(r,s,gt);const u=this._getRayIntersection(gt,{include:this._terrainIntersectionOptionsLayerUids});return p(u)?(J(a,l,c*e),q(i,u.renderPoint,a),vt(u.normal)):(L(i,t),null)}};o([n()],Z.prototype,"view",void 0),o([n()],Z.prototype,"intersector",void 0),Z=o([S("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],Z);const Le=y(),Se=y(),Re=y(),Ee=y(),gt=Ft(),Gt="esri.views.3d.analysis.LineOfSight.LineOfSightController",Ht=yt.getLogger(Gt);let f=class extends kt.EventedMixin(R){constructor(t){super(t),this.updateOnCameraChange=!0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new Ct,this._frameTask=Rt,this._handles=new Q,this._computationHandles=new Q,this._externalObserverUpdate=!0}initialize(){var e;const t=(e=this.view.resourceController)==null?void 0:e.scheduler;this._frameTask=t?t.registerTask(nt.LINE_OF_SIGHT_TOOL):Rt,this._intersector=new Z({view:this.view}),this._handles.add([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._handles.destroy(),this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(t){this._frameTask.priority=t}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(t){this.analysisViewData.observerEngineLocation=t}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(t){const e=t.computation,{inputPoints:i,computationResult:r}=e,{observerAdjusted:s,targetAdjusted:l}=i,{start:a,end:g}=r;L(a,s),L(g,l),this._canCompute(e)?this._computeIntersection(t):this._interpolateIntersection(t),e.notifyResultChanged(),this.emit("result-changed",{target:t.computation.target,result:e.result})}_updateAdjustedPointsFromFeatures(t){const e=this.view,{sceneIntersectionHelper:i}=e,{inputPoints:r}=t,{observerAdjusted:s,observerFeatureId:l,targetFeatureId:a,targetAdjusted:g}=r;if(h(l)&&h(a))return;const m=ee(s,g),c=this._intersector.intersector,u=ft(r.observer,r.target,Mt);c.options.store=dt.ALL,i.intersectToolIntersectorRay(u,c);let _=null,v=null,b=null,I=null;for(const w of c.results.all){const V=pt(w,this.view);if(h(V)||h(w.distanceInRenderSpace))continue;const T=ct(V);h(T)||(p(l)&&T===l&&(h(_)&&(_=this._getFeatureDistanceThreshold(w,e,m)),w.distanceInRenderSpace<_&&(b=w)),p(a)&&T===a&&(h(v)&&(v=this._getFeatureDistanceThreshold(w,e,m)),h(I)&&w.distanceInRenderSpace<m&&m-w.distanceInRenderSpace<v&&(I=w)))}p(b)&&b.getIntersectionPoint(s)&&(r.observerSurfaceNormal=b.getTransformedNormal(y())),p(I)&&I.getIntersectionPoint(g)&&(r.targetSurfaceNormal=I.getTransformedNormal(y()))}_getFeatureDistanceThreshold(t,e,i){if(ge(t)){const r=ve(t,e);if(p(r))return Math.min(r*$e,i)}return 1e-5*i}_adjustStartEndPositions(t){const e=this._screenPixelSize,i=this.view,{inputPoints:r}=t,{observer:s,observerSurfaceNormal:l,target:a,targetSurfaceNormal:g,observerAdjusted:m,targetAdjusted:c}=r,u=st;L(m,s),L(c,a),this._updateAdjustedPointsFromFeatures(t),p(l)?L(u,l):et(u,c,m);const _=e;_t(u,u),J(u,u,Math.min(_,1)),q(m,m,u),p(g)?L(u,g):et(u,m,c);const v=i.state.camera.computeScreenPixelSizeAt(c);_t(u,u),J(u,u,Math.min(v,1)),q(c,c,u)}_computeIntersection({computation:t,interpolationInfo:e}){const{view:i}=this,{sceneIntersectionHelper:r,renderCoordsHelper:s}=i;if(h(r))return;const l=this._intersector.intersector,{computationResult:a,inputPoints:g}=t,{observer:m,target:c}=g,{start:u,end:_}=a,v=ft(u,_,Mt);l.options.store=dt.MIN,r.intersectToolIntersectorRay(v,l);const b=l.results.min,I=a.intersection,w=st;let V=!0;if(p(b)&&b.getIntersectionPoint(I)){L(e.originalIntersection,I),L(e.originalObserver,u),L(e.originalTarget,_),s.fromRenderCoords(I,w,i.spatialReference);const E=1-W(_,c)/W(u,c);V=W(m,I)>=E*W(m,c)}const T=new _e(w,i.spatialReference);{const{result:E,target:j}=t;p(E)?(E.target=j,E.intersectedGraphic=V?null:pt(b,i),E.intersectedLocation=V?null:T,E.visible=V):t.result=new x({target:j,elevationAlignedTargetLocation:t.elevationAlignedTargetLocation,intersectedGraphic:V?null:pt(b,i),intersectedLocation:V?null:T,visible:V})}a.isValid=g.isValid=!0,a.isTargetVisible=V}_interpolateIntersection({computation:t,interpolationInfo:e}){const{computationResult:i,inputPoints:r}=t,{start:s,end:l,intersection:a}=i,{originalIntersection:g,originalObserver:m,originalTarget:c}=e;if(L(a,g),r.isValid){const u=st,_=W(m,g)/W(m,c);Vt(u,s,m),J(u,u,1-_),q(a,a,u),Vt(u,l,c),J(u,u,_),q(a,a,u),i.isValid=!0}else t.result=null,i.isValid=!1,i.isTargetVisible=!1}_canCompute(t){const e=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(h(e)||h(t.elevationAlignedTargetLocation)||h(i))return!1;const{observerAdjusted:r,targetAdjusted:s}=t.inputPoints,l=i.intersectsPoint(r),a=i.intersectsPoint(s);return l&&a}_onObserverPositionChange(t,e,i,r,s){if(this._externalObserverUpdate=s,h(t))return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(h(e))return Ot(this.analysis,t.spatialReference,Ht),void(this.analysisViewData.elevationAlignedObserver=null);const l=this._getEffectiveElevationInfo(e,i),{absoluteZ:a,elevation:g}=Lt(e.x,e.y,e.z,this.view.spatialReference,this.view,l),m=e.clone();m.z=a,this._effectiveObserverElevationMode=l.mode,this.analysisViewData.elevationAlignedObserver=m;const c=y();this.view.renderCoordsHelper.toRenderCoords(m,c),this._elevationAlignedObserverPositionRenderSpace=c,this._observerGroundOffsetRenderSpace=a-g,this._observerFeatureId=ct(r),this.priority=nt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(t,e,i,r,s){const{inputPoints:l}=t;switch(L(l.observer,e),l.observerFeatureId=s,l.observerSurfaceNormal=null,r){case"on-the-ground":case"relative-to-ground":{const a=this._intersector.updateFromGroundIntersection(l.observer,i,l.observer);h(l.observerFeatureId)&&(l.observerSurfaceNormal=a)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=nt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(t,e,i,r,s,l=!0){const a=t.inputPoints;if(l&&(a.isValid=!1),h(i))return p(e)&&Ot(this.analysis,e.spatialReference,Ht),t.elevationAlignedTargetLocation=null,void t.notifyInputPointsChanged();const g=this._getEffectiveElevationInfo(i,r),{absoluteZ:m,elevation:c}=Lt(i.x,i.y,i.z,this.view.spatialReference,this.view,g),u=i.clone();switch(u.z=m,t.elevationAlignedTargetLocation=u,this.view.renderCoordsHelper.toRenderCoords(t.elevationAlignedTargetLocation,a.target),a.targetFeatureId=ct(s),a.targetSurfaceNormal=null,g.mode){case"on-the-ground":case"relative-to-ground":{const _=this._intersector.updateFromGroundIntersection(a.target,m-c,a.target);h(a.targetFeatureId)&&(a.targetSurfaceNormal=_)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=nt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(t){return it([this._updatingHandles.add(()=>({computation:t,targetPosition:t.target.position,targetElevationInfo:t.target.elevationInfo,targetFeatureInfo:t.target.feature,projectedTargetPosition:ot(t.target.position,this.view.spatialReference)}),({computation:e,targetPosition:i,targetElevationInfo:r,targetFeatureInfo:s,projectedTargetPosition:l})=>{p(l.pending)?this._updatingHandles.addPromise(l.pending):this._onTargetPositionChange(e,i,l.geometry,r,s)},z)])}_connectComputationToObserver(t){return this._updatingHandles.add(()=>({computation:t,observer:this.analysisViewData.elevationAlignedObserver}),({computation:e})=>{this._externalObserverUpdate&&(e.inputPoints.isValid=!1,e.notifyInputPointsChanged())},z)}_connectComputationToRenderSpaceObserver(t){return this._updatingHandles.add(()=>({computation:t,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),({computation:e,observer:i,observerGroundOffset:r,observerElevationMode:s,observerFeatureId:l})=>{this._onObserverRenderSpacePositionChangeForComputation(e,i,r,s,l)},z)}_connectComputationToCamera(t){return this._updatingHandles.add(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:e})=>{!this.updateOnCameraChange||t.inputPoints.isValid&&!e||t.notifyInputPointsChanged()})}_connectComputationToSlicePlane(t){return this._updatingHandles.add(()=>this.view.slicePlane,()=>{t.inputPoints.isValid=!1,t.notifyInputPointsChanged()})}_connectComputationToElevation(t){const e=(i,r)=>{const s=this.analysis.observer,l=t.target;let a=null,g=null,m=null,c=null,u=null,_=null;if(p(s)&&p(s.position)){const v=ot(s.position,this.view.spatialReference);if(p(v.pending))return this._updatingHandles.addPromise(v.pending),void v.pending.finally(()=>e(i,r));a=v.geometry,g=s.elevationInfo,m=s.feature}if(p(l.position)){const v=ot(l.position,this.view.spatialReference);if(p(v.pending))return this._updatingHandles.addPromise(v.pending),void v.pending.finally(()=>e(i,r));c=v.geometry,u=l.elevationInfo,_=l.feature}h(a)&&h(c)||(ie(i,r,at,this.view.spatialReference),p(a)&&Pt(at,a)&&this._onObserverPositionChange(p(s)?s.position:null,a,g,m,!1),p(c)&&Pt(at,c)&&this._onTargetPositionChange(t,l.position,c,u,_,!1),p(a)&&p(c)&&re(at,a,c)&&t.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",i=>e(i.extent,i.spatialReference))}_connectComputationToTask(t){let e=qt;const i={computation:t,interpolationInfo:{originalIntersection:y(),originalObserver:y(),originalTarget:y()}};return it([this._updatingHandles.add(()=>t.inputPoints,()=>{e=wt(e),e=Kt(async r=>{await Qt(this._frameTask.schedule(()=>this._computeResult(i),r))})},{initial:!0,equals:()=>!1}),zt(()=>e=wt(e))])}_connectComputation(t){const e=this._computationHandles;e.has(t)||e.add([this._connectComputationToTarget(t),this._connectComputationToObserver(t),this._connectComputationToRenderSpaceObserver(t),this._connectComputationToCamera(t),this._connectComputationToSlicePlane(t),this._connectComputationToElevation(t),this._connectComputationToTask(t)],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_onComputationCollectionChange({added:t,removed:e}){for(const i of e)this._disconnectComputation(i);for(const i of t)this._connectComputation(i)}_onTargetCollectionChange({added:t,removed:e}){for(const i of e)this._removeTarget(i);for(const i of t)this._addTarget(i)}_onCursorTargetChange(t,e){p(e)&&this._removeTarget(e),p(t)&&this._addTarget(t)}_addTarget(t){this._computations.some(e=>e.target===t)||this._computations.add(new F({target:t}))}_removeTarget(t){const e=this._computations.findIndex(i=>i.target===t);this._computations.removeAt(e)}_connectObserver(){return it([this._updatingHandles.add(()=>({observerPosition:p(this.analysis.observer)?this.analysis.observer.position:null,projectedObserverPosition:ot(p(this.analysis.observer)?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:p(this.analysis.observer)?this.analysis.observer.elevationInfo:null,observerFeatureInfo:p(this.analysis.observer)?this.analysis.observer.feature:null}),({observerPosition:t,projectedObserverPosition:e,observerElevationInfo:i,observerFeatureInfo:r})=>{p(e.pending)?this._updatingHandles.addPromise(e.pending):this._onObserverPositionChange(t,e.geometry,i,r,!0)},z)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this._computations,t=>this._onComputationCollectionChange(t),{initial:!0,final:!0})}_connectTargets(){return it([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,t=>this._onTargetCollectionChange(t),{initial:!0,final:!0}),this._updatingHandles.add(()=>this.analysisViewData.cursorTarget,(t,e)=>{this._onCursorTargetChange(t,e)})])}get _isCameraDirty(){const t=this.analysisViewData.elevationAlignedObserver,{view:e}=this,{renderCoordsHelper:i}=e;if(h(t)||h(i))return!1;const r=st;i.toRenderCoords(t,r);const s=e.state.camera.computeScreenPixelSizeAt(r);return Math.abs((s-this._screenPixelSize)/this._screenPixelSize)>Ae}_getEffectiveElevationInfo(t,e){return t.hasZ?Jt(e,{mode:"absolute-height",offset:0}):{mode:"on-the-ground",offset:0}}};o([n({constructOnly:!0})],f.prototype,"analysis",void 0),o([n({constructOnly:!0})],f.prototype,"analysisViewData",void 0),o([n({constructOnly:!0})],f.prototype,"view",void 0),o([n()],f.prototype,"updating",null),o([n()],f.prototype,"priority",null),o([n()],f.prototype,"updateOnCameraChange",void 0),o([n()],f.prototype,"_computations",null),o([n()],f.prototype,"_elevationAlignedObserverPositionRenderSpace",null),o([n()],f.prototype,"_observerGroundOffsetRenderSpace",void 0),o([n()],f.prototype,"_effectiveObserverElevationMode",void 0),o([n()],f.prototype,"_observerFeatureId",void 0),o([n()],f.prototype,"_screenPixelSize",null),o([n({readOnly:!0})],f.prototype,"_updatingHandles",void 0),o([n()],f.prototype,"_frameTask",void 0),o([n()],f.prototype,"_isCameraDirty",null),f=o([S(Gt)],f);const Ae=.1,st=y(),Mt=Ft(),at=oe(),$e=.05;let M=class extends R{constructor(t){super(t),this.enabled=!0,this.glowColor=new d([255,127,0]),this.glowWidth=8,this.innerColor=new d([255,255,255]),this.innerWidth=.75,this.globalAlpha=.75}};o([n({type:Boolean})],M.prototype,"enabled",void 0),o([n({type:d})],M.prototype,"glowColor",void 0),o([n({type:Number})],M.prototype,"glowWidth",void 0),o([n({type:d})],M.prototype,"innerColor",void 0),o([n({type:Number})],M.prototype,"innerWidth",void 0),o([n({type:Number})],M.prototype,"globalAlpha",void 0),M=o([S("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightLaserLineConfiguration")],M);let K=class extends R{constructor(e){super(e),this.size=.5,this.color=new d([255,127,0,.75])}};o([n({type:Number})],K.prototype,"size",void 0),o([n({type:d})],K.prototype,"color",void 0),K=o([S("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightObserverConfiguration")],K);let G=class extends R{constructor(t){super(t),this.size=.5,this.visibleColor=new d([3,252,111,.75]),this.occludedColor=new d([252,3,69,.75]),this.undefinedColor=new d([127,127,127,.75])}};o([n({type:Number})],G.prototype,"size",void 0),o([n({type:d})],G.prototype,"visibleColor",void 0),o([n({type:d})],G.prototype,"occludedColor",void 0),o([n({type:d})],G.prototype,"undefinedColor",void 0),G=o([S("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTargetConfiguration")],G);class D extends R{constructor(e){super(e),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new d([3,252,111,1]),this.visibleOuterColor=new d([3,252,111,.15]),this.occludedInnerColor=new d([252,3,69,1]),this.occludedOuterColor=new d([252,3,69,.1]),this.undefinedInnerColor=new d([255,255,255,1]),this.undefinedOuterColor=new d([127,127,127,.2])}}o([n({type:Number})],D.prototype,"innerWidth",void 0),o([n({type:Number})],D.prototype,"outerWidth",void 0),o([n({type:d})],D.prototype,"visibleInnerColor",void 0),o([n({type:d})],D.prototype,"visibleOuterColor",void 0),o([n({type:d})],D.prototype,"occludedInnerColor",void 0),o([n({type:d})],D.prototype,"occludedOuterColor",void 0),o([n({type:d})],D.prototype,"undefinedInnerColor",void 0),o([n({type:d})],D.prototype,"undefinedOuterColor",void 0);let N=class extends R{constructor(t){super(t),this.laserLine=new M,this.observer=new K,this.target=new G,this.lineOfSight=new D}};o([n({type:M})],N.prototype,"laserLine",void 0),o([n({type:K})],N.prototype,"observer",void 0),o([n({type:G})],N.prototype,"target",void 0),o([n({type:D})],N.prototype,"lineOfSight",void 0),N=o([S("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightToolConfiguration")],N);function He(t,e){let i=null;const r=t.events.on("grab-changed",s=>{p(i)&&(i.remove(),i=null),s.action==="start"&&(i=t.disableDisplay()),e&&e(s)});return{remove(){p(i)&&i.remove(),r.remove()}}}function lt(t,e,i){return{geometry:ye(t,32,32),material:we(d.toUnitRGBA(e)),stateMask:i}}function Nt(t){const e=[];return t.customColor1&&e.push(lt(t.size,t.customColor1,Y.Custom1)),t.customColor2&&e.push(lt(t.size,t.customColor2,Y.Custom2)),t.customColor3&&e.push(lt(t.size,t.customColor3,Y.Custom3)),t.color&&e.push(lt(t.size,t.color)),e}function Me(t,e){const i=Nt(e),r=new Ce({view:t,renderObjects:i,elevationInfo:{mode:"absolute-height",offset:0}});return He(r),r}var U;(function(t){t.Ready="ready",t.Creating="creating",t.Created="created"})(U||(U={}));let O=class extends Oe{constructor(t){super(t),this.removeIncompleteOnCancel=!1,this.configuration=new N,this.analysisViewData=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new Q,this._handles=new Q,this._updatingHandles=new Ct,this._manipulatorHandles=new Q,this._targetTrackerManipulator=null}initialize(){this._intersector=new Z({view:this.view}),this._handles.add(Xt(()=>this.state,t=>{t===U.Created&&this.finishToolCreation()},Yt)),this._observerManipulator=this._createObserverManipulator(),this._handles.add([this._updatingHandles.add(()=>({...this.configuration.observer}),()=>this._updateObserverManipulatorStyle()),this._updatingHandles.add(()=>this.analysisViewData.elevationAlignedObserver,t=>this._onObserverLocationChange(t),z),this._updatingHandles.add(()=>({...this.configuration.laserLine}),()=>this._createVisualElements(),z),this._updatingHandles.add(()=>this._laserLineRendererDependencies(),t=>this._updateLaserLineRenderer(t)),this._connectComputations(),this._updatingHandles.addWhen(()=>!this._shouldRenderTracker,()=>this._clearCursorTracker(),z)])}destroy(){this._updatingHandles=P(this._updatingHandles),this._handles=P(this._handles),this._manipulatorHandles=P(this._manipulatorHandles),this._analysisHandles=P(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeVisualElements(),this._intersector=null,this._set("analysis",null)}get state(){return this.active?this.hasGrabbedManipulators?U.Created:U.Creating:p(this.analysis.observer)&&p(this.analysis.observer.position)?U.Created:U.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return p(this.analysisViewData)&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&this._latestPointerMovePointerType==="mouse"}get _shouldRenderTracker(){return this._showTracker&&p(this.analysis.observer)&&p(this.analysis.observer.position)&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(t){switch(t.type){case"immediate-double-click":this._doubleClickHandler(t);break;case"key-down":this._keyDownHandler(t);break;case"pointer-move":this._pointerMoveHandler(t)}}onInputEventAfter(t){t.type==="immediate-click"&&this._clickHandler(t)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,t=>this._onComputationsCollectionChange(t),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:e}){for(const i of e)this._disconnectComputation(i);for(const i of t)this._connectComputation(i)}_connectComputation(t){if(this.destroyed)return void yt.getLogger(this.declaredClass).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const e=this._analysisHandles;if(e.has(t))return;const i=this._createTargetManipulator(t.target);h(this._targetTrackerManipulator)&&i.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=i,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),e.add([this._updatingHandles.add(()=>this._getLineOfSightManipulatorStateDependencies(t),()=>this._updateManipulatorState(i,t),z),this._updatingHandles.add(()=>t.elevationAlignedTargetLocation,r=>this._onTargetLocationChange(r,i),z)],t)}_disconnectComputation(t){if(this.destroyed)return void yt.getLogger(this.declaredClass).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(t);const e=this._getTargetManipulator(t.target);p(e)&&(this.manipulators.remove(e),this._manipulatorHandles.remove(e),p(this._targetTrackerManipulator)&&this._targetTrackerManipulator===e&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=P(this.analysisViewData.cursorTarget)}_createManipulator(t,e,i){const r=Me(this.view,t);return r.metadata=i,this._manipulatorHandles.add([e(r),r.events.on("grab-changed",s=>this._manipulatorGrabChanged(r,s)),r.events.on("immediate-click",s=>this._manipulatorClick(r,s))],r),this.manipulators.add(r),r}_createTargetManipulator(t){const e=this.configuration,i={size:e.target.size,customColor1:e.target.visibleColor,customColor2:e.target.occludedColor,customColor3:e.target.undefinedColor,visible:!0},r={target:t,type:"target"},s=this._createManipulator(i,l=>this._createTargetManipulatorDragPipeline(l),r);return p(t.position)?s.elevationAlignedLocation=t.position:s.available=!1,s}_getTargetManipulator(t){let e=null;return this.manipulators.forEach(i=>{const r=i.manipulator;h(e)&&r.metadata.type==="target"&&r.metadata.target===t&&(e=r)}),e}_createObserverManipulator(){const t=this.configuration,e={size:t.observer.size,color:t.observer.color,visible:!0};return this._createManipulator(e,i=>this._createObserverManipulatorDragPipeline(i),{type:"observer",intersection:null})}_updateObserverManipulatorStyle(){const t=this._observerManipulator,e=this.configuration.observer,i={size:e.size,color:e.color,visible:t.available};t.renderObjects=Nt(i)}_screenToIntersection(){return t=>{const e=this._intersector.getScreenPointIntersection(t.screenEnd);return h(e)?null:{...t,intersection:e}}}_createTargetManipulatorDragPipeline(t){return At(t,(e,i,r)=>{i.next(this._screenToIntersection()).next(this._updateTargetDragStep(t)).next(()=>this._updateLaserLineRenderer()),r.next(this._cancelTargetDragStep(t.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(t){return At(t,(e,i,r)=>{i.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>this._updateLaserLineRenderer()),r.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return t=>(p(t.intersection.mapPoint)?(h(this.analysis.observer)&&(this.analysis.observer=new Tt),this._updateFromIntersection(this.analysis.observer,t.intersection)):this.analysis.observer=null,t)}_cancelObserverDragStep(){const t=p(this.analysis.observer)&&p(this.analysis.observer.position)?this.analysis.observer.clone():null;return e=>(this.analysis.observer=t,e)}_updateTargetDragStep(t){return e=>{this._updateFromIntersection(t.metadata.target,e.intersection);const i=e.intersection.mapPoint;return p(i)&&(t.elevationAlignedLocation=i),e}}_cancelTargetDragStep(t){const e=xt(t.position,i=>i.clone());return i=>(t.position=e,i)}_manipulatorGrabChanged(t,e){switch(e.action){case"start":this._grabbedManipulator=t;break;case"end":this._grabbedManipulator===t&&(this._grabbedManipulator=null)}}_updateManipulatorState(t,e){const{isValid:i,isTargetVisible:r}=e.computationResult;t.state=i?r?Y.Custom1:Y.Custom2:Y.Custom3}_getLineOfSightManipulatorStateDependencies(t){const{isValid:e,isTargetVisible:i}=t.computationResult;return{isValid:e,isTargetVisible:i}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:p(this.analysis.observer)?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(t=this._laserLineRendererDependencies()){const{laserlineVisualElement:e,grabbedManipulator:i,shouldRenderTracker:r,observerPosition:s,visible:l}=t;if(h(e))return;const a=p(i)?i:r&&p(s)?this._targetTrackerManipulator:null;this.configuration.laserLine.enabled&&p(a)&&l?(e.visible=!0,e.heightManifoldTarget=a.renderLocation,a!==this._observerManipulator?e.lineVerticalPlaneSegment=be(this._observerManipulator.renderLocation,a.renderLocation,De):e.lineVerticalPlaneSegment=null):(e.visible=!1,e.heightManifoldTarget=null,e.lineVerticalPlaneSegment=null)}_createVisualElements(){const t=this.configuration.laserLine;this._removeVisualElements(),this._laserlineVisualElement=new Ve({view:this.view,attached:!0,visible:this.visible,style:{glowColor:d.toUnitRGB(t.glowColor),glowWidth:t.glowWidth,innerColor:d.toUnitRGB(t.innerColor),innerWidth:t.innerWidth,globalAlpha:t.globalAlpha}})}_removeVisualElements(){p(this._laserlineVisualElement)&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_onObserverLocationChange(t){h(t)?this._observerManipulator.available=!1:(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=t)}_onTargetLocationChange(t,e){p(t)?(e.elevationAlignedLocation=t,e!==this._targetTrackerManipulator&&(e.available=!0)):e.available=!1}_addPointFromClickEvent(t){const e=this._intersector.getScreenPointIntersection(t);if(!h(e)&&!h(e.mapPoint))if(p(this.analysis.observer)&&p(this.analysis.observer.position)){this._clearCursorTracker();const i=new It;this._updateFromIntersection(i,e),this.analysis.targets.add(i)}else{const i=new Tt;this._updateFromIntersection(i,e),this.analysis.observer=i}}_clickHandler(t){this.active&&t.button!==mt.Right&&(this._addPointFromClickEvent(St(t)),t.stopPropagation())}_doubleClickHandler(t){this.active&&t.button!==mt.Right&&(this.stop(),t.stopPropagation())}_keyDownHandler(t){this.active&&t.key==="Escape"&&(this.stop(),t.stopPropagation())}_pointerMoveHandler(t){if(this.hasGrabbedManipulators||(this._latestPointerMovePointerType=t.pointerType,this._updateLaserLineRenderer(),!this._showTracker||h(this.analysis.observer)||h(this.analysis.observer.position)))return;const e=St(t),i=this._intersector.getScreenPointIntersection(e);p(i)&&p(i.mapPoint)&&(h(this.analysisViewData.cursorTarget)&&(this.analysisViewData.cursorTarget=new It),this._updateFromIntersection(this.analysisViewData.cursorTarget,i),this._updateLaserLineRenderer())}_updateFromIntersection(t,e){if(h(e.mapPoint))return t.position=null,t.elevationInfo=null,void(t.feature=null);switch(e.type){case X.OBJECT:if(p(e.graphic)){const r=e.graphic,s=ae(r);s.mode==="on-the-ground"&&(s.mode="relative-to-ground",s.offset=0),t.elevationInfo=new Et(s),t.feature=r}else t.elevationInfo=null,t.feature=null;break;case X.TERRAIN:case X.I3S:t.elevationInfo=new Et({mode:"on-the-ground"}),t.feature=null;break;default:t.elevationInfo=null,t.feature=null}const i=e.mapPoint.clone();i.z=le(this.view,i,{mode:"absolute-height",offset:0},t.elevationInfo),t.position=i}_manipulatorClick(t,e){if(t.metadata.type==="observer"||t.grabbing||t.dragging||e.button!==mt.Right||this.analysis.targets.length<=1)return;const{target:i}=t.metadata;this.analysis.targets.remove(i),e.stopPropagation()}get testInfo(){return{laserLineVisualElement:this._laserlineVisualElement}}};o([n({constructOnly:!0})],O.prototype,"view",void 0),o([n({constructOnly:!0})],O.prototype,"analysis",void 0),o([n({readOnly:!0})],O.prototype,"state",null),o([n({readOnly:!0})],O.prototype,"cursor",null),o([n()],O.prototype,"removeIncompleteOnCancel",void 0),o([n({readOnly:!0})],O.prototype,"updating",null),o([n({type:N})],O.prototype,"configuration",void 0),o([n({constructOnly:!0})],O.prototype,"analysisViewData",void 0),o([n({readOnly:!0})],O.prototype,"_showTracker",null),o([n()],O.prototype,"_latestPointerMovePointerType",void 0),o([n()],O.prototype,"_shouldRenderTracker",null),o([n()],O.prototype,"_laserlineVisualElement",void 0),o([n()],O.prototype,"_grabbedManipulator",void 0),O=o([S("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],O);const De=fe();let H=class extends R{constructor(e){super(e),this._lineOfSightVisualizations=[],this._computationHandles=new Q,this._updatingHandles=new Ct}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=P(this._updatingHandles),this._computationHandles=P(this._computationHandles),this._observerVisualElement=P(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get testInfo(){return{visualizations:this._lineOfSightVisualizations}}get _configuration(){return this.analysisViewData.configuration}_createLineOfSightVisualization(){const e=this._configuration,i=this.view,r={view:i,attached:!0,width:e.outerWidth,innerWidth:e.innerWidth},s=d.toUnitRGBA(e.visibleOuterColor),l=d.toUnitRGBA(e.visibleInnerColor),a=d.toUnitRGBA(e.occludedOuterColor),g=d.toUnitRGBA(e.occludedInnerColor),m=d.toUnitRGBA(e.undefinedOuterColor),c=d.toUnitRGBA(e.undefinedInnerColor),u={visibleLineVisualElement:new ut({...r,color:s,innerColor:l}),occludedLineVisualElement:new ut({...r,color:a,innerColor:g}),undefinedLineVisualElement:new ut({...r,color:m,innerColor:c}),targetVisualElement:new $t({view:i,attached:!0,...Dt,size:8})};return this._lineOfSightVisualizations.push(u),u}_destroyLineOfSightVisualization(e){e.visibleLineVisualElement=P(e.visibleLineVisualElement),e.occludedLineVisualElement=P(e.occludedLineVisualElement),e.undefinedLineVisualElement=P(e.undefinedLineVisualElement),e.targetVisualElement=P(e.targetVisualElement),this._lineOfSightVisualizations.splice(this._lineOfSightVisualizations.indexOf(e),1)}_updateLineOfSightVisualization(e,i,r){const s=this._configuration,{computationResult:l,inputPoints:a}=e,{start:g,end:m,intersection:c,isValid:u,isTargetVisible:_}=l,{observer:v}=a,b=Fe;b[12]=v[0],b[13]=v[1],b[14]=v[2];const I=et(ze,g,v),w=et(ke,m,v),V=et(xe,c,v),{visibleLineVisualElement:T,occludedLineVisualElement:E,undefinedLineVisualElement:j,targetVisualElement:B}=i,jt=h(this.analysisViewData.elevationAlignedObserver)||h(e.elevationAlignedTargetLocation),tt=this.visible&&!jt;T.visible=tt,E.visible=tt,j.visible=tt,B.visible=tt,B.attached=!r.interactiveAndEditable,tt&&(T.geometry=null,E.geometry=null,j.geometry=null,B.geometry=e.elevationAlignedTargetLocation,u?_?(T.geometry=[[k(I),k(w)]],T.transform=b,T.color=d.toUnitRGBA(s.visibleOuterColor),B.color=d.toUnitRGBA(s.visibleInnerColor)):(T.geometry=[[k(I),k(V)]],T.transform=b,T.color=d.toUnitRGBA(s.occludedOuterColor),E.geometry=[[k(V),k(w)]],E.transform=b,B.color=d.toUnitRGBA(s.occludedInnerColor)):(j.geometry=[[k(I),k(w)]],j.transform=b,B.color=d.toUnitRGBA(s.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(e){const{computationResult:i}=e,{occludedOuterColor:r,visibleOuterColor:s}=this._configuration;return{computationResult:i,occludedOuterColor:r,visibleOuterColor:s,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(e){const i=this._computationHandles;if(i.has(e))return;const r=this._createLineOfSightVisualization();i.add([this._updatingHandles.add(()=>this._getLineOfSightVisualizationDependencies(e),s=>this._updateLineOfSightVisualization(e,r,s),{initial:!0,equals:()=>!1}),zt(()=>this._destroyLineOfSightVisualization(r))],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,e=>this._onComputationsCollectionChange(e),{initial:!0,final:!0})}_onComputationsCollectionChange({added:e,removed:i}){for(const r of i)this._disconnectComputation(r);for(const r of e)this._connectComputation(r)}_createObserverVisualization(){const e=d.toUnitRGBA(this._configuration.visibleInnerColor),i=new $t({view:this.view,attached:!1,color:e,...Dt});this._observerVisualElement=i,this.addHandles(this._updatingHandles.add(()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible}),({observer:r,interactiveAndEditable:s,visible:l})=>{h(r)||s||!l?i.attached=!1:(i.geometry=r,this._observerVisualElement.attached=!0)},z))}};o([n({constructOnly:!0})],H.prototype,"analysis",void 0),o([n({constructOnly:!0})],H.prototype,"analysisViewData",void 0),o([n({constructOnly:!0})],H.prototype,"view",void 0),o([n({readOnly:!0})],H.prototype,"visible",null),o([n()],H.prototype,"updating",null),o([n()],H.prototype,"interactiveAndEditable",null),o([n()],H.prototype,"testInfo",null),o([n()],H.prototype,"_configuration",null),H=o([S("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],H);const Dt={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},ze=y(),ke=y(),xe=y(),Fe=Pe();let C=class extends Zt(kt.EventedMixin(R)){constructor(t){super(t),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new Ut,this.elevationAlignedObserver=null,this.configuration=new $,this.observerEngineLocation=y(),this.cursorTarget=null,this.editable=!0}initialize(){const t=this.view,e=this.analysis;this._analysisController=new f({analysis:e,analysisViewData:this,view:t}),this._analysisVisualization=new H({analysis:e,analysisViewData:this,view:t}),this.addHandles([this._analysisController.on("result-changed",i=>{i.target!==this.cursorTarget&&this.emit("result-changed",i)}),Te(this,O)])}destroy(){Ie(this),this._analysisController=P(this._analysisController),this._analysisVisualization=P(this._analysisVisualization)}get results(){return this.computations.map(t=>t.result)}get priority(){return this._analysisController.priority}set priority(t){this._analysisController.priority=t}get updating(){return p(this._analysisController)&&this._analysisController.updating||p(this._analysisVisualization)&&this._analysisVisualization.updating}getResultForTarget(t){const e=this.computations.find(i=>i.target===t);return xt(e,i=>i.result)}get testInfo(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};o([n({readOnly:!0})],C.prototype,"type",void 0),o([n({constructOnly:!0,nonNullable:!0})],C.prototype,"analysis",void 0),o([n()],C.prototype,"tool",void 0),o([n({readOnly:!0})],C.prototype,"results",null),o([n()],C.prototype,"priority",null),o([n()],C.prototype,"computations",void 0),o([n()],C.prototype,"elevationAlignedObserver",void 0),o([n()],C.prototype,"configuration",void 0),o([n()],C.prototype,"observerEngineLocation",void 0),o([n()],C.prototype,"cursorTarget",void 0),o([n()],C.prototype,"updating",null),o([n()],C.prototype,"editable",void 0),o([n()],C.prototype,"_analysisController",void 0),o([n()],C.prototype,"_analysisVisualization",void 0),C=o([S("esri.views.3d.analysis.LineOfSightAnalysisView3D")],C);const Js=C;export{Js as default};
