import{aC as Z,l as W,h as q,ab as ee,R as b,fJ as te,p as F,a1 as re,aI as se,cz as z,eN as x,$ as _,aD as ie,cd as oe,f8 as ae,he as ne,h3 as le,h5 as he,gW as me,d2 as pe,f2 as ce,gV as de,hf as ue,h6 as fe,j as ye,b as H,hg as _e,bd as ge,w as ve,hh as we,e as M,y as P,a as Re,Q as Ee,hi as $e}from"./calcite-c5ae4991.js";import{j as xe,u as Q}from"./MediaElementView-92573d58.js";import"./Rasterizer-80b3452a.js";import"./Container-c668494e.js";import{r as Me}from"./DisplayObject-b5071d0a.js";import"./BufferPool-0254decf.js";import{T as be}from"./enums-b1d611e3.js";import{a as Te,w as Ce}from"./WGLContainer-02cfa21d.js";import"./DefaultVertexAttributeLayouts-5f20d8dd.js";import"./color-b3c5ad11.js";import{P as Se,G as Ve,L as Ge,D as Ae,F as B}from"./enums-e2e92c86.js";import{E as De}from"./Texture-3d2bcec7.js";import"./Program-2221c2b1.js";import"./MaterialKey-1f5dd6e2.js";import"./utils-d084e5dc.js";import{E as N,f as qe}from"./FramebufferObject-d9042b3f.js";import"./number-b10bd8f5.js";import"./StyleDefinition-7d58136b.js";import"./enums-fb086c25.js";import"./MagnifierPrograms-da9be5c4.js";import"./OrderIndependentTransparency-5f7257d7.js";import"./floatRGBA-2dd25736.js";import"./webgl-debug-7f880832.js";import"./GraphicsView2D-8c34d0d6.js";import"./AttributeStoreView-1b0e85f6.js";import"./earcut-61f7b102.js";import{r as Pe}from"./vec3f32-01c06d8d.js";import{y as Ie,r as Ue}from"./TileStrategy-6e83933b.js";import"./TileInfoView-c5645cd8.js";import{e as je}from"./mat3f64-50f3b9f6.js";import{f as Le}from"./LayerView2D-88fd32e8.js";import{u as Oe}from"./LayerView-d2d47806.js";import"./index-9a6385f7.js";import"./normalizeUtilsSync-f9670301.js";import"./_commonjsHelpers-2f3e7994.js";import"./cimAnalyzer-d4821ac0.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./enums-4b2a86a0.js";import"./alignmentUtils-ae955d28.js";import"./definitions-3ddd14a8.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-94cb1131.js";import"./quantizationUtils-a15bd53f.js";import"./rasterizingUtils-5fc2770c.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLBrushVTLSymbol-67363b39.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-f39983cc.js";import"./heatmapTextureUtils-7a5994f1.js";import"./imageutils-2ddb774e.js";import"./Matcher-5075bcf0.js";import"./visualVariablesUtils-7d174a95.js";import"./visualVariablesUtils-42287514.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-33c077a4.js";import"./ExpandedCIM-e70c558e.js";import"./devEnvironmentUtils-5002a058.js";import"./TileStore-bec0a021.js";import"./CircularArray-9dd7c217.js";import"./ComputedAttributeStorage-fb7b7196.js";import"./arcadeTimeUtils-96d04d57.js";import"./executionError-fb3f283a.js";import"./centroid-b9acbfa6.js";import"./ZoomMomentumEstimator-f0d7cb62.js";import"./basicInterfaces-7449a8bf.js";import"./projectionSupport-c2c1f4b7.js";import"./json-48e3ea08.js";import"./schemaUtils-0cd2ddb2.js";import"./util-96b92fc2.js";import"./GraphicsView-6e05d316.js";import"./TiledDisplayObject-0268aa47.js";import"./MapView-c3d00f71.js";import"./unitBezier-881ac1eb.js";import"./ClipRect-c491bd72.js";const g=je();class We extends Me{constructor(e){super(),this.elementView=e,this.isWrapAround=!1,this.perspectiveTransform=Z(),this._vertices=new Float32Array(20),this._handles=[],this._handles.push(W(()=>this.elementView.element.opacity,t=>this.opacity=t,q),W(()=>[this.elementView.coords],()=>{this.requestRender()},q),ee(()=>this.elementView.element.loaded,()=>{const t=this.elementView.element;this.ready(),t.type==="video"&&b(t.content)&&this._handles.push(te(t.content,"play",()=>this.requestRender()))},q)),e.element.load().catch(t=>{F.getLogger("esri.views.2d.layers.MediaLayerView2D").error(new re("element-load-error","Element cannot be displayed",{element:e,error:t}))})}destroy(){this._handles.forEach(e=>e.remove()),this.texture=se(this.texture)}get dvsMat3(){return this.parent.dvsMat3}beforeRender(e){const{context:t}=e,s=this.elementView.element.content;if(b(s)){const i=s instanceof HTMLImageElement,o=s instanceof HTMLVideoElement,n=i?s.naturalWidth:o?s.videoWidth:s.width,a=i?s.naturalHeight:o?s.videoHeight:s.height;this._updatePerspectiveTransform(n,a),this.texture?o&&!s.paused&&(this.texture.setData(s),this.requestRender(),(t.type===z.WEBGL2||x(n)&&x(a))&&this.texture.generateMipmap()):(this.texture=new De(t,{pixelFormat:Se.RGBA,dataType:Ve.UNSIGNED_BYTE,samplingMode:Ge.LINEAR,wrapMode:Ae.CLAMP_TO_EDGE,width:n,height:a,preMultiplyAlpha:!0},s),(t.type===z.WEBGL2||x(n)&&x(a))&&this.texture.generateMipmap(),o&&!s.paused&&this.requestRender())}super.beforeRender(e)}_createTransforms(){return null}updateDrawCoords(e,t){const s=this.elementView.coords;if(_(s))return;const[i,o,n,a]=s.rings[0],c=this._vertices,{x:l,y:h}=e,d=t!==0;d?c.set([o[0]-l,o[1]-h,i[0]-l,i[1]-h,n[0]-l,n[1]-h,a[0]-l,a[1]-h,a[0]-l,a[1]-h,o[0]+t-l,o[1]-h,o[0]+t-l,o[1]-h,i[0]+t-l,i[1]-h,n[0]+t-l,n[1]-h,a[0]+t-l,a[1]-h]):c.set([o[0]-l,o[1]-h,i[0]-l,i[1]-h,n[0]-l,n[1]-h,a[0]-l,a[1]-h]),this.isWrapAround=d}getVAO(e,t,s){if(_(this.elementView.coords))return null;const i=this._vertices;if(this._vao)this._geometryVbo.setData(i);else{this._geometryVbo=N.createVertex(e,B.DYNAMIC_DRAW,i);const o=N.createVertex(e,B.STATIC_DRAW,new Uint16Array([0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1]));this._vao=new qe(e,s,t,{geometry:this._geometryVbo,tex:o})}return this._vao}_updatePerspectiveTransform(e,t){const s=this._vertices;xe(g,[0,0,e,0,0,t,e,t],[s[0],s[1],s[4],s[5],s[2],s[3],s[6],s[7]]),ie(this.perspectiveTransform,g[6]/g[8]*e,g[7]/g[8]*t)}}class ze extends Te{constructor(){super(...arguments),this._localOrigin=oe(0,0),this._viewStateId=-1,this._dvsMat3=ae(),this.requiresDedicatedFBO=!1}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"overlay",brushes:[Ce.overlay],target:()=>this.children,drawPhase:be.MAP});return[...super.prepareRenderPasses(e),t]}_updateMatrices(e){const{state:t}=e,{id:s,size:i,pixelRatio:o,resolution:n,rotation:a,viewpoint:c,displayMat3:l}=t;if(this._viewStateId===s)return;const h=Math.PI/180*a,d=o*i[0],f=o*i[1],{x:T,y:w}=c.targetGeometry,C=ne(T,t.spatialReference);this._localOrigin.x=C,this._localOrigin.y=w;const S=n*d,R=n*f,m=le(this._dvsMat3);he(m,m,l),me(m,m,pe(d/2,f/2)),ce(m,m,Pe(d/S,-f/R,1)),de(m,m,-h),this._viewStateId=s}_updateOverlays(e,t){const{state:s}=e,{rotation:i,spatialReference:o,worldScreenWidth:n,size:a,viewpoint:c}=s,l=this._localOrigin;let h=0;const d=ue(o);if(d&&o.isWrappable){const f=a[0],T=a[1],w=180/Math.PI*i,C=Math.abs(Math.cos(w)),S=Math.abs(Math.sin(w)),R=Math.round(f*C+T*S),[m,V]=d.valid,u=fe(o),{x:I,y:Y}=c.targetGeometry,J=[I,Y],G=[0,0];s.toScreen(G,J);const E=[0,0];let A;A=R>n?.5*n:.5*R;const U=Math.floor((I+.5*u)/u),K=m+U*u,X=V+U*u,D=[G[0]+A,0];s.toMap(E,D),E[0]>X&&(h=u),D[0]=G[0]-A,s.toMap(E,D),E[0]<K&&(h=-u);for(const $ of t){const j=$.elementView.bounds;if(_(j))continue;const[L,,O]=j;L<m&&O>m?$.updateDrawCoords(l,u):O>V&&L<V?$.updateDrawCoords(l,-u):$.updateDrawCoords(l,h)}}else for(const f of t)f.updateDrawCoords(l,h)}}let y=class extends Le(Oe){constructor(){super(...arguments),this._overlayContainer=null,this._fetchQueue=null,this._tileStrategy=null,this._elementReferences=new Map,this._debugGraphicsView=null,this.layer=null,this.elements=new ye}attach(){this.addAttachHandles([H(()=>this.layer.effectiveSource,"refresh",()=>{for(const r of this._tileStrategy.tiles)this._updateTile(r);this.requestUpdate()}),H(()=>this.layer.effectiveSource,"change",({element:r})=>this._elementUpdateHandler(r))]),this._overlayContainer=new ze,this.container.addChild(this._overlayContainer),this._fetchQueue=new Ie({tileInfoView:this.view.featuresTilingScheme,concurrency:10,process:(r,e)=>this._queryElements(r,e)}),this._tileStrategy=new Ue({cachePolicy:"purge",resampling:!0,acquireTile:r=>this._acquireTile(r),releaseTile:r=>this._releaseTile(r),tileInfoView:this.view.featuresTilingScheme}),this.requestUpdate()}detach(){var r;this.elements.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.destroy(),this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this._elementReferences.clear(),(r=this._debugGraphicsView)==null||r.destroy()}supportsSpatialReference(r){return!0}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}update(r){var e;this._tileStrategy.update(r),(e=this._debugGraphicsView)==null||e.update(r)}async hitTest(r,e){const t=[],s=r.normalize(),i=[s.x,s.y];for(const{projectedElement:{normalizedCoords:o,element:n}}of this._elementReferences.values())b(o)&&_e(o.rings,i)&&t.push({type:"media",element:n,layer:this.layer,mapPoint:r});return t.reverse()}canResume(){return this.layer.source!=null&&super.canResume()}async doRefresh(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(r=>this._updateTile(r))}_acquireTile(r){const e=new He(r.clone());return this._updateTile(e),e}_updateTile(r){this.updatingHandles.addPromise(this._fetchQueue.push(r.key).then(e=>{const[t,s]=r.setElements(e);this._referenceElements(r,t),this._dereferenceElements(r,s),this.requestUpdate()},e=>{ge(e)||F.getLogger(this.declaredClass).error(e)}))}_releaseTile(r){this._fetchQueue.abort(r.key.id),r.elements&&this._dereferenceElements(r,r.elements),this.requestUpdate()}async _queryElements(r,e){const t=this.layer.effectiveSource;if(_(t))return[];this.view.featuresTilingScheme.getTileBounds(p,r,!0);const s=new ve({xmin:p[0],ymin:p[1],xmax:p[2],ymax:p[3],spatialReference:this.view.spatialReference});return t.queryElements(s,e)}_referenceElements(r,e){const t=this.layer.source;if(!_(t))for(const s of e)this._referenceElement(r,s)}_referenceElement(r,e){we(this._elementReferences,e.uid,()=>{const t=new Q({element:e,spatialReference:this.view.spatialReference}),s=new We(t);return this._overlayContainer.addChild(s),this.elements.add(e),{tiles:new Set,projectedElement:t,overlay:s,debugGraphic:null}}).tiles.add(r)}_dereferenceElements(r,e){for(const t of e)this._dereferenceElement(r,t)}_dereferenceElement(r,e){var s;const t=this._elementReferences.get(e.uid);t.tiles.delete(r),t.tiles.size||(this._overlayContainer.removeChild(t.overlay),t.overlay.destroy(),t.projectedElement.destroy(),this._elementReferences.delete(e.uid),this.elements.remove(e),(s=this._debugGraphicsView)==null||s.graphics.remove(t.debugGraphic))}_elementUpdateHandler(r){var s;let e=this._elementReferences.get(r.uid);if(e){const i=e.projectedElement.normalizedCoords;if(_(i))return this._overlayContainer.removeChild(e.overlay),e.overlay.destroy(),e.projectedElement.destroy(),this._elementReferences.delete(r.uid),this.elements.remove(r),void((s=this._debugGraphicsView)==null?void 0:s.graphics.remove(e.debugGraphic));const o=[],n=[];for(const a of this._tileStrategy.tiles){const c=k(this.view.featuresTilingScheme,a,i);e.tiles.has(a)?c||n.push(a):c&&o.push(a)}for(const a of o)this._referenceElement(a,r);for(const a of n)this._dereferenceElement(a,r);return e=this._elementReferences.get(r.uid),void((e==null?void 0:e.debugGraphic)&&(e.debugGraphic.geometry=e.projectedElement.normalizedCoords,this._debugGraphicsView.graphicUpdateHandler({graphic:e.debugGraphic,property:"geometry"})))}const t=new Q({element:r,spatialReference:this.view.spatialReference}).normalizedCoords;if(b(t))for(const i of this._tileStrategy.tiles)k(this.view.featuresTilingScheme,i,t)&&this._referenceElement(i,r)}};M([P()],y.prototype,"_fetchQueue",void 0),M([P()],y.prototype,"layer",void 0),M([P({readOnly:!0})],y.prototype,"elements",void 0),y=M([Re("esri.views.2d.layers.MediaLayerView2D")],y);const p=Ee(),v={xmin:0,ymin:0,xmax:0,ymax:0};function k(r,e,t){return r.getTileBounds(p,e.key,!0),v.xmin=p[0],v.ymin=p[1],v.xmax=p[2],v.ymax=p[3],$e(v,t)}class He{constructor(e){this.key=e,this.elements=null,this.isReady=!1,this.visible=!0}setElements(e){const t=[],s=new Set(this.elements);this.elements=e;for(const i of e)s.has(i)?s.delete(i):t.push(i);return this.isReady=!0,[t,Array.from(s)]}destroy(){}}const dr=y;export{dr as default};
